[{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cards","title":"Contributing to cards","text":"outlines propose change {cards}.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cards","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cards","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cards","text":"Fork package clone onto computer. Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). Make changes, commit git, create PR. title PR briefly describe change. body PR contain Closes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code Style","title":"Contributing to cards","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept. helper/non-exported function named period prefix, e.g. .helper_function(). helper/non-exported functions documented roxygen2 indicated . Include #' @keywords internal mark function internal. helper functions appear examples, need use cards::: prefix, e.g. #' @example cards:::.helper_function()","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"error-handling","dir":"","previous_headings":"Bigger changes","what":"Error Handling","title":"Contributing to cards","text":"use {cli} package signal errors, warnings, messages users. call cli::cli_abort(), call argument must used correctly message users calling function. general function can re-used check, example, user-passed argument values, shall placed R\\import-standalone-checks.R. checks file re-used among multiple projects. need modify file, please review section standalone scripts.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"package-dependencies","dir":"","previous_headings":"Bigger changes","what":"Package Dependencies","title":"Contributing to cards","text":"Generally, additional package dependencies may added. code add readable using, example, using {tidyverse} function, consider adding shim function one standalone scripts. See section standalone scripts details.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"standalone-scripts","dir":"","previous_headings":"Bigger changes","what":"Standalone Scripts","title":"Contributing to cards","text":"package utilizes standalone scripts used across projects. scripts make available shims common tidyverse functions, can use function without depending package. \"checks\" script series functions check argument values supplied users, provides informative error messages values valid. make changes files directly: rather, update files source location. import-standalone-purrr.R: https://github.com/r-lib/rlang/blob/main/R/standalone-purrr.R import-standalone-forcats.R https://github.com/ddsjoberg/standalone/blob/main/R/standalone-forcats.R import-standalone-stringr.R https://github.com/ddsjoberg/standalone/blob/main/R/standalone-stringr.R import-standalone-checks.R https://github.com/ddsjoberg/standalone/blob/main/R/standalone-checks.R update made, can copy file repo ","code":"usethis::use_standalone(\"r-lib/rlang\", file = \"purrr\") usethis::use_standalone(\"ddsjoberg/standalone\", file = \"forcats\") usethis::use_standalone(\"ddsjoberg/standalone\", file = \"stringr\") usethis::use_standalone(\"ddsjoberg/standalone\", file = \"checks\")"},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributing to cards","text":"{cards} package exports basic functions creating ARDs (, univariate continuous summaries, tabulations, etc.), utilities creating/working ARDs. new functions create ARDs live {cardx} package.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cards","text":"Please note cards project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"yaml","dir":"Articles","previous_headings":"","what":"YAML","title":"Other ARD Representations","text":"as_nested_list() function prepares ARD data frame converted YAML object.","code":"ard |>   as_nested_list() |>   yaml::as.yaml() |>   cat() #> variable: #>   AGE: #>     group1: #>       ARM: #>         group1_level: #>           Placebo: #>             stat_name: #>               'N': #>                 statistic: 86 #>                 statistic_fmt: '86' #>                 warning: ~ #>                 error: ~ #>                 context: continuous #>               mean: #>                 statistic: 75.2093023 ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"json","dir":"Articles","previous_headings":"","what":"JSON","title":"Other ARD Representations","text":"as_nested_list() function prepares ARD data frame converted JSON object. Use jsonlite::write_json() function convert JSON write disk simultaneously.","code":"ard |>   as_nested_list() |>   jsonlite::toJSON(pretty = TRUE) #> { #>   \"variable\": { #>     \"AGE\": { #>       \"group1\": { #>         \"ARM\": { #>           \"group1_level\": { #>             \"Placebo\": { #>               \"stat_name\": { #>                 \"N\": { #>                   \"statistic\": [86], #>                   \"statistic_fmt\": [\"86\"], #>                   \"warning\": {}, #>                   \"error\": {}, #>                   \"context\": [\"continuous\"] #>                 }, ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"rest-api","dir":"Articles","previous_headings":"","what":"REST API","title":"Other ARD Representations","text":"TODO: Update section","code":"library(plumber) library(jsonlite)  #* @get /nested_json #* @serializer unboxedJSON function() {   ard |>     as_nested_list() |>     jsonlite::toJSON(auto_unbox = TRUE) }  # ------------------------------------------------------------------------------ library(plumber) # 'plumber.R' is the location of the files shown above pr(\"plumber.R\") |>   pr_run(port = 8000)"},{"path":"https://insightsengineering.github.io/cards/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer. Becca Krouse. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/cards/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D, Krouse B (2024). cards: Analysis Results Data. R package version 0.0.0.9020,  https://insightsengineering.github.io/cards/, https://github.com/insightsengineering/cards.","code":"@Manual{,   title = {cards: Analysis Results Data},   author = {Daniel D. Sjoberg and Becca Krouse},   year = {2024},   note = {R package version 0.0.0.9020,  https://insightsengineering.github.io/cards/},   url = {https://github.com/insightsengineering/cards}, }"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"cards-","dir":"","previous_headings":"","what":"Analysis Results Data","title":"Analysis Results Data","text":"package preliminary state, breaking changes made without notice deprecation. CDISC Analysis Results Standard aims facilitate automation, reproducibility, reusability, traceability analysis results data (ARD). {cards} package creates CDISC Analysis Result Data Sets. Use cases: Quality Control (QC) existing tables figures. Pre-calculate statistics summarized tables figures. Medical writers may easily access statistics place reports without copying pasting reports. Provides consistent format results lends results combined across studies re-use re-analysis.","code":""},{"path":"https://insightsengineering.github.io/cards/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analysis Results Data","text":"can install development version cards GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cards\")"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"extensions-","dir":"","previous_headings":"","what":"Extensions","title":"Analysis Results Data","text":"{cards} package exports three types functions: Functions create basic ARD objects. Utilities create new ARD objects. Functions work existing ARD objects. {cardx} R package extension {cards} utilizes utilities {cards} exports functions creating additional ARD objects––including functions summarize t-tests, Wilcoxon Rank-Sum tests, regression models, .","code":""},{"path":"https://insightsengineering.github.io/cards/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analysis Results Data","text":"ARD Examples","code":"library(cards)  ard_continuous(ADSL, by = \"ARM\", variables = c(\"AGE\", \"BMIBL\")) #> {cards} data frame: 48 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     ARM      Placebo      AGE         N          N        86 #> 2     ARM      Placebo      AGE      mean       Mean    75.209 #> 3     ARM      Placebo      AGE        sd         SD      8.59 #> 4     ARM      Placebo      AGE    median     Median        76 #> 5     ARM      Placebo      AGE       p25  25th Per…        69 #> 6     ARM      Placebo      AGE       p75  75th Per…        82 #> 7     ARM      Placebo      AGE       min        Min        52 #> 8     ARM      Placebo      AGE       max        Max        89 #> 9     ARM      Placebo    BMIBL         N          N        86 #> 10    ARM      Placebo    BMIBL      mean       Mean    23.636 #> ℹ 38 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  ard_categorical(ADSL, by = \"ARM\", variables = c(\"AGEGR1\", \"SEX\")) #> {cards} data frame: 45 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1     ARM      Placebo   AGEGR1            <65         n          n        14 #> 2     ARM      Placebo   AGEGR1            <65         N          N        86 #> 3     ARM      Placebo   AGEGR1            <65         p          %     0.163 #> 4     ARM    Xanomeli…   AGEGR1            <65         n          n        11 #> 5     ARM    Xanomeli…   AGEGR1            <65         N          N        84 #> 6     ARM    Xanomeli…   AGEGR1            <65         p          %     0.131 #> 7     ARM    Xanomeli…   AGEGR1            <65         n          n         8 #> 8     ARM    Xanomeli…   AGEGR1            <65         N          N        84 #> 9     ARM    Xanomeli…   AGEGR1            <65         p          %     0.095 #> 10    ARM      Placebo   AGEGR1            >80         n          n        30 #> ℹ 35 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |> # only only two groups for a t-test   ard_ttest(by = \"ARM\", variable = \"AGE\") #> {cards} data frame: 14 x 10 #>    group1 group1_level variable   stat_name stat_label statistic #> 1     ARM                   AGE    estimate  Mean Dif…     0.828 #> 2     ARM      Placebo      AGE   estimate1  Group 1 …    75.209 #> 3     ARM    Xanomeli…      AGE   estimate2  Group 2 …    74.381 #> 4     ARM                   AGE   statistic  t Statis…     0.655 #> 5     ARM                   AGE     p.value    p-value     0.513 #> 6     ARM                   AGE   parameter  Degrees …   167.362 #> 7     ARM                   AGE    conf.low  CI Lower…    -1.668 #> 8     ARM                   AGE   conf.high  CI Upper…     3.324 #> 9     ARM                   AGE      method     method Welch Tw… #> 10    ARM                   AGE alternative  alternat… two.sided #> 11    ARM                   AGE          mu    H0 Mean         0 #> 12    ARM                   AGE      paired  Paired t…     FALSE #> 13    ARM                   AGE   var.equal  Equal Va…     FALSE #> 14    ARM                   AGE  conf.level  CI Confi…      0.95 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  survival::coxph(ggsurvfit::Surv_CNSR() ~ TRTP, data = ADTTE) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>   dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\")) #> {cards} data frame: 9 x 7 #>   variable variable_level   context stat_name stat_label statistic #> 1     TRTP        Placebo regressi…  estimate  Coeffici…         0 #> 2     TRTP      Xanomeli… regressi…  estimate  Coeffici…     1.615 #> 3     TRTP      Xanomeli… regressi…   p.value    p-value         0 #> 4     TRTP      Xanomeli… regressi…  conf.low  CI Lower…     1.157 #> 5     TRTP      Xanomeli… regressi… conf.high  CI Upper…     2.072 #> 6     TRTP      Xanomeli… regressi…  estimate  Coeffici…     1.423 #> 7     TRTP      Xanomeli… regressi…   p.value    p-value         0 #> 8     TRTP      Xanomeli… regressi…  conf.low  CI Lower…     0.973 #> 9     TRTP      Xanomeli… regressi… conf.high  CI Upper…     1.872 #> ℹ 1 more variable: statistic_fmt_fn"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ADaM Data — adam","title":"Example ADaM Data — adam","text":"Data frame imported CDISC SDTM/ADaM Pilot Project","code":""},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ADaM Data — adam","text":"","code":"ADSL  ADAE  ADTTE"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example ADaM Data — adam","text":"object class tbl_df (inherits tbl, data.frame) 254 rows 48 columns. object class tbl_df (inherits tbl, data.frame) 1191 rows 55 columns. object class tbl_df (inherits tbl, data.frame) 254 rows 26 columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/alias_as_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Alias to Function — alias_as_fmt_fn","title":"Convert Alias to Function — alias_as_fmt_fn","text":"Accepted aliases non-negative integers strings. integers converted functions round statistics number decimal places match integer. formatting strings come form \"xx\", \"xx.x\", \"xx.x%\", etc. number xs appear decimal place indicate number decimal places statistics rounded . number xs appear decimal place indicate leading spaces added result. string ends \"%\", results scaled 100 rounding.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/alias_as_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Alias to Function — alias_as_fmt_fn","text":"","code":"alias_as_fmt_fn(x, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/alias_as_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Alias to Function — alias_as_fmt_fn","text":"x non-negative integer, string alias, function call call environment error messaging","code":""},{"path":"https://insightsengineering.github.io/cards/reference/alias_as_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Alias to Function — alias_as_fmt_fn","text":"function","code":""},{"path":"https://insightsengineering.github.io/cards/reference/alias_as_fmt_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Alias to Function — alias_as_fmt_fn","text":"","code":"alias_as_fmt_fn(1) #> function (x)  #> { #>     res <- format(round5(x * scale, digits = digits), nsmall = digits) #>     if (!is.null(width)) { #>         res <- ifelse(nchar(res) >= width, res, paste0(strrep(\" \",  #>             width - nchar(res)), res)) #>     } #>     res #> } #> <bytecode: 0x5580c72817c8> #> <environment: 0x5580c7287538> alias_as_fmt_fn(\"xx.x\") #> function (x)  #> { #>     res <- format(round5(x * scale, digits = digits), nsmall = digits) #>     if (!is.null(width)) { #>         res <- ifelse(nchar(res) >= width, res, paste0(strrep(\" \",  #>             width - nchar(res)), res)) #>     } #>     res #> } #> <bytecode: 0x5580c72817c8> #> <environment: 0x5580c733e608>"},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Formatting Functions — apply_statistic_fmt_fn","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"Apply formatting functions raw statistics. Function aliases converted functions using alias_as_fmt_fn().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"apply_statistic_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   apply_statistic_fmt_fn() #> {cards} data frame: 8 x 9 #>   variable   context stat_name stat_label statistic statistic_fmt #> 1      AGE continuo…         N          N       254           254 #> 2      AGE continuo…      mean       Mean    75.087          75.1 #> 3      AGE continuo…        sd         SD     8.246           8.2 #> 4      AGE continuo…    median     Median        77          77.0 #> 5      AGE continuo…       p25  25th Per…        70          70.0 #> 6      AGE continuo…       p75  75th Per…        81          81.0 #> 7      AGE continuo…       min        Min        51          51.0 #> 8      AGE continuo…       max        Max        89          89.0 #> ℹ 3 more variables: statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Attributes — ard_attributes","title":"ARD Attributes — ard_attributes","text":"Add variable attributes ARD data frame. label attribute added columns, label specified label set column using label= argument, column name placed label statistic. class attribute also returned columns. attribute returned attributes() also added, e.g. factor levels.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Attributes — ard_attributes","text":"","code":"ard_attributes(data, variables = everything(), label = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Attributes — ard_attributes","text":"data (data.frame) data frame variables (tidy-select) variables include label (named list) named list variable labels, e.g. list(cyl = \". Cylinders\"). Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Attributes — ard_attributes","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Attributes — ard_attributes","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, \"label\") <- \"Lowercase Letters\"  ard_attributes(df, variables = everything()) #> {cards} data frame: 4 x 5 #>   variable stat_name statistic stat_label   context #> 1     var1     label Lowercas…  Variable… attribut… #> 2     var1     class character  Variable… attribut… #> 3     var2     label      var2  Variable… attribut… #> 4     var2     class character  Variable… attribut…"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical ARD Statistics — ard_categorical","title":"Categorical ARD Statistics — ard_categorical","text":"Compute Analysis Results Data (ARD) categorical summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(   data,   variables,   by = dplyr::group_vars(data),   strata = NULL,   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical ARD Statistics — ard_categorical","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical ARD Statistics — ard_categorical","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"denominators","dir":"Reference","previous_headings":"","what":"Denominators","title":"Categorical ARD Statistics — ard_categorical","text":"default, ard_categorical() function returns statistics \"n\" \"N\", little \"n\" counts variable levels, \"N\" number non-missing observations. default calculation percentage merely p = n/N. However, sometimes necessary provide different \"N\" use denominator calculation. example, calculation rates various observed adverse events, may need update denominator number enrolled subjects. cases, use denominator argument specify new definition \"N\", subsequently \"p\". argument expects following inputs: data frame. columns data frame overlap /strata columns used calculate new \"N\". integer. single integer used new \"N\" string: one c(\"column\", \"row\", \"cell\"). \"column\" equivalent denominator=NULL. \"row\" gives 'row' percentages /strata columns 'top' cross table, variables rows. \"cell\" gives percentages denominator number non-missing rows source data frame. structured data frame. data frame include columns /strata. last column must named \"...ard_N...\". integers column used updated \"N\" calculations.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\") #> {cards} data frame: 27 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1     ARM      Placebo   AGEGR1          65-80         n          n        42 #> 2     ARM      Placebo   AGEGR1          65-80         N          N        86 #> 3     ARM      Placebo   AGEGR1          65-80         p          %     0.488 #> 4     ARM    Xanomeli…   AGEGR1          65-80         n          n        55 #> 5     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 6     ARM    Xanomeli…   AGEGR1          65-80         p          %     0.655 #> 7     ARM    Xanomeli…   AGEGR1          65-80         n          n        47 #> 8     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 9     ARM    Xanomeli…   AGEGR1          65-80         p          %      0.56 #> 10    ARM      Placebo   AGEGR1            <65         n          n        14 #> ℹ 17 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above ADSL |>   dplyr::group_by(ARM) |>   ard_categorical(variables = \"AGEGR1\") #> {cards} data frame: 27 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1     ARM      Placebo   AGEGR1          65-80         n          n        42 #> 2     ARM      Placebo   AGEGR1          65-80         N          N        86 #> 3     ARM      Placebo   AGEGR1          65-80         p          %     0.488 #> 4     ARM    Xanomeli…   AGEGR1          65-80         n          n        55 #> 5     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 6     ARM    Xanomeli…   AGEGR1          65-80         p          %     0.655 #> 7     ARM    Xanomeli…   AGEGR1          65-80         n          n        47 #> 8     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 9     ARM    Xanomeli…   AGEGR1          65-80         p          %      0.56 #> 10    ARM      Placebo   AGEGR1            <65         n          n        14 #> ℹ 17 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"ARD functions comparing values groups. ard_ttest() -> t.test(data[[variable]] ~ data[[]], ...) ard_wilcoxtest() -> wilcox.test(data[[variable]] ~ data[[]], ...) ard_chisqtest() -> chisq.test(x = data[[variable]], y = data[[]], ...) ard_fishertest() -> fisher.test(x = data[[variable]], y = data[[]], ...)","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)  ard_chisqtest(data, by, variable, ...)  ard_fishertest(data, by, variable, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data (data.frame) data frame (tidy-select) character column name compare variable (tidy-select) character column name compared ... arguments passed method.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_ttest(by = \"ARM\", variable = \"AGE\") #> {cards} data frame: 14 x 10 #>    group1 group1_level variable   stat_name stat_label statistic #> 1     ARM                   AGE    estimate  Mean Dif…     0.828 #> 2     ARM      Placebo      AGE   estimate1  Group 1 …    75.209 #> 3     ARM    Xanomeli…      AGE   estimate2  Group 2 …    74.381 #> 4     ARM                   AGE   statistic  t Statis…     0.655 #> 5     ARM                   AGE     p.value    p-value     0.513 #> 6     ARM                   AGE   parameter  Degrees …   167.362 #> 7     ARM                   AGE    conf.low  CI Lower…    -1.668 #> 8     ARM                   AGE   conf.high  CI Upper…     3.324 #> 9     ARM                   AGE      method     method Welch Tw… #> 10    ARM                   AGE alternative  alternat… two.sided #> 11    ARM                   AGE          mu    H0 Mean         0 #> 12    ARM                   AGE      paired  Paired t…     FALSE #> 13    ARM                   AGE   var.equal  Equal Va…     FALSE #> 14    ARM                   AGE  conf.level  CI Confi…      0.95 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_wilcoxtest(by = \"ARM\", variable = \"AGE\") #> {cards} data frame: 12 x 9 #>    group1 variable   context   stat_name stat_label statistic #> 1     ARM      AGE wilcoxte…   statistic  W Statis…    3862.5 #> 2     ARM      AGE wilcoxte…     p.value    p-value     0.435 #> 3     ARM      AGE wilcoxte…      method     method Wilcoxon… #> 4     ARM      AGE wilcoxte… alternative  alternat… two.sided #> 5     ARM      AGE wilcoxte…          mu         mu         0 #> 6     ARM      AGE wilcoxte…      paired  Paired t…     FALSE #> 7     ARM      AGE wilcoxte…       exact      exact      NULL #> 8     ARM      AGE wilcoxte…     correct  Continui…      TRUE #> 9     ARM      AGE wilcoxte…    conf.int   conf.int     FALSE #> 10    ARM      AGE wilcoxte…  conf.level  conf.lev…      0.95 #> 11    ARM      AGE wilcoxte…    tol.root   tol.root         0 #> 12    ARM      AGE wilcoxte… digits.rank  digits.r…       Inf #> ℹ 3 more variables: statistic_fmt_fn, warning, error  ADSL |>   ard_chisqtest(by = \"ARM\", variable = \"AGEGR1\") #> {cards} data frame: 9 x 9 #>   group1 variable   context        stat_name stat_label #> 1    ARM   AGEGR1 chisqtest        statistic  X-square… #> 2    ARM   AGEGR1 chisqtest          p.value    p-value #> 3    ARM   AGEGR1 chisqtest        parameter  parameter #> 4    ARM   AGEGR1 chisqtest           method     method #> 5    ARM   AGEGR1 chisqtest          correct    correct #> 6    ARM   AGEGR1 chisqtest                p          p #> 7    ARM   AGEGR1 chisqtest        rescale.p  rescale.p #> 8    ARM   AGEGR1 chisqtest simulate.p.value  simulate… #> 9    ARM   AGEGR1 chisqtest                B          B #>                     statistic #> 1                       6.852 #> 2                       0.144 #> 3                           4 #> 4                   Pearson'… #> 5                        TRUE #> 6 rep(1/length(x), length(x)) #> 7                       FALSE #> 8                       FALSE #> 9                        2000 #> ℹ 3 more variables: statistic_fmt_fn, warning, error  ADSL[1:30, ] |>   ard_fishertest(by = \"ARM\", variable = \"AGEGR1\") #> {cards} data frame: 12 x 9 #>    group1 variable   context        stat_name stat_label #> 1     ARM   AGEGR1 fisherte…          p.value    p-value #> 2     ARM   AGEGR1 fisherte…           method     method #> 3     ARM   AGEGR1 fisherte…      alternative  alternat… #> 4     ARM   AGEGR1 fisherte…        workspace  workspace #> 5     ARM   AGEGR1 fisherte…           hybrid     hybrid #> 6     ARM   AGEGR1 fisherte…       hybridPars  hybridPa… #> 7     ARM   AGEGR1 fisherte…          control    control #> 8     ARM   AGEGR1 fisherte…               or         or #> 9     ARM   AGEGR1 fisherte…         conf.int   conf.int #> 10    ARM   AGEGR1 fisherte…       conf.level  conf.lev… #> 11    ARM   AGEGR1 fisherte… simulate.p.value  simulate… #> 12    ARM   AGEGR1 fisherte…                B          B #>                                statistic #> 1                                  0.089 #> 2                              Fisher's… #> 3                              two.sided #> 4                                  2e+05 #> 5                                  FALSE #> 6  c(expect = 5, percent = 80, Emin = 1) #> 7                                 list() #> 8                                      1 #> 9                                   TRUE #> 10                                  0.95 #> 11                                 FALSE #> 12                                  2000 #> ℹ 3 more variables: statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_complex.html","id":null,"dir":"Reference","previous_headings":"","what":"Complex ARD Summaries — ard_complex","title":"Complex ARD Summaries — ard_complex","text":"Function similar ard_continuous(), allows complex summaries. ard_continuous(statistics) allows univariable function, ard_complex(statistics) can handle complex data summaries.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_complex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complex ARD Summaries — ard_complex","text":"","code":"ard_complex(   data,   variables,   by = dplyr::group_vars(data),   strata = NULL,   statistics,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_complex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complex ARD Summaries — ard_complex","text":"data (data.frame) data frame variables (tidy-select) columns include summaries , strata (tidy-select) columns /stratified summary statistic calculation. Arguments similar, important distinction: : results calculated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results calculated observed combinations columns specified. Arguments may used conjunction one another. statistics (formula-list-selector) form statistics argument identical ard_continuous(statistics) argument, except summary function must accept following arguments. x vector data data frame subset /strata columns rows \"variable\" NA removed. data_full full data frame character vector variables strata character vector strata variables unlikely one function need elements, recommended function passed accepts ... unused arguments properly ignored. ... also allows function perhaps updated future passed arguments. example, one needs second variable data frame, function inputs may look like: foo(x, data, ...) fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(mean = \"Mean\", sd = \"SD\") everything() ~ list(mean ~ \"Mean\", sd ~ \"SD\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_complex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complex ARD Summaries — ard_complex","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_complex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complex ARD Summaries — ard_complex","text":"","code":"# example how to mimic behavior of `ard_continuous()` ard_complex(   ADSL,   by = \"ARM\",   variables = \"AGE\",   statistics = list(AGE = list(mean = \\(x, ...) mean(x))) ) #> {cards} data frame: 3 x 10 #>   group1 group1_level variable stat_name stat_label statistic #> 1    ARM      Placebo      AGE      mean       Mean    75.209 #> 2    ARM    Xanomeli…      AGE      mean       Mean    74.381 #> 3    ARM    Xanomeli…      AGE      mean       Mean    75.667 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # return the grand mean and the mean within the by group grand_mean <- function(data, data_full, variable, ...) {   list(     mean = mean(data[[variable]], na.rm = TRUE),     grand_mean = mean(data_full[[variable]], na.rm = TRUE)   ) }  ard_complex(   ADSL,   by = \"ARM\",   variables = \"AGE\",   statistics = list(AGE = list(means = grand_mean)) ) #> {cards} data frame: 6 x 10 #>   group1 group1_level variable  stat_name stat_label statistic #> 1    ARM      Placebo      AGE       mean       Mean    75.209 #> 2    ARM      Placebo      AGE grand_mean  grand_me…    75.087 #> 3    ARM    Xanomeli…      AGE       mean       Mean    74.381 #> 4    ARM    Xanomeli…      AGE grand_mean  grand_me…    75.087 #> 5    ARM    Xanomeli…      AGE       mean       Mean    75.667 #> 6    ARM    Xanomeli…      AGE grand_mean  grand_me…    75.087 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above ADSL |>   dplyr::group_by(ARM) |>   ard_complex(     variables = \"AGE\",     statistics = list(AGE = list(means = grand_mean))   ) #> {cards} data frame: 6 x 10 #>   group1 group1_level variable  stat_name stat_label statistic #> 1    ARM      Placebo      AGE       mean       Mean    75.209 #> 2    ARM      Placebo      AGE grand_mean  grand_me…    75.087 #> 3    ARM    Xanomeli…      AGE       mean       Mean    74.381 #> 4    ARM    Xanomeli…      AGE grand_mean  grand_me…    75.087 #> 5    ARM    Xanomeli…      AGE       mean       Mean    75.667 #> 6    ARM    Xanomeli…      AGE grand_mean  grand_me…    75.087 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous ARD Statistics — ard_continuous","title":"Continuous ARD Statistics — ard_continuous","text":"Compute Analysis Results Data (ARD) simple continuous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(   data,   variables,   by = dplyr::group_vars(data),   strata = NULL,   statistics = everything() ~ continuous_variable_summary_fns(),   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous ARD Statistics — ard_continuous","text":"data (data.frame) data frame variables (tidy-select) columns include summaries , strata (tidy-select) columns /stratified summary statistic calculation. Arguments similar, important distinction: : results calculated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results calculated observed combinations columns specified. Arguments may used conjunction one another. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) mean(x))). value assigned variable must also named list, names used reference function element function object. Typically, function return scalar statistic, function returns named list results also acceptable, e.g. list(conf.low = -1, conf.high = 1). However, errors occur, messaging less clear setting. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(mean = \"Mean\", sd = \"SD\") everything() ~ list(mean ~ \"Mean\", sd ~ \"SD\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous ARD Statistics — ard_continuous","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(ADSL, by = \"ARM\", variables = \"AGE\") #> {cards} data frame: 24 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     ARM      Placebo      AGE         N          N        86 #> 2     ARM      Placebo      AGE      mean       Mean    75.209 #> 3     ARM      Placebo      AGE        sd         SD      8.59 #> 4     ARM      Placebo      AGE    median     Median        76 #> 5     ARM      Placebo      AGE       p25  25th Per…        69 #> 6     ARM      Placebo      AGE       p75  75th Per…        82 #> 7     ARM      Placebo      AGE       min        Min        52 #> 8     ARM      Placebo      AGE       max        Max        89 #> 9     ARM    Xanomeli…      AGE         N          N        84 #> 10    ARM    Xanomeli…      AGE      mean       Mean    74.381 #> ℹ 14 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above ADSL |>   dplyr::group_by(ARM) |>   ard_continuous(variables = \"AGE\") #> {cards} data frame: 24 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     ARM      Placebo      AGE         N          N        86 #> 2     ARM      Placebo      AGE      mean       Mean    75.209 #> 3     ARM      Placebo      AGE        sd         SD      8.59 #> 4     ARM      Placebo      AGE    median     Median        76 #> 5     ARM      Placebo      AGE       p25  25th Per…        69 #> 6     ARM      Placebo      AGE       p75  75th Per…        82 #> 7     ARM      Placebo      AGE       min        Min        52 #> 8     ARM      Placebo      AGE       max        Max        89 #> 9     ARM    Xanomeli…      AGE         N          N        84 #> 10    ARM    Xanomeli…      AGE      mean       Mean    74.381 #> ℹ 14 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":null,"dir":"Reference","previous_headings":"","what":"Dichotomous ARD Statistics — ard_dichotomous","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"Compute Analysis Results Data (ARD) dichotomous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"","code":"ard_dichotomous(   data,   variables,   by = dplyr::group_vars(data),   strata = NULL,   values = maximum_variable_values(data[variables]),   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. values (named list) named list dichotomous values tabulate. Default maximum_variable_values(data), returns largest/last value sort. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"","code":"ard_dichotomous(mtcars, by = vs, variables = c(cyl, am), values = list(cyl = 4)) #> {cards} data frame: 12 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1      vs            0      cyl              4         n          n         1 #> 2      vs            0      cyl              4         N          N        18 #> 3      vs            0      cyl              4         p          %     0.056 #> 4      vs            1      cyl              4         n          n        10 #> 5      vs            1      cyl              4         N          N        14 #> 6      vs            1      cyl              4         p          %     0.714 #> 7      vs            0       am              1         n          n         6 #> 8      vs            0       am              1         N          N        18 #> 9      vs            0       am              1         p          %     0.333 #> 10     vs            1       am              1         n          n         7 #> 11     vs            1       am              1         N          N        14 #> 12     vs            1       am              1         p          %       0.5 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above mtcars |>   dplyr::group_by(vs) |>   ard_dichotomous(variables = c(cyl, am), values = list(cyl = 4)) #> {cards} data frame: 12 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1      vs            0      cyl              4         n          n         1 #> 2      vs            0      cyl              4         N          N        18 #> 3      vs            0      cyl              4         p          %     0.056 #> 4      vs            1      cyl              4         n          n        10 #> 5      vs            1      cyl              4         N          N        14 #> 6      vs            1      cyl              4         p          %     0.714 #> 7      vs            0       am              1         n          n         6 #> 8      vs            0       am              1         N          N        18 #> 9      vs            0       am              1         p          %     0.333 #> 10     vs            1       am              1         n          n         7 #> 11     vs            1       am              1         N          N        14 #> 12     vs            1       am              1         p          %       0.5 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical ARD Statistics — ard_hierarchical","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"Performs hierarchical nested tabulations, e.g. tabulates AE terms nested within AE system organ class. ard_hierarchical() includes summaries last variable listed variables argument, nested within variables included. ard_hierarchical_count() includes summaries variables listed variables argument summary nested within preceding variables, e.g. variables=c(AESOC, AETERM) summarizes AETERM nested AESOC, also summarizes counts AESOC.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"","code":"ard_hierarchical(   data,   variables,   by = dplyr::group_vars(data),   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )  ard_hierarchical_count(   data,   variables,   by = dplyr::group_vars(data),   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"data (data.frame) data frame variables (tidy-select) variables perform nested/hierarchical tabulations within. (tidy-select) variables perform tabulations . combinations variables specified appear results. Default dplyr::group_vars(data). statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"","code":"ard_hierarchical(   data = ADAE,   variables = c(AESOC, AETERM),   by = c(TRTA, AESEV),   denominator = ADSL |> dplyr::rename(TRTA = ARM) ) #> {cards} data frame: 6534 x 15 #>    group1 group1_level group2 group2_level group3 group3_level variable #> 1    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 2    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 3    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 4    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 5    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 6    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 7    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 8    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 9    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 10   TRTA      Placebo  AESEV     MODERATE  AESOC    GENERAL …   AETERM #>    variable_level stat_name stat_label statistic #> 1       APPLICAT…         n          n         3 #> 2       APPLICAT…         N          N        86 #> 3       APPLICAT…         p          %     0.035 #> 4       APPLICAT…         n          n        16 #> 5       APPLICAT…         N          N        84 #> 6       APPLICAT…         p          %      0.19 #> 7       APPLICAT…         n          n         9 #> 8       APPLICAT…         N          N        84 #> 9       APPLICAT…         p          %     0.107 #> 10      APPLICAT…         n          n         0 #> ℹ 6524 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  ard_hierarchical_count(   data = ADAE,   variables = c(AESOC, AETERM),   by = TRTA ) #> {cards} data frame: 795 x 13 #>    group1 group1_level group2 group2_level variable variable_level stat_name #> 1    TRTA      Placebo  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 2    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 3    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 4    TRTA      Placebo  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 5    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 6    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 7    TRTA      Placebo  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 8    TRTA    Xanomeli…  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 9    TRTA    Xanomeli…  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 10   TRTA      Placebo  AESOC    SKIN AND…   AETERM       ERYTHEMA         n #>    stat_label statistic #> 1           n         3 #> 2           n        23 #> 3           n        20 #> 4           n        10 #> 5           n        35 #> 6           n        33 #> 7           n        10 #> 8           n         4 #> 9           n         7 #> 10          n        13 #> ℹ 785 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above ADAE |>   dplyr::group_by(TRTA, AESEV) |>   ard_hierarchical(     variables = c(AESOC, AETERM),     denominator = ADSL |> dplyr::rename(TRTA = ARM)   ) #> {cards} data frame: 6534 x 15 #>    group1 group1_level group2 group2_level group3 group3_level variable #> 1    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 2    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 3    TRTA      Placebo  AESEV         MILD  AESOC    GENERAL …   AETERM #> 4    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 5    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 6    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 7    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 8    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 9    TRTA    Xanomeli…  AESEV         MILD  AESOC    GENERAL …   AETERM #> 10   TRTA      Placebo  AESEV     MODERATE  AESOC    GENERAL …   AETERM #>    variable_level stat_name stat_label statistic #> 1       APPLICAT…         n          n         3 #> 2       APPLICAT…         N          N        86 #> 3       APPLICAT…         p          %     0.035 #> 4       APPLICAT…         n          n        16 #> 5       APPLICAT…         N          N        84 #> 6       APPLICAT…         p          %      0.19 #> 7       APPLICAT…         n          n         9 #> 8       APPLICAT…         N          N        84 #> 9       APPLICAT…         p          %     0.107 #> 10      APPLICAT…         n          n         0 #> ℹ 6524 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  ADAE |>   dplyr::group_by(TRTA) |>   ard_hierarchical_count(     variables = c(AESOC, AETERM)   ) #> {cards} data frame: 795 x 13 #>    group1 group1_level group2 group2_level variable variable_level stat_name #> 1    TRTA      Placebo  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 2    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 3    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 4    TRTA      Placebo  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 5    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 6    TRTA    Xanomeli…  AESOC    GENERAL …   AETERM      APPLICAT…         n #> 7    TRTA      Placebo  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 8    TRTA    Xanomeli…  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 9    TRTA    Xanomeli…  AESOC    GASTROIN…   AETERM      DIARRHOEA         n #> 10   TRTA      Placebo  AESOC    SKIN AND…   AETERM       ERYTHEMA         n #>    stat_label statistic #> 1           n         3 #> 2           n        23 #> 3           n        20 #> 4           n        10 #> 5           n        35 #> 6           n        33 #> 7           n        10 #> 8           n         4 #> 9           n         7 #> 10          n        13 #> ℹ 785 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing ARD Statistics — ard_missing","title":"Missing ARD Statistics — ard_missing","text":"Compute Analysis Results Data (ARD) statistics data missingness.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing ARD Statistics — ard_missing","text":"","code":"ard_missing(   data,   variables,   by = dplyr::group_vars(data),   statistics = everything() ~ missing_variable_summary_fns(),   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing ARD Statistics — ard_missing","text":"data (data.frame) data frame variables (tidy-select) columns include summaries (tidy-select) results tabulated combinations columns specified. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) mean(x))). value assigned variable must also named list, names used reference function element function object. Typically, function return scalar statistic, function returns named list results also acceptable, e.g. list(conf.low = -1, conf.high = 1). However, errors occur, messaging less clear setting. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(mean = \"Mean\", sd = \"SD\") everything() ~ list(mean ~ \"Mean\", sd ~ \"SD\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing ARD Statistics — ard_missing","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing ARD Statistics — ard_missing","text":"","code":"ard_missing(ADSL, by = \"ARM\", variables = \"AGE\") #> {cards} data frame: 15 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     ARM      Placebo      AGE     N_obs  Vector L…        86 #> 2     ARM      Placebo      AGE    N_miss  N Missing         0 #> 3     ARM      Placebo      AGE N_nonmiss  N Non-mi…        86 #> 4     ARM      Placebo      AGE    p_miss  % Missing         0 #> 5     ARM      Placebo      AGE p_nonmiss  % Non-mi…         1 #> 6     ARM    Xanomeli…      AGE     N_obs  Vector L…        84 #> 7     ARM    Xanomeli…      AGE    N_miss  N Missing         0 #> 8     ARM    Xanomeli…      AGE N_nonmiss  N Non-mi…        84 #> 9     ARM    Xanomeli…      AGE    p_miss  % Missing         0 #> 10    ARM    Xanomeli…      AGE p_nonmiss  % Non-mi…         1 #> 11    ARM    Xanomeli…      AGE     N_obs  Vector L…        84 #> 12    ARM    Xanomeli…      AGE    N_miss  N Missing         0 #> 13    ARM    Xanomeli…      AGE N_nonmiss  N Non-mi…        84 #> 14    ARM    Xanomeli…      AGE    p_miss  % Missing         0 #> 15    ARM    Xanomeli…      AGE p_nonmiss  % Non-mi…         1 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # equivalent to above ADSL |>   dplyr::group_by(ARM) |>   ard_missing(variables = \"AGE\") #> {cards} data frame: 15 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     ARM      Placebo      AGE     N_obs  Vector L…        86 #> 2     ARM      Placebo      AGE    N_miss  N Missing         0 #> 3     ARM      Placebo      AGE N_nonmiss  N Non-mi…        86 #> 4     ARM      Placebo      AGE    p_miss  % Missing         0 #> 5     ARM      Placebo      AGE p_nonmiss  % Non-mi…         1 #> 6     ARM    Xanomeli…      AGE     N_obs  Vector L…        84 #> 7     ARM    Xanomeli…      AGE    N_miss  N Missing         0 #> 8     ARM    Xanomeli…      AGE N_nonmiss  N Non-mi…        84 #> 9     ARM    Xanomeli…      AGE    p_miss  % Missing         0 #> 10    ARM    Xanomeli…      AGE p_nonmiss  % Non-mi…         1 #> 11    ARM    Xanomeli…      AGE     N_obs  Vector L…        84 #> 12    ARM    Xanomeli…      AGE    N_miss  N Missing         0 #> 13    ARM    Xanomeli…      AGE N_nonmiss  N Non-mi…        84 #> 14    ARM    Xanomeli…      AGE    p_miss  % Missing         0 #> 15    ARM    Xanomeli…      AGE p_nonmiss  % Non-mi…         1 #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun (function) tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"lm(AGE ~ ARM, data = ADSL) |>   ard_regression(add_estimate_to_reference_rows = TRUE) #> {cards} data frame: 43 x 7 #>    variable variable_level   context      stat_name stat_label statistic #> 1       ARM        Placebo regressi…           term       term ARMPlace… #> 2       ARM        Placebo regressi…      var_label      Label Descript… #> 3       ARM        Placebo regressi…      var_class      Class character #> 4       ARM        Placebo regressi…       var_type       Type categori… #> 5       ARM        Placebo regressi…    var_nlevels   N Levels         3 #> 6       ARM        Placebo regressi…      contrasts  contrasts contr.tr… #> 7       ARM        Placebo regressi… contrasts_type  Contrast… treatment #> 8       ARM        Placebo regressi…  reference_row  referenc…      TRUE #> 9       ARM        Placebo regressi…          label  Level La…   Placebo #> 10      ARM        Placebo regressi…          n_obs     N Obs.        86 #> ℹ 33 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 1 more variable: statistic_fmt_fn"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD as Nested List — as_nested_list","title":"ARD as Nested List — as_nested_list","text":"Convert ARDs Nested Lists","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD as Nested List — as_nested_list","text":"","code":"as_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD as Nested List — as_nested_list","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD as Nested List — as_nested_list","text":"nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD as Nested List — as_nested_list","text":"","code":"ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) |>   as_nested_list() #> $variable #> $variable$mpg #> $variable$mpg$group1 #> $variable$mpg$group1$cyl #> $variable$mpg$group1$cyl$group1_level #> $variable$mpg$group1$cyl$group1_level$`4` #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 26.66364 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"26.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 4.509828 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"4.5\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 26 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"26.0\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 22.8 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"22.8\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 30.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"30.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"21.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 33.9 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"33.9\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6` #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 19.74286 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"19.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 1.453567 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"1.5\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 19.7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"19.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 18.1 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"18.1\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 21 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"21.0\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 17.8 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"17.8\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"21.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8` #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 15.1 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"15.1\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 2.560048 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"2.6\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 15.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"15.2\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 14.3 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"14.3\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 16.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"16.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 10.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"10.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 19.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"19.2\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #> $variable$hp #> $variable$hp$group1 #> $variable$hp$group1$cyl #> $variable$hp$group1$cyl$group1_level #> $variable$hp$group1$cyl$group1_level$`4` #> $variable$hp$group1$cyl$group1_level$`4`$stat_name #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 82.63636 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"82.6\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 20.93453 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"20.9\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 91 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"91.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 65 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"65.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 97 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"97.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 52 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"52.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 113 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"113.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`6` #> $variable$hp$group1$cyl$group1_level$`6`$stat_name #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 122.2857 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"122.3\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 24.26049 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"24.3\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"110.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"110.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 123 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"123.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 105 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"105.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"175.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`8` #> $variable$hp$group1$cyl$group1_level$`8`$stat_name #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 209.2143 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"209.2\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 50.97689 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"51.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 192.5 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"192.5\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"175.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 245 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"245.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 150 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"150.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 335 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"335.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #>"},{"path":"https://insightsengineering.github.io/cards/reference/bind_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind ARDs — bind_ard","title":"Bind ARDs — bind_ard","text":"Wrapper dplyr::bind_rows() additional checks duplicated statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/bind_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind ARDs — bind_ard","text":"","code":"bind_ard(..., .update = FALSE, .order = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/bind_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind ARDs — bind_ard","text":"... ARDs combine. argument can either ARD, list ARDs. Columns matched name, missing columns filled NA. .update (logical scalar) logical indicating whether update duplicate ARD statistics. Default FALSE. statistic type repeated .update=TRUE, recently added statistics retained, others omitted. .order (logical scalar) logical indicating whether order rows stacked ARDs, allowing statistics share common group variable values appear consecutive rows. Default FALSE. Ordering based order group/variable values prior stacking.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/bind_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind ARDs — bind_ard","text":"transformed ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/bind_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind ARDs — bind_ard","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  bind_ard(ard, ard, .update = TRUE) #> ℹ 27 duplicate observations removed. #> {cards} data frame: 27 x 11 #>    group1 group1_level variable variable_level stat_name stat_label statistic #> 1     ARM      Placebo   AGEGR1          65-80         n          n        42 #> 2     ARM      Placebo   AGEGR1          65-80         N          N        86 #> 3     ARM      Placebo   AGEGR1          65-80         p          %     0.488 #> 4     ARM    Xanomeli…   AGEGR1          65-80         n          n        55 #> 5     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 6     ARM    Xanomeli…   AGEGR1          65-80         p          %     0.655 #> 7     ARM    Xanomeli…   AGEGR1          65-80         n          n        47 #> 8     ARM    Xanomeli…   AGEGR1          65-80         N          N        84 #> 9     ARM    Xanomeli…   AGEGR1          65-80         p          %      0.56 #> 10    ARM      Placebo   AGEGR1            <65         n          n        14 #> ℹ 17 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: Analysis Results Data — cards-package","title":"cards: Analysis Results Data — cards-package","text":"package constructs Clinical Data Interchange Standards Consortium (CDISC) compliant Analysis Results Data objects. objects used re-used construct summary tables, visualizations, written reports. results may also represented JavaScript Object Notation (JSON) Yet Another Markup Language (YAML) structures.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: Analysis Results Data — cards-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID) Authors: Becca Krouse becca.z.krouse@gsk.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ARD Structure — check_ard_structure","title":"Check ARD Structure — check_ard_structure","text":"Function tests structure returns notes object conform expected structure.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ARD Structure — check_ard_structure","text":"","code":"check_ard_structure(x)"},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ARD Structure — check_ard_structure","text":"x ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ARD Structure — check_ard_structure","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check ARD Structure — check_ard_structure","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   dplyr::select(-warning, -error) |>   check_ard_structure() #> The following columns are not present: \"warning\" and \"error\"."},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Package Installation — check_pkg_installed","title":"Check Package Installation — check_pkg_installed","text":"check_pkg_installed(): checks whether package installed returns error FALSE available. package search provided, function check whether minimum version package required. get_pkg_dependencies() returns tibble dependencies specific package. get_min_version_required() return, , minimum version pkg required reference_pkg, NULL minimum version required.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Package Installation — check_pkg_installed","text":"","code":"check_pkg_installed(pkg, reference_pkg = \"cards\", call = parent.frame())  is_pkg_installed(pkg, reference_pkg = \"cards\", call = parent.frame())  get_pkg_dependencies(reference_pkg = \"cards\")  get_all_pkg_dependencies(   reference_pkg = \"cards\",   remove_duplicates = FALSE,   lib.loc = NULL )  get_min_version_required(pkg, reference_pkg = \"cards\")"},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Package Installation — check_pkg_installed","text":"pkg (string) Package required reference_pkg (string) package function search minimum required version . call (environment) execution environment currently running function. Default parent.frame(). used message user original function call resulted prompt install new packages. remove_duplicates (logical(1)) several versions package installed, first one returned? lib.loc (path) location R library trees search , see utils::installed.packages().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Package Installation — check_pkg_installed","text":"logical error check_pkg_installed(), NULL character minimum version required get_min_version_required(), tibble get_pkg_dependencies().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Package Installation — check_pkg_installed","text":"get_all_pkg_dependencies() may used get list dependencies installed packages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_pkg_installed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Package Installation — check_pkg_installed","text":"","code":"if (FALSE) { # interactive() check_pkg_installed(\"broom\", return_lgl = TRUE) get_pkg_dependencies() get_min_version_required(\"brms\") }"},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults for statistical arguments — default_stat_labels","title":"Defaults for statistical arguments — default_stat_labels","text":"Returns named list statistics labels","code":""},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defaults for statistical arguments — default_stat_labels","text":"","code":"default_stat_labels()"},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defaults for statistical arguments — default_stat_labels","text":"named list values","code":""},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defaults for statistical arguments — default_stat_labels","text":"","code":"# stat labels default_stat_labels() #> $mean #> [1] \"Mean\" #>  #> $sd #> [1] \"SD\" #>  #> $var #> [1] \"Variance\" #>  #> $median #> [1] \"Median\" #>  #> $p25 #> [1] \"25th Percentile\" #>  #> $p75 #> [1] \"75th Percentile\" #>  #> $min #> [1] \"Min\" #>  #> $max #> [1] \"Max\" #>  #> $n #> [1] \"n\" #>  #> $N #> [1] \"N\" #>  #> $p #> [1] \"%\" #>  #> $N_obs #> [1] \"Vector Length\" #>  #> $N_miss #> [1] \"N Missing\" #>  #> $N_nonmiss #> [1] \"N Non-missing\" #>  #> $p_miss #> [1] \"% Missing\" #>  #> $p_nonmiss #> [1] \"% Non-missing\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Continuous Statistics — .calculate_stats_as_ard","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"Calculate statistics return ARD format","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"","code":".calculate_stats_as_ard(   df_nested,   variables,   statistics,   by,   strata,   data,   new_col_name = \"...ard_all_stats...\" )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"df_nested nested data frame variables character vector variables statistics named list statistical functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"Function takes summary instructions statistics = list(variable_name = list(tabulation=c(\"n\", \"N\", \"p\"))) argument, returns tabulations ARD structure.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"","code":".calculate_tabulation_statistics(   data,   variables,   by,   strata,   denominator,   statistics,   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()).","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Value Checks — .check_dichotomous_values","title":"Perform Value Checks — .check_dichotomous_values","text":"Check validity values passed ard_dichotomous(values).","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Value Checks — .check_dichotomous_values","text":"","code":".check_dichotomous_values(data, values, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Value Checks — .check_dichotomous_values","text":"data (data.frame) data frame values (named list) named list call (environment) environment. Default parent.frame()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Check 'xx' Format Structure — .check_fmt_string","title":"Check 'xx' Format Structure — .check_fmt_string","text":"function checks single string consistency. String must begin 'x' consist x's, single period none, may end percent symbol. string consistent, TRUE returned. Otherwise error.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check 'xx' Format Structure — .check_fmt_string","text":"","code":".check_fmt_string(x, call = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check 'xx' Format Structure — .check_fmt_string","text":"x string check call calling environment. Default caller_env()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check 'xx' Format Structure — .check_fmt_string","text":"logical","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check 'xx' Format Structure — .check_fmt_string","text":"","code":"cards:::.check_fmt_string(\"xx.x\") # TRUE #> [1] TRUE cards:::.check_fmt_string(\"xx.x%\") # TRUE #> [1] TRUE"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_for_missing_combos_in_denom.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for missing levels in denominator — .check_for_missing_combos_in_denom","title":"Check for missing levels in denominator — .check_for_missing_combos_in_denom","text":"user passes data frame denominator argument, function checks data frame contains levels strata variables appear data","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_for_missing_combos_in_denom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for missing levels in denominator — .check_for_missing_combos_in_denom","text":"","code":".check_for_missing_combos_in_denom(   data,   denominator,   by,   strata,   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_for_missing_combos_in_denom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for missing levels in denominator — .check_for_missing_combos_in_denom","text":"data data frame denominator denominator data frame character vector column names strata character vector strata column names env environment error messaging","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_for_missing_combos_in_denom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for missing levels in denominator — .check_for_missing_combos_in_denom","text":"invisible","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_no_ard_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Protected Column Names — .check_no_ard_columns","title":"Check Protected Column Names — .check_no_ard_columns","text":"Checks column names passed data frame protected, , begin \"...ard_\" end \"...\"","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_no_ard_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Protected Column Names — .check_no_ard_columns","text":"","code":".check_no_ard_columns(   x,   call = parent.frame(),   exceptions = \"...ard_dummy_for_counting...\" )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_no_ard_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Protected Column Names — .check_no_ard_columns","text":"x data frame call frame error messaging exceptions character string column names exclude checks","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_no_ard_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Protected Column Names — .check_no_ard_columns","text":"invisible","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":null,"dir":"Reference","previous_headings":"","what":"Check variable names — .check_var_nms","title":"Check variable names — .check_var_nms","text":"Check variable names data frame protected names modifies needed","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check variable names — .check_var_nms","text":"","code":".check_var_nms(x, vars_protected)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check variable names — .check_var_nms","text":"x data frame vars_protected character vector protected names","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check variable names — .check_var_nms","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Default Formatting Functions — .default_fmt_fn","title":"Add Default Formatting Functions — .default_fmt_fn","text":"Add Default Formatting Functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Default Formatting Functions — .default_fmt_fn","text":"","code":".default_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Default Formatting Functions — .default_fmt_fn","text":"data frame cards structure","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Default Formatting Functions — .default_fmt_fn","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect columns for non-null contents — .detect_msgs","title":"Detect columns for non-null contents — .detect_msgs","text":"Function looks non-null contents requested columns notifies user removal. Specifically used detecting messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect columns for non-null contents — .detect_msgs","text":"","code":".detect_msgs(x, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect columns for non-null contents — .detect_msgs","text":"x data frame ... columns search within","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect columns for non-null contents — .detect_msgs","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Back fill group variables — .fill_grps_from_variables","title":"Back fill group variables — .fill_grps_from_variables","text":"function back fills values group variables using variable/variable_levels. back filling occur value variable column matches name grouping variable, grouping variable's value NA.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back fill group variables — .fill_grps_from_variables","text":"","code":".fill_grps_from_variables(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back fill group variables — .fill_grps_from_variables","text":"x data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back fill group variables — .fill_grps_from_variables","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Named list predicate — .is_named_list","title":"Named list predicate — .is_named_list","text":"predicate function whether input named list data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Named list predicate — .is_named_list","text":"","code":".is_named_list(x, allow_df = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Named list predicate — .is_named_list","text":"x object check","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-lst_results_as_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Results as Data Frame — .lst_results_as_df","title":"Prepare Results as Data Frame — .lst_results_as_df","text":"Function take results eval_capture_conditions(), named list, e.g. list(result=, warning=, error=), converts data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-lst_results_as_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Results as Data Frame — .lst_results_as_df","text":"","code":".lst_results_as_df(x, variable, fun_name)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-lst_results_as_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Results as Data Frame — .lst_results_as_df","text":"x named list, result eval_capture_conditions() variable string, variable name results fun_name string, name function called get results x","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-lst_results_as_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Results as Data Frame — .lst_results_as_df","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert One Row to Nested List — .one_row_ard_to_nested_list","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"Convert One Row Nested List","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"","code":".one_row_ard_to_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"x ARD data frame one row","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"expression represents element nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"","code":"ard_continuous(mtcars, variables = mpg) |>   dplyr::filter(dplyr::row_number() %in% 1L) |>   apply_statistic_fmt_fn() |>   cards:::.one_row_ard_to_nested_list() #> lst_return[[\"variable\"]][[\"mpg\"]][[\"stat_name\"]][[\"N\"]] <- list( #>     statistic = 32L, statistic_fmt = \"32\", warning = NULL, error = NULL,  #>     context = \"continuous\")"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Denominator Argument — .process_denominator","title":"Process Denominator Argument — .process_denominator","text":"Function takes ard_categorical(denominator) argument returns structured data frame merged count data used denominator percentage calculations.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Denominator Argument — .process_denominator","text":"","code":".process_denominator(   data,   variables,   denominator,   by,   strata,   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Denominator Argument — .process_denominator","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. env env used error reporting.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Denominator Argument — .process_denominator","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Denominator Argument — .process_denominator","text":"","code":"cards:::.process_denominator(mtcars, denominator = 1000, variables = \"cyl\", by = \"gear\") #> $cyl #> # A tibble: 1 × 1 #>   ...ard_N... #>         <int> #> 1        1000 #>"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_nested_list_as_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Nested Lists to Column — .process_nested_list_as_df","title":"Convert Nested Lists to Column — .process_nested_list_as_df","text":"arguments, stat_label, passed nested lists. function properly unnests lists adds results data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_nested_list_as_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Nested Lists to Column — .process_nested_list_as_df","text":"","code":".process_nested_list_as_df(x, arg, new_column, unlist = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_nested_list_as_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Nested Lists to Column — .process_nested_list_as_df","text":"x result data frame arg nested list new_column string, new column name unlist logical, whether fully unlist final results","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_nested_list_as_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Nested Lists to Column — .process_nested_list_as_df","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"A list_flatten()-like function — .purrr_list_flatten","title":"A list_flatten()-like function — .purrr_list_flatten","text":"Function operates similarly purrr::list_flatten(x, name_spec = \"{inner}\")","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list_flatten()-like function — .purrr_list_flatten","text":"","code":".purrr_list_flatten(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A list_flatten()-like function — .purrr_list_flatten","text":"x named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Last Group to Variable — .rename_last_group_as_variable","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"ard_hierarchical*() functions, last grouping variable renamed variable variable_level returning","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"","code":".rename_last_group_as_variable(df_result)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"df_result ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename group variables — .rnm_grp_vars","title":"Rename group variables — .rnm_grp_vars","text":"function combines pair group group_level columns single column. group_level column renamed according value group column.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename group variables — .rnm_grp_vars","text":"","code":".rnm_grp_vars(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename group variables — .rnm_grp_vars","text":"x data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename group variables — .rnm_grp_vars","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Results from table() as Data Frame — .table_as_df","title":"Results from table() as Data Frame — .table_as_df","text":"Takes results table() returns data frame. table() results made data frame, variables made character columns, function also restores column types original classes. strata columns, observed combinations returned.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results from table() as Data Frame — .table_as_df","text":"","code":".table_as_df(   data,   variable = NULL,   by = NULL,   strata = NULL,   count_column = \"...ard_n...\" )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Results from table() as Data Frame — .table_as_df","text":"data data frame variable string indicating column data character vector indicating columns data strata character vector indicating columns data","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Results from table() as Data Frame — .table_as_df","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim ARD — .trim_ard","title":"Trim ARD — .trim_ard","text":"function ingests ARD object trims columns rows downstream use displays. resulting data frame contains numeric results, supplemental information errors/warnings, unnested list columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim ARD — .trim_ard","text":"","code":".trim_ard(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim ARD — .trim_ard","text":"x (data.frame) ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim ARD — .trim_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD-flavor of unique() — .unique_and_sorted","title":"ARD-flavor of unique() — .unique_and_sorted","text":"Essentially wrapper unique(x) |> sort() NA levels removed. Expect case factor logical vectors. factors, levels returned even unobserved. Similarly, logical vectors always return c(TRUE, FALSE), even levels observed.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD-flavor of unique() — .unique_and_sorted","text":"","code":".unique_and_sorted(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD-flavor of unique() — .unique_and_sorted","text":"x vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD-flavor of unique() — .unique_and_sorted","text":"vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate and Capture Conditions — eval_capture_conditions","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"Evaluates expression also capturing error warning conditions. Function always returns named list list(result=, warning=, error=). errors warnings, elements NULL. error, result element NULL. Messages neither saved printed console. Evaluation done via eval_tidy().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"eval_capture_conditions(expr, data = NULL, env = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"expr expression quosure evaluate. data data frame, named list vector. Alternatively, data mask created as_data_mask() new_data_mask(). Objects data priority env. See section data masking. env environment evaluate expr. environment applicable quosures environments.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"# function executes without error or warning eval_capture_conditions(letters[1:2]) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>   # an error is thrown eval_capture_conditions(stop(\"Example Error!\")) #> $result #> NULL #>  #> $warning #> NULL #>  #> $error #> [1] \"Example Error!\" #>   # if more than one warning is returned, all are saved eval_capture_conditions({   warning(\"Warning 1\")   warning(\"Warning 2\")   letters[1:2] }) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> [1] \"Warning 1\" \"Warning 2\" #>  #> $error #> NULL #>   # messages are not printed to the console eval_capture_conditions({   message(\"A message!\")   letters[1:2] }) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>"},{"path":"https://insightsengineering.github.io/cards/reference/get_ard_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Statistics as List — get_ard_statistics","title":"ARD Statistics as List — get_ard_statistics","text":"Returns statistics ARD named list.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/get_ard_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Statistics as List — get_ard_statistics","text":"","code":"get_ard_statistics(x, ..., .column = \"statistic\", .attributes = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/get_ard_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Statistics as List — get_ard_statistics","text":"x (data.frame) ARD data frame class 'card' ... optional arguments indicating rows subset ARD. example, return rows column \"AGEGR1\" \"65-80\", pass AGEGR1 %% \"65-80\". .column (string) string indicating column returned list. Default \"statistic\" .attributes (character) character vector column names returned list attributes. Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/get_ard_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Statistics as List — get_ard_statistics","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/get_ard_statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Statistics as List — get_ard_statistics","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #>  #> $N #> [1] 86 #>  #> $p #> [1] 0.4883721 #>"},{"path":"https://insightsengineering.github.io/cards/reference/label_cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Formatting Function — label_cards","title":"Generate Formatting Function — label_cards","text":"Returns function requested rounding scaling schema.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/label_cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Formatting Function — label_cards","text":"","code":"label_cards(digits = 1, scale = 1, width = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/label_cards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Formatting Function — label_cards","text":"digits non-negative integer specifying number decimal places round statistics scale scalar real number. rounding, input scaled quantity. width non-negative integer specifying minimum width returned formatted values","code":""},{"path":"https://insightsengineering.github.io/cards/reference/label_cards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Formatting Function — label_cards","text":"function","code":""},{"path":"https://insightsengineering.github.io/cards/reference/label_cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Formatting Function — label_cards","text":"","code":"label_cards(2)(pi) #> [1] \"3.14\" label_cards(1, scale = 100)(pi) #> [1] \"314.2\" label_cards(2, width = 5)(pi) #> [1] \" 3.14\""},{"path":"https://insightsengineering.github.io/cards/reference/maximum_variable_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Value — maximum_variable_values","title":"Maximum Value — maximum_variable_values","text":"column passed data frame, function returns named list value largest/last element sort. factors, last level returned, logical vectors TRUE returned. used default value ard_dichotomous(values) specified user.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/maximum_variable_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Value — maximum_variable_values","text":"","code":"maximum_variable_values(data)"},{"path":"https://insightsengineering.github.io/cards/reference/maximum_variable_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Value — maximum_variable_values","text":"data (data.frame) data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/maximum_variable_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Value — maximum_variable_values","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/maximum_variable_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Value — maximum_variable_values","text":"","code":"ADSL[c(\"AGEGR1\", \"BMIBLGR1\")] |> maximum_variable_values() #> $AGEGR1 #> [1] \">80\" #>  #> $BMIBLGR1 #> [1] \">=30\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Nesting — nest_for_ard","title":"ARD Nesting — nest_for_ard","text":"function similar tidyr::nest(), except retains rows unobserved combinations (unobserved factor levels) variables, unobserved combinations stratifying variables. levels wrapped lists can stacked types different classes.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data,   by = NULL,   strata = NULL,   key = \"data\",   rename_columns = TRUE,   list_columns = TRUE )"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Nesting — nest_for_ard","text":"data (data.frame) data frame , strata (character) columns nest /stratified . Arguments similar, important distinction: : data frame nested combinations columns specified, including unobserved combinations unobserved factor levels. strata: data frame nested observed combinations columns specified. Arguments may used conjunction one another. key (string) name new column nested data frame. Default \"data\" rename_columns (logical scalar) logical indicating whether rename strata variables. Default TRUE list_columns (logical scalar) logical indicating whether put levels strata columns list. Default TRUE","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Nesting — nest_for_ard","text":"nested data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data =     ADAE |>       dplyr::left_join(ADSL[c(\"USUBJID\", \"ARM\")], by = \"USUBJID\") |>       dplyr::filter(AOCCSFL %in% \"Y\"),   by = \"ARM\",   strata = \"AESOC\" ) #> # A tibble: 69 × 5 #>    group1 group1_level group2 group2_level data               #>    <chr>  <list>       <chr>  <list>       <list>             #>  1 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [12 × 54]> #>  2 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [15 × 54]> #>  3 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [13 × 54]> #>  4 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [0 × 54]>  #>  5 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #>  6 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  7 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  8 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  9 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> 10 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> # ℹ 59 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/print.card.html","id":null,"dir":"Reference","previous_headings":"","what":"Print — print.card","title":"Print — print.card","text":"Print method objects class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/print.card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print — print.card","text":"","code":"# S3 method for card print(x, n = NULL, columns = c(\"auto\", \"all\"), n_col = 6L, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/print.card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print — print.card","text":"x object class 'card' n integer specifying number rows print columns string indicating whether print selected number columns . n_col columns removed threshold columns present. argument sets threshold. Default 6L ... used","code":""},{"path":"https://insightsengineering.github.io/cards/reference/print.card.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print — print.card","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/print.card.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print — print.card","text":"","code":"ard_categorical(ADSL, variables = AGEGR1) |>   print() #> {cards} data frame: 9 x 9 #>   variable variable_level   context stat_name stat_label statistic #> 1   AGEGR1          65-80 categori…         n          n       144 #> 2   AGEGR1          65-80 categori…         N          N       254 #> 3   AGEGR1          65-80 categori…         p          %     0.567 #> 4   AGEGR1            <65 categori…         n          n        33 #> 5   AGEGR1            <65 categori…         N          N       254 #> 6   AGEGR1            <65 categori…         p          %      0.13 #> 7   AGEGR1            >80 categori…         n          n        77 #> 8   AGEGR1            >80 categori…         N          N       254 #> 9   AGEGR1            >80 categori…         p          %     0.303 #> ℹ 3 more variables: statistic_fmt_fn, warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/print_ard_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print ARD Condition Messages — print_ard_conditions","title":"Print ARD Condition Messages — print_ard_conditions","text":"Function parses errors warnings observed calculating statistics requested ARD prints console messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/print_ard_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print ARD Condition Messages — print_ard_conditions","text":"","code":"print_ard_conditions(x, call = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/print_ard_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print ARD Condition Messages — print_ard_conditions","text":"x (card) ARD data frame call (environment) supplied, calling function used messaging users. Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/print_ard_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print ARD Condition Messages — print_ard_conditions","text":"","code":"ard_continuous(   ADSL,   by = ARM,   variables = AGE,   statistics = ~ list(     mean = \\(x) mean(x),     mean_warning = \\(x) {       warning(\"warn1\")       warning(\"warn2\")       mean(x)     },     err_fn = \\(x) stop(\"'tis an error\")   ) ) |>   print_ard_conditions() #> The following errors were returned while calculating statistics: #> ✖ For variable `AGE` (`ARM = \"Placebo\"`) and \"err_fn\" statistic: 'tis an error #> ✖ For variable `AGE` (`ARM = \"Xanomeline High Dose\"`) and \"err_fn\" statistic: #>   'tis an error #> ✖ For variable `AGE` (`ARM = \"Xanomeline Low Dose\"`) and \"err_fn\" statistic: #>   'tis an error #> The following warnings were returned while calculating statistics: #> ! For variable `AGE` (`ARM = \"Placebo\"`) and \"mean_warning\" statistic: warn1 #> ! For variable `AGE` (`ARM = \"Placebo\"`) and \"mean_warning\" statistic: warn2 #> ! For variable `AGE` (`ARM = \"Xanomeline High Dose\"`) and \"mean_warning\" #>   statistic: warn1 #> ! For variable `AGE` (`ARM = \"Xanomeline High Dose\"`) and \"mean_warning\" #>   statistic: warn2 #> ! For variable `AGE` (`ARM = \"Xanomeline Low Dose\"`) and \"mean_warning\" #>   statistic: warn1 #> ! For variable `AGE` (`ARM = \"Xanomeline Low Dose\"`) and \"mean_warning\" #>   statistic: warn2"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Process tidyselectors — process_selectors","title":"Process tidyselectors — process_selectors","text":"Functions processes tidyselect arguments passed functions cards package. processed values saved calling environment, default. process_selectors(): arguments processed tidyselect converted vector character column names. process_formula_selectors(): arguments expect named lists lists formulas (LHS formula tidyselector). function processes inputs returns named list. name repeated, last entry kept. fill_formula_selectors(): users override default argument values, can important ensure column data frame assigned value. function checks column data assigned value, , fills value default value passed . compute_formula_selector(): used process_formula_selectors() evaluate single argument. check_list_elements(): used check class/type/values list elements, primarily processed process_formula_selectors()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process tidyselectors — process_selectors","text":"","code":"process_selectors(data, ..., env = caller_env())  process_formula_selectors(data, ..., env = caller_env())  fill_formula_selectors(data, ..., env = caller_env())  compute_formula_selector(   data,   x,   arg_name = caller_arg(x),   env = caller_env(),   strict = TRUE )  check_list_elements(   x,   predicate,   error_msg = NULL,   env = rlang::caller_env(),   arg_name = rlang::caller_arg(x) )"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process tidyselectors — process_selectors","text":"data (data.frame) data frame ... (dynamic-dots) named arguments value argument processed tidyselect. process_selectors(): values tidyselect-compatible selectors process_formula_selectors(): values named lists, list formulas combination , single formula. Users may pass ~value shortcut everything() ~ value. check_list_elements(): named arguments name matches existing list env environment, value predicate function test element list, e.g. element must string function. env (environment) env save results . Default calling environment. x compute_formula_selector(): (formula-list-selector) named list, list formulas, single formula converted named list. check_list_elements(): (named list) named list arg_name (string) string argument named processed. Used error messaging. Default caller_arg(x) strict (logical scalar) whether throw error variable exist reference data (passed tidyselect::eval_select) predicate predicate function returns TRUE FALSE error_msg (character) character vector used error messaging mis-specified arguments passed. Elements \"{arg_name}\" \"{variable}\" available using glue syntax messaging.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process tidyselectors — process_selectors","text":"","code":"example_env <- rlang::new_environment()  process_selectors(ADSL, variables = starts_with(\"TRT\"), env = example_env) get(x = \"variables\", envir = example_env) #> [1] \"TRT01P\"  \"TRT01PN\" \"TRT01A\"  \"TRT01AN\" \"TRTSDT\"  \"TRTEDT\"  \"TRTDUR\"    process_formula_selectors(   ADSL,   statistics = list(starts_with(\"TRT\") ~ mean, TRTSDT = min),   env = example_env ) get(x = \"statistics\", envir = example_env) #> $TRT01P #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRT01PN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRT01A #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRT01AN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRTEDT #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRTDUR #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x5580b7655df8> #> <environment: namespace:base> #>  #> $TRTSDT #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>   # process one list compute_formula_selector(ADSL, x = starts_with(\"U\") ~ 1L) #> $USUBJID #> [1] 1 #>"},{"path":"https://insightsengineering.github.io/cards/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars, ","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounding of Numbers — round5","title":"Rounding of Numbers — round5","text":"Rounds values first argument specified number decimal places (default 0). Importantly, round5() use Base R's \"round even\" default. Standard rounding methods implemented, example, round5(0.5) = 1.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounding of Numbers — round5","text":"","code":"round5(x, digits = 0)"},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounding of Numbers — round5","text":"x numeric vector digits integer indicating number decimal places","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounding of Numbers — round5","text":"numeric vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rounding of Numbers — round5","text":"Function inspired janitor::round_half_up().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounding of Numbers — round5","text":"","code":"x <- 0:4 / 2 round5(x) |> setNames(x) #>   0 0.5   1 1.5   2  #>   0   1   1   2   2   # compare results to Base R round(x) |> setNames(x) #>   0 0.5   1 1.5   2  #>   0   0   1   2   2"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Selectors — selectors","title":"ARD Selectors — selectors","text":"selection helpers match variables according given pattern. all_ard_groups(): Use function dplyr selecting environments, dplyr::select(). Function selects grouping columns, e.g. columns named \"group##\" \"group##_level\". all_ard_variables(): Use function dplyr selecting environments, dplyr::select(). Function selects variables columns, e.g. columns named \"variable\" \"variable_level\".","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Selectors — selectors","text":"","code":"all_ard_groups(types = c(\"names\", \"levels\"))  all_ard_variables(types = c(\"names\", \"levels\"))"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Selectors — selectors","text":"types (character) type column select. \"names\" selects columns variable name columns, \"levels\" selects level columns. Default c(\"names\", \"levels\")","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Selectors — selectors","text":"tidyselect output","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Selectors — selectors","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #>  #> $N #> [1] 86 #>  #> $p #> [1] 0.4883721 #>"},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Shuffle ARD — shuffle_ard","title":"Shuffle ARD — shuffle_ard","text":"function ingests ARD object shuffles information prepare analysis. Helpful streamlining across multiple ARDs. Combines group/group_level 1 column, back fills missing grouping values variable levels possible, optionally trims statistics-level metadata.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shuffle ARD — shuffle_ard","text":"","code":"shuffle_ard(x, trim = TRUE)"},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shuffle ARD — shuffle_ard","text":"x (data.frame) ARD data frame trim (logical(1)) Boolean representing whether trim away statistic-level metadata filter numeric statistic values.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shuffle ARD — shuffle_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shuffle ARD — shuffle_ard","text":"","code":"bind_ard(   ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\"),   ard_categorical(ADSL, variables = \"ARM\") ) |>   shuffle_ard() #> # A tibble: 36 × 6 #>    ARM                  variable label context     stat_name statistic #>    <chr>                <fct>    <chr> <chr>       <chr>         <dbl> #>  1 Placebo              AGEGR1   65-80 categorical n            42     #>  2 Placebo              AGEGR1   65-80 categorical N            86     #>  3 Placebo              AGEGR1   65-80 categorical p             0.488 #>  4 Placebo              AGEGR1   <65   categorical n            14     #>  5 Placebo              AGEGR1   <65   categorical N            86     #>  6 Placebo              AGEGR1   <65   categorical p             0.163 #>  7 Placebo              AGEGR1   >80   categorical n            30     #>  8 Placebo              AGEGR1   >80   categorical N            86     #>  9 Placebo              AGEGR1   >80   categorical p             0.349 #> 10 Xanomeline High Dose AGEGR1   65-80 categorical n            55     #> # ℹ 26 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Functions — summary_functions","title":"Summary Functions — summary_functions","text":"continuous_variable_summary_fns() returns named list summary functions continuous variables. functions include slight modifications base equivalents. example, min() max() functions return NA instead Inf empty vector passed. Statistics \"p25\" \"p75\" calculated quantile(type = 2), matches SAS's default value. categorical_variable_summary_fns() summary functions categorical variables. Options c(\"n\", \"N\", \"p\"). user requests, example, \"p\", function return n N well, since needed calculate \"p\". missing_variable_summary_fns() summary functions suitable variable-level summaries, number rate missing data.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Functions — summary_functions","text":"","code":"categorical_variable_summary_fns(   summaries = c(\"n\", \"p\", \"N\"),   other_stats = NULL )  continuous_variable_summary_fns(   summaries = c(\"N\", \"mean\", \"sd\", \"median\", \"p25\", \"p75\", \"min\", \"max\"),   other_stats = NULL )  missing_variable_summary_fns(   summaries = c(\"N_obs\", \"N_miss\", \"N_nonmiss\", \"p_miss\", \"p_nonmiss\") )"},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Functions — summary_functions","text":"summaries (character) character vector results include output. categorical_variable_summary_fns(): Select one 'n', 'p', 'N'. continuous_variable_summary_fns(): Select one 'N', 'mean', 'sd', 'median', 'p25', 'p75', 'min', 'max'. missing_variable_summary_fns(): Select one 'N_obs', 'N_miss', 'N_nonmiss', 'p_miss', 'p_nonmiss'. other_stats named list statistic functions supplement pre-programmed functions.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Functions — summary_functions","text":"named list summary functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Functions — summary_functions","text":"","code":"# continuous variable summaries ard_continuous(   ADSL,   variables = \"AGE\",   statistics = ~ continuous_variable_summary_fns(c(\"N\", \"median\")) ) #> {cards} data frame: 2 x 8 #>   variable   context stat_name stat_label statistic statistic_fmt_fn #> 1      AGE continuo…         N          N       254                0 #> 2      AGE continuo…    median     Median        77                1 #> ℹ 2 more variables: warning, error  # categorical variable summaries ard_categorical(   ADSL,   variables = \"AGEGR1\",   statistics = ~ categorical_variable_summary_fns(c(\"n\", \"N\")) ) #> {cards} data frame: 6 x 9 #>   variable variable_level   context stat_name stat_label statistic #> 1   AGEGR1          65-80 categori…         n          n       144 #> 2   AGEGR1          65-80 categori…         N          N       254 #> 3   AGEGR1            <65 categori…         n          n        33 #> 4   AGEGR1            <65 categori…         N          N       254 #> 5   AGEGR1            >80 categori…         n          n        77 #> 6   AGEGR1            >80 categori…         N          N       254 #> ℹ 3 more variables: statistic_fmt_fn, warning, error  # summary for rates of missing data ard_missing(   ADSL,   variables = c(\"AGE\", \"AGEGR1\"),   statistics = ~ missing_variable_summary_fns() ) #> {cards} data frame: 10 x 8 #>    variable context stat_name stat_label statistic statistic_fmt_fn #> 1       AGE missing     N_obs  Vector L…       254                0 #> 2       AGE missing    N_miss  N Missing         0                0 #> 3       AGE missing N_nonmiss  N Non-mi…       254                0 #> 4       AGE missing    p_miss  % Missing         0             <fn> #> 5       AGE missing p_nonmiss  % Non-mi…         1             <fn> #> 6    AGEGR1 missing     N_obs  Vector L…       254                0 #> 7    AGEGR1 missing    N_miss  N Missing         0                0 #> 8    AGEGR1 missing N_nonmiss  N Non-mi…       254                0 #> 9    AGEGR1 missing    p_miss  % Missing         0             <fn> #> 10   AGEGR1 missing p_nonmiss  % Non-mi…         1             <fn> #> ℹ 2 more variables: warning, error"},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting Syntax — syntax","title":"Selecting Syntax — syntax","text":"Selecting Syntax","code":""},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":"selectors","dir":"Reference","previous_headings":"","what":"Selectors","title":"Selecting Syntax — syntax","text":"cards package also utilizes selectors: selectors tidyselect package custom selectors. Review help files details. tidy selectors everything(), all_of(), any_of(), starts_with(), ends_with(), contains(), matches(), num_range(), last_col() cards selectors all_ard_groups(), all_ard_variables()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":"formula-and-list-selectors","dir":"Reference","previous_headings":"","what":"Formula and List Selectors","title":"Selecting Syntax — syntax","text":"arguments cards package accept list formula notation, e.g. ard_continuous(statistic=). enumerates tips shortcuts using list formulas. List Formulas Typical usage includes list formulas, LHS variable name selector.   Named List may also pass named list; however, tidyselect selectors supported syntax.   Hybrid Named List/List Formulas Pass combination formulas named elements   Shortcuts can pass single formula, equivalent passing formula list.   shortcut select variables, can omit LHS formula. two calls equivalent.   Combination Selectors Selectors can combined using c() function.","code":"ard_continuous(statistics = list(age ~ list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = starts_with(\"a\") ~ list(mean = mean) ard_continuous(statistics = ~list(N = \\(x) length(x))) ard_continuous(statistics = everything() ~ list(N = \\(x) length(x))) ard_continuous(statistics = c(everything(), -age) ~ list(N = \\(x) length(x)))"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Order of ARD — tidy_ard_order","title":"Standard Order of ARD — tidy_ard_order","text":"ARD functions relocating columns rows standard order tidy_ard_column_order() relocates columns ARD standard order tidy_ard_row_order() orders rows ARD according variables, groups, strata, retaining order input ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Order of ARD — tidy_ard_order","text":"","code":"tidy_ard_column_order(x)  tidy_ard_row_order(x)"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Order of ARD — tidy_ard_order","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Order of ARD — tidy_ard_order","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Order of ARD — tidy_ard_order","text":"","code":"# order columns ard <-   dplyr::bind_rows(     ard_continuous(mtcars, variables = \"mpg\"),     ard_continuous(mtcars, variables = \"mpg\", by = \"cyl\")   ) names(ard) #>  [1] \"variable\"         \"context\"          \"stat_name\"        \"stat_label\"       #>  [5] \"statistic\"        \"statistic_fmt_fn\" \"warning\"          \"error\"            #>  [9] \"group1\"           \"group1_level\"      tidy_ard_column_order(ard) #> {cards} data frame: 32 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1    <NA>                   mpg         N          N        32 #> 2    <NA>                   mpg      mean       Mean    20.091 #> 3    <NA>                   mpg        sd         SD     6.027 #> 4    <NA>                   mpg    median     Median      19.2 #> 5    <NA>                   mpg       p25  25th Per…     15.35 #> 6    <NA>                   mpg       p75  75th Per…      22.8 #> 7    <NA>                   mpg       min        Min      10.4 #> 8    <NA>                   mpg       max        Max      33.9 #> 9     cyl            4      mpg         N          N        11 #> 10    cyl            4      mpg      mean       Mean    26.664 #> ℹ 22 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  # order rows dplyr::bind_rows(   ard_continuous(mtcars, variables = c(\"mpg\", \"disp\"), by = \"cyl\"),   ard_ttest(mtcars, variable = \"mpg\", by = \"cyl\"),   ard_ttest(mtcars, variable = \"disp\", by = \"cyl\") ) |>   tidy_ard_row_order() #> {cards} data frame: 76 x 10 #>    group1 group1_level variable stat_name stat_label statistic #> 1     cyl            4      mpg         N          N        11 #> 2     cyl            4      mpg      mean       Mean    26.664 #> 3     cyl            4      mpg        sd         SD      4.51 #> 4     cyl            4      mpg    median     Median        26 #> 5     cyl            4      mpg       p25  25th Per…      22.8 #> 6     cyl            4      mpg       p75  75th Per…      30.4 #> 7     cyl            4      mpg       min        Min      21.4 #> 8     cyl            4      mpg       max        Max      33.9 #> 9     cyl            6      mpg         N          N         7 #> 10    cyl            6      mpg      mean       Mean    19.743 #> ℹ 66 more rows #> ℹ Use `print(n = ...)` to see more rows #> ℹ 4 more variables: context, statistic_fmt_fn, warning, error  NULL #> NULL"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Build ARD from tidier — tidy_as_ard","title":"Build ARD from tidier — tidy_as_ard","text":"Function converts model's one-row tidy data frame ARD structure. tidied data frame must constructed eval_capture_conditions(). function primarily developers consistency checks included.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"tidy_as_ard(   lst_tidy,   tidy_result_names,   fun_args_to_record,   formals = list(),   passed_args = list(),   lst_ard_columns )"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build ARD from tidier — tidy_as_ard","text":"lst_tidy (named list) list tidied results constructed eval_capture_conditions(), e.g. eval_capture_conditions(t.test(mtcars$mpg ~ mtcars$) |> broom::tidy()) tidy_result_names (character) character vector column names expected tidier method. used construct blank results event error. fun_args_to_record (character) character vector function argument names added ARD. formals (pairlist) results formals(), e.g. formals(fisher.test). used get default argument values unspecified arguments. passed_args (named list) named list additional arguments passed modeling function. lst_ard_columns (named list) named list values added ARD data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build ARD from tidier — tidy_as_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"# example how one may create a fisher.test() ARD function my_ard_fishertest <- function(data, by, variable, ...) {   # perform fisher test and format results -----------------------------------   lst_tidy_fisher <-     eval_capture_conditions(       stats::fisher.test(x = data[[variable]], y = data[[by]], ...) |>         broom::tidy()     )    # build ARD ------------------------------------------------------------------   tidy_as_ard(     lst_tidy = lst_tidy_fisher,     tidy_result_names =       c(\"estimate\", \"p.value\", \"conf.low\", \"conf.high\", \"method\", \"alternative\"),     fun_args_to_record =       c(         \"workspace\", \"hybrid\", \"hybridPars\", \"control\", \"or\",         \"conf.int\", \"conf.level\", \"simulate.p.value\", \"B\"       ),     formals = formals(stats::fisher.test),     passed_args = dots_list(...),     lst_ard_columns = list(group1 = by, variable = variable, context = \"fishertest\")   ) }  my_ard_fishertest(mtcars, by = \"am\", variable = \"vs\") #> {cards} data frame: 6 x 8 #>   group1 variable   context   stat_name statistic statistic_fmt_fn #> 1     am       vs fisherte…    estimate     1.956                1 #> 2     am       vs fisherte…     p.value     0.473                1 #> 3     am       vs fisherte…    conf.low     0.383                1 #> 4     am       vs fisherte…   conf.high    10.592                1 #> 5     am       vs fisherte…      method Fisher's…             NULL #> 6     am       vs fisherte… alternative two.sided             NULL #> ℹ 2 more variables: warning, error"},{"path":"https://insightsengineering.github.io/cards/news/index.html","id":"cards-development-version","dir":"Changelog","previous_headings":"","what":"cards (development version)","title":"cards (development version)","text":"Added ard_categorical(statistics) argument. Added function categorical_variable_summary_fns() made default value ard_categorical(statistics). variable-level statistics regarding missingness longer returned default ard_continuous() ard_categorical(). Added function ard_missing() tabulate statistics related missingness. default statistics returned new function missing_variable_summary_fns(): ‘N_obs’, ‘N_miss’, ‘N_nonmiss’, ‘p_miss’, ‘p_nonmiss’.","code":""}]
