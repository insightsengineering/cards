[{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to cards","title":"Contributing to cards","text":"outlines propose change {cards}.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to cards","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to cards","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to cards","text":"Fork package clone onto computer. Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). Make changes, commit git, create PR. title PR briefly describe change. body PR contain Closes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to cards","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept. helper/non-exported function named period prefix, e.g. .helper_function(). helper/non-exported functions documented roxygen2 indicated . Include #' @keywords internal mark function internal. helper functions appear examples, need use cards::: prefix, e.g. #' @example cards:::.helper_function()","code":""},{"path":"https://insightsengineering.github.io/cards/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to cards","text":"Please note cards project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"yaml","dir":"Articles","previous_headings":"","what":"YAML","title":"structures","text":"as_nested_list() function prepares ARD data frame converted YAML object.","code":"ard |>    as_nested_list() |>    yaml::as.yaml() |>    cat() #> variable: #>   AGE: #>     group1: #>       ARM: #>         group1_level: #>           Placebo: #>             stat_name: #>               'N': #>                 statistic: 86 #>                 statistic_fmt: '86' #>                 warning: ~ #>                 error: ~ #>                 context: continuous #>               mean: #>                 statistic: 75.2093023 ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"json","dir":"Articles","previous_headings":"","what":"JSON","title":"structures","text":"as_nested_list() function prepares ARD data frame converted JSON object. Use jsonlite::write_json() function convert JSON write disk simultaneously.","code":"ard |>    as_nested_list() |>    jsonlite::toJSON(pretty = TRUE) #> { #>   \"variable\": { #>     \"AGE\": { #>       \"group1\": { #>         \"ARM\": { #>           \"group1_level\": { #>             \"Placebo\": { #>               \"stat_name\": { #>                 \"N\": { #>                   \"statistic\": [86], #>                   \"statistic_fmt\": [\"86\"], #>                   \"warning\": {}, #>                   \"error\": {}, #>                   \"context\": [\"continuous\"] #>                 }, ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"rest-api","dir":"Articles","previous_headings":"","what":"REST API","title":"structures","text":"TODO: Update section","code":"library(plumber) library(jsonlite)  #* @get /nested_json #* @serializer unboxedJSON function() {   ard |>    as_nested_list() |>    jsonlite::toJSON(auto_unbox = TRUE) } #> function() { #>   ard |>  #>   as_nested_list() |>  #>   jsonlite::toJSON(auto_unbox = TRUE) #> }"},{"path":"https://insightsengineering.github.io/cards/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer. Becca Krouse. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/cards/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D, Krouse B (2024). cards: CDISC Analysis Results Data. R package version 0.0.0.9009,  https://insightsengineering.github.io/cards/, https://github.com/insightsengineering/cards.","code":"@Manual{,   title = {cards: CDISC Analysis Results Data},   author = {Daniel D. Sjoberg and Becca Krouse},   year = {2024},   note = {R package version 0.0.0.9009,  https://insightsengineering.github.io/cards/},   url = {https://github.com/insightsengineering/cards}, }"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"cards","dir":"","previous_headings":"","what":"CDISC Analysis Results Data","title":"CDISC Analysis Results Data","text":"package preliminary state, breaking changes made without notice deprecation. CDISC Analysis Results Standard aims facilitate automation, reproducibility, reusability, traceability analysis results data (ARD). {cards} package creates CDISC Analysis Result Data Sets. Use cases: Quality Control (QC) existing tables figures. Pre-calculate statistics summarized tables figures. Medical writers may easily access statistics place reports without copying pasting reports. Provides consistent format results lends results combined across studies re-use re-analysis.","code":""},{"path":"https://insightsengineering.github.io/cards/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CDISC Analysis Results Data","text":"can install development version cards GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cards\")"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CDISC Analysis Results Data","text":"ARD Examples","code":"library(cards)  ard_continuous(ADSL, by = \"ARM\", variables = c(\"AGE\", \"BMIBL\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ard_categorical(ADSL, by = \"ARM\", variables = c(\"AGEGR1\", \"SEX\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>  # only only two groups for a t-test   ard_ttest(by = \"ARM\", variable = \"AGE\") |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\", \"method\")) |>    flatten_ard() |>    knitr::kable() survival::coxph(ggsurvfit::Surv_CNSR() ~ TRTP, data = ADTTE) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\")) |>    flatten_ard() |>    tidyr::drop_na() |>   knitr::kable()"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ADaM Data — adam","title":"Example ADaM Data — adam","text":"Data frame imported CDISC SDTM/ADaM Pilot Project","code":""},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ADaM Data — adam","text":"","code":"ADSL  ADAE  ADTTE"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example ADaM Data — adam","text":"object class tbl_df (inherits tbl, data.frame) 254 rows 48 columns. object class tbl_df (inherits tbl, data.frame) 1191 rows 55 columns. object class tbl_df (inherits tbl, data.frame) 254 rows 26 columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Formatting Functions — apply_statistic_fmt_fn","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"Apply formatting functions raw statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"apply_statistic_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   apply_statistic_fmt_fn() #> # A tibble: 8 × 9 #>   variable context stat_name stat_label statistic statistic_fmt statistic_fmt_fn #>   <chr>    <chr>   <chr>     <chr>      <list>    <list>        <list>           #> 1 AGE      contin… N         N          <int [1]> <chr [1]>     <int [1]>        #> 2 AGE      contin… mean      Mean       <dbl [1]> <chr [1]>     <int [1]>        #> 3 AGE      contin… sd        SD         <dbl [1]> <chr [1]>     <int [1]>        #> 4 AGE      contin… median    Median     <dbl [1]> <chr [1]>     <int [1]>        #> 5 AGE      contin… p25       25th Perc… <dbl [1]> <chr [1]>     <int [1]>        #> 6 AGE      contin… p75       75th Perc… <dbl [1]> <chr [1]>     <int [1]>        #> 7 AGE      contin… min       Min        <dbl [1]> <chr [1]>     <int [1]>        #> 8 AGE      contin… max       Max        <dbl [1]> <chr [1]>     <int [1]>        #> # ℹ 2 more variables: warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Helpers — ard-helpers","title":"ARD Helpers — ard-helpers","text":"Helper functions working ARD data frames.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Helpers — ard-helpers","text":"","code":"get_ard_statistics(   x,   ...,   .column = \"statistic\",   .attributes = c(\"stat_label\", \"statistic_fmt_fn\", \"warning\", \"error\") )  bind_ard(..., .update = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Helpers — ard-helpers","text":"x (data.frame) ARD data frame class 'card' ... get_ard_statistics(): optional named arguments indicating rows subset ARD. example, return rows column \"AGEGR1\" \"65-80\", pass AGEGR1 %% \"65-80\". bind_ard(): ARDs combine. argument can either ARD, list ARDs. Columns matched name, missing columns filled NA. .column (string) string indicating column returned list. Default \"statistic\" .attributes (character) character vector column names returned list attributes. Default c(\"stat_label\", \"statistic_fmt_fn\", \"warning\", \"error\") .update (logical scalar) logical indicating whether update duplicate ARD statistics. Default FALSE. statistic type repeated .update=TRUE, recently added statistics retained, others omitted.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Helpers — ard-helpers","text":"transformed ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARD Helpers — ard-helpers","text":"get_ard_statistics(): function returns statistics ARD named list. statistic label, formatting instruction, error warning messages returned attributes. bind_ard(): wrapper dplyr::bind_rows() additional checks duplicated statistics","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Helpers — ard-helpers","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $N #> [1] 86 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>   bind_ard(ard, ard, .update = TRUE) #> ℹ 27 duplicate observations removed. #> # A tibble: 27 × 11 #>    group1 group1_level variable variable_level context     stat_name stat_label #>    <chr>  <list>       <chr>    <list>         <chr>       <chr>     <chr>      #>  1 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  2 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical N         N          #>  3 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  4 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  5 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical N         N          #>  6 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  7 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  8 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical N         N          #>  9 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #> 10 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #> # ℹ 17 more rows #> # ℹ 4 more variables: statistic <list>, statistic_fmt_fn <list>, #> #   warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Attributes — ard_attributes","title":"ARD Attributes — ard_attributes","text":"Add variable attributes ARD data frame. label attribute added columns, label specified label set column using label= argument, column name placed label statistic. class attribute also returned columns. attribute returned attributes() also added, e.g. factor levels.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Attributes — ard_attributes","text":"","code":"ard_attributes(data, variables = everything(), label = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Attributes — ard_attributes","text":"data (data.frame) data frame variables (tidy-select) variables include label (named list) named list variable labels, e.g. list(cyl = \". Cylinders\"). Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Attributes — ard_attributes","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Attributes — ard_attributes","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, 'label') <- \"Lowercase Letters\"  ard_attributes(df, variables = everything()) #> # A tibble: 4 × 5 #>   variable stat_name statistic stat_label     context    #> * <chr>    <chr>     <list>    <chr>          <chr>      #> 1 var1     label     <chr [1]> Variable Label attributes #> 2 var1     class     <chr [1]> Variable Class attributes #> 3 var2     label     <chr [1]> Variable Label attributes #> 4 var2     class     <chr [1]> Variable Class attributes"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical ARD Statistics — ard_categorical","title":"Categorical ARD Statistics — ard_categorical","text":"Compute Analysis Results Data (ARD) categorical summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(   data,   variables,   by = NULL,   strata = NULL,   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical ARD Statistics — ard_categorical","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical ARD Statistics — ard_categorical","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"denominators","dir":"Reference","previous_headings":"","what":"Denominators","title":"Categorical ARD Statistics — ard_categorical","text":"default, ard_categorical() function returns statistics \"n\" \"N\", little \"n\" counts variable levels, \"N\" number non-missing observations. default calculation percentage merely p = n/N. However, sometimes necessary provide different \"N\" use denominator calculation. example, calculation rates various observed adverse events, may need update denominator number enrolled subjects. cases, use denominator argument specify new definition \"N\", subsequently \"p\". argument expects following inputs: data frame. columns data frame overlap /strata columns used calculate new \"N\". integer. single integer used new \"N\" string: one c(\"column\", \"row\", \"cell\"). \"column\" equivalent denominator=NULL. \"row\" gives 'row' percentages /strata columns 'top' cross table, variables rows. \"cell\" gives percentages denominator number non-missing rows source data frame. structured data frame. data frame include columns /strata. last column must named \"...ard_N...\". integers column used updated \"N\" calculations.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 27 × 10 #>    group1 group1_level    variable variable_level stat_name stat_label statistic #>    <chr>  <chr>           <chr>    <chr>          <chr>     <chr>      <chr>     #>  1 ARM    Placebo         AGEGR1   65-80          n         n          42        #>  2 ARM    Placebo         AGEGR1   65-80          N         N          86        #>  3 ARM    Placebo         AGEGR1   65-80          p         %          0.488372… #>  4 ARM    Placebo         AGEGR1   <65            n         n          14        #>  5 ARM    Placebo         AGEGR1   <65            N         N          86        #>  6 ARM    Placebo         AGEGR1   <65            p         %          0.162790… #>  7 ARM    Placebo         AGEGR1   >80            n         n          30        #>  8 ARM    Placebo         AGEGR1   >80            N         N          86        #>  9 ARM    Placebo         AGEGR1   >80            p         %          0.348837… #> 10 ARM    Xanomeline Hig… AGEGR1   65-80          n         n          55        #> # ℹ 17 more rows #> # ℹ 3 more variables: statistic_fmt_fn <chr>, warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"ARD functions comparing values groups. ard_ttest() -> t.test(data[[variable]] ~ data[[]], ...) ard_wilcoxtest() -> wilcox.test(data[[variable]] ~ data[[]], ...) ard_chisqtest() -> chisq.test(x = data[[variable]], y = data[[]], ...) ard_fishertest() -> fisher.test(x = data[[variable]], y = data[[]], ...)","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)  ard_chisqtest(data, by, variable, ...)  ard_fishertest(data, by, variable, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data (data.frame) data frame (tidy-select) character column name compare variable (tidy-select) character column name compared ... arguments passed method.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_ttest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 14 × 8 #>    group1 group1_level     variable stat_name stat_label statistic warning error #>    <chr>  <chr>            <chr>    <chr>     <chr>      <chr>     <chr>   <chr> #>  1 ARM    Placebo          AGE      estimate1 Group 1 M… 75.20930… NA      NA    #>  2 ARM    Xanomeline High… AGE      estimate2 Group 2 M… 74.38095… NA      NA    #>  3 ARM    NA               AGE      estimate  Mean Diff… 0.828349… NA      NA    #>  4 ARM    NA               AGE      statistic t Statist… 0.655196… NA      NA    #>  5 ARM    NA               AGE      p.value   p-value    0.513240… NA      NA    #>  6 ARM    NA               AGE      parameter Degrees o… 167.3624… NA      NA    #>  7 ARM    NA               AGE      conf.low  CI Lower … -1.66763… NA      NA    #>  8 ARM    NA               AGE      conf.high CI Upper … 3.324336… NA      NA    #>  9 ARM    NA               AGE      method    method     Welch Tw… NA      NA    #> 10 ARM    NA               AGE      alternat… alternati… two.sided NA      NA    #> 11 ARM    NA               AGE      mu        Null Hypo… 0         NA      NA    #> 12 ARM    NA               AGE      paired    Paired t-… FALSE     NA      NA    #> 13 ARM    NA               AGE      var.equal Assumed E… FALSE     NA      NA    #> 14 ARM    NA               AGE      conf.lev… CI Confid… 0.95      NA      NA     ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_wilcoxtest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 12 × 7 #>    group1 variable stat_name   stat_label            statistic     warning error #>    <chr>  <chr>    <chr>       <chr>                 <chr>         <chr>   <chr> #>  1 ARM    AGE      statistic   W Statistic           3862.5        NA      NA    #>  2 ARM    AGE      p.value     p-value               0.4354637488… NA      NA    #>  3 ARM    AGE      method      method                Wilcoxon ran… NA      NA    #>  4 ARM    AGE      alternative alternative           two.sided     NA      NA    #>  5 ARM    AGE      mu          mu                    0             NA      NA    #>  6 ARM    AGE      paired      Paired test           FALSE         NA      NA    #>  7 ARM    AGE      exact       exact                 NA            NA      NA    #>  8 ARM    AGE      correct     Continuity Correction TRUE          NA      NA    #>  9 ARM    AGE      conf.int    conf.int              FALSE         NA      NA    #> 10 ARM    AGE      conf.level  conf.level            0.95          NA      NA    #> 11 ARM    AGE      tol.root    tol.root              1e-04         NA      NA    #> 12 ARM    AGE      digits.rank digits.rank           Inf           NA      NA     ADSL |>   ard_chisqtest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 9 × 7 #>   group1 variable stat_name        stat_label          statistic   warning error #>   <chr>  <chr>    <chr>            <chr>               <named lis> <chr>   <chr> #> 1 ARM    AGEGR1   statistic        X-squared Statistic <dbl [1]>   NA      NA    #> 2 ARM    AGEGR1   p.value          p-value             <dbl [1]>   NA      NA    #> 3 ARM    AGEGR1   parameter        parameter           <int [1]>   NA      NA    #> 4 ARM    AGEGR1   method           method              <chr [1]>   NA      NA    #> 5 ARM    AGEGR1   correct          correct             <lgl [1]>   NA      NA    #> 6 ARM    AGEGR1   p                p                   <language>  NA      NA    #> 7 ARM    AGEGR1   rescale.p        rescale.p           <lgl [1]>   NA      NA    #> 8 ARM    AGEGR1   simulate.p.value simulate.p.value    <lgl [1]>   NA      NA    #> 9 ARM    AGEGR1   B                B                   <dbl [1]>   NA      NA     ADSL[1:30,] |>   ard_fishertest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 12 × 7 #>    group1 variable stat_name        stat_label       statistic    warning error #>    <chr>  <chr>    <chr>            <chr>            <named list> <chr>   <chr> #>  1 ARM    AGEGR1   p.value          p-value          <dbl [1]>    NA      NA    #>  2 ARM    AGEGR1   method           method           <chr [1]>    NA      NA    #>  3 ARM    AGEGR1   alternative      alternative      <chr [1]>    NA      NA    #>  4 ARM    AGEGR1   workspace        workspace        <dbl [1]>    NA      NA    #>  5 ARM    AGEGR1   hybrid           hybrid           <lgl [1]>    NA      NA    #>  6 ARM    AGEGR1   hybridPars       hybridPars       <language>   NA      NA    #>  7 ARM    AGEGR1   control          control          <language>   NA      NA    #>  8 ARM    AGEGR1   or               or               <dbl [1]>    NA      NA    #>  9 ARM    AGEGR1   conf.int         conf.int         <lgl [1]>    NA      NA    #> 10 ARM    AGEGR1   conf.level       conf.level       <dbl [1]>    NA      NA    #> 11 ARM    AGEGR1   simulate.p.value simulate.p.value <lgl [1]>    NA      NA    #> 12 ARM    AGEGR1   B                B                <dbl [1]>    NA      NA"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous ARD Statistics — ard_continuous","title":"Continuous ARD Statistics — ard_continuous","text":"Compute Analysis Results Data (ARD) simple continuous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(   data,   variables,   by = NULL,   strata = NULL,   statistics = everything() ~ continuous_variable_summary_fns(),   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous ARD Statistics — ard_continuous","text":"data (data.frame) data frame variables (tidy-select) columns include summaries , strata (tidy-select) columns /stratified summary statistic calculation. Arguments similar, important distinction: : results calculated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results calculated observed combinations columns specified. Arguments may used conjunction one another. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) mean(x))). value assigned variable must also named list, names used reference function element function object. Typically, function return scalar statistic, function returns named list results also acceptable, e.g. list(conf.low = -1, conf.high = 1). However, errors occur, messaging less clear setting. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(mean = \"Mean\", sd = \"SD\") everything() ~ list(mean ~ \"Mean\", sd ~ \"SD\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous ARD Statistics — ard_continuous","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(ADSL, by = \"ARM\", variables = \"AGE\") |>   flatten_ard() #> # A tibble: 24 × 9 #>    group1 group1_level  variable stat_name stat_label statistic statistic_fmt_fn #>    <chr>  <chr>         <chr>    <chr>     <chr>      <chr>     <chr>            #>  1 ARM    Placebo       AGE      N         N          86        0                #>  2 ARM    Placebo       AGE      mean      Mean       75.20930… 1                #>  3 ARM    Placebo       AGE      sd        SD         8.590167… 1                #>  4 ARM    Placebo       AGE      median    Median     76        1                #>  5 ARM    Placebo       AGE      p25       25th Perc… 69        1                #>  6 ARM    Placebo       AGE      p75       75th Perc… 82        1                #>  7 ARM    Placebo       AGE      min       Min        52        1                #>  8 ARM    Placebo       AGE      max       Max        89        1                #>  9 ARM    Xanomeline H… AGE      N         N          84        0                #> 10 ARM    Xanomeline H… AGE      mean      Mean       74.38095… 1                #> # ℹ 14 more rows #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":null,"dir":"Reference","previous_headings":"","what":"Dichotomous ARD Statistics — ard_dichotomous","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"Compute Analysis Results Data (ARD) dichotomous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"","code":"ard_dichotomous(   data,   variables,   by = NULL,   strata = NULL,   values = max_value(data[variables]),   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. values (named list) named list dichotomous values tabulate. Default max_value(data), returns largest/last value sort. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_dichotomous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dichotomous ARD Statistics — ard_dichotomous","text":"","code":"ard_dichotomous(mtcars, variables = c(cyl, am), values = list(cyl = 4)) #> # A tibble: 6 × 9 #>   variable variable_level context     stat_name stat_label statistic #>   <chr>    <list>         <chr>       <chr>     <chr>      <list>    #> 1 am       <dbl [1]>      dichotomous n         n          <int [1]> #> 2 am       <dbl [1]>      dichotomous N         N          <int [1]> #> 3 am       <dbl [1]>      dichotomous p         %          <dbl [1]> #> 4 cyl      <dbl [1]>      dichotomous n         n          <int [1]> #> 5 cyl      <dbl [1]>      dichotomous N         N          <int [1]> #> 6 cyl      <dbl [1]>      dichotomous p         %          <dbl [1]> #> # ℹ 3 more variables: statistic_fmt_fn <list>, warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical ARD Statistics — ard_hierarchical","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"Performs hierarchical nested tabulations, e.g. tabulates AE terms nested within AE system organ class. ard_hierarchical() includes summaries last variable listed variables argument, nested within variables included. ard_hierarchical_count() includes summaries variables listed variables argument summary nested within preceding variables, e.g. variables=c(AESOC, AETERM) summarizes AETERM nested AESOC, also summarizes counts AESOC.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"","code":"ard_hierarchical(   data,   variables,   by = NULL,   statistics = everything() ~ categorical_variable_summary_fns(),   denominator = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )  ard_hierarchical_count(   data,   variables,   by = NULL,   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"data (data.frame) data frame variables (tidy-select) variables perform nested/hierarchical tabulations within. (tidy-select) variables perform tabulations . combinations variables specified appear results. Default NULL statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(n = \"n\", p = \"pct\") everything() ~ list(n ~ \"n\", p ~ \"pct\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_hierarchical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical ARD Statistics — ard_hierarchical","text":"","code":"ard_hierarchical(   data = ADAE,   variables = c(AESOC, AETERM),   by = c(TRTA, AESEV),   denominator = ADSL |> dplyr::rename(TRTA = ARM) ) |>   flatten_ard() #> # A tibble: 6,534 × 14 #>    group1 group1_level group2 group2_level group3 group3_level      variable #>    <chr>  <chr>        <chr>  <chr>        <chr>  <chr>             <chr>    #>  1 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  2 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  3 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  4 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  5 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  6 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  7 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  8 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #>  9 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #> 10 TRTA   Placebo      AESEV  MILD         AESOC  CARDIAC DISORDERS AETERM   #> # ℹ 6,524 more rows #> # ℹ 7 more variables: variable_level <chr>, stat_name <chr>, stat_label <chr>, #> #   statistic <chr>, statistic_fmt_fn <chr>, warning <chr>, error <chr>  ard_hierarchical_count(   data = ADAE,   variables = c(AESOC, AETERM),   by = TRTA ) |>   flatten_ard() #> # A tibble: 795 × 12 #>    group1 group1_level group2 group2_level variable variable_level     stat_name #>    <chr>  <chr>        <chr>  <chr>        <chr>    <chr>              <chr>     #>  1 TRTA   Placebo      NA     NA           AESOC    GENERAL DISORDERS… n         #>  2 TRTA   Placebo      NA     NA           AESOC    GASTROINTESTINAL … n         #>  3 TRTA   Placebo      NA     NA           AESOC    SKIN AND SUBCUTAN… n         #>  4 TRTA   Placebo      NA     NA           AESOC    CARDIAC DISORDERS  n         #>  5 TRTA   Placebo      NA     NA           AESOC    INFECTIONS AND IN… n         #>  6 TRTA   Placebo      NA     NA           AESOC    RESPIRATORY, THOR… n         #>  7 TRTA   Placebo      NA     NA           AESOC    RENAL AND URINARY… n         #>  8 TRTA   Placebo      NA     NA           AESOC    MUSCULOSKELETAL A… n         #>  9 TRTA   Placebo      NA     NA           AESOC    EYE DISORDERS      n         #> 10 TRTA   Placebo      NA     NA           AESOC    PSYCHIATRIC DISOR… n         #> # ℹ 785 more rows #> # ℹ 5 more variables: stat_label <chr>, statistic <chr>, #> #   statistic_fmt_fn <chr>, warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing ARD Statistics — ard_missing","title":"Missing ARD Statistics — ard_missing","text":"Compute Analysis Results Data (ARD) statistics data missingness.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing ARD Statistics — ard_missing","text":"","code":"ard_missing(   data,   variables,   by = NULL,   statistics = everything() ~ missing_variable_summary_fns(),   fmt_fn = NULL,   stat_labels = everything() ~ default_stat_labels() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing ARD Statistics — ard_missing","text":"data (data.frame) data frame variables (tidy-select) columns include summaries (tidy-select) results tabulated combinations columns specified statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) mean(x))). value assigned variable must also named list, names used reference function element function object. Typically, function return scalar statistic, function returns named list results also acceptable, e.g. list(conf.low = -1, conf.high = 1). However, errors occur, messaging less clear setting. fmt_fn (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = list(mean = \\(x) round(x, digits = 2) |> .character)). stat_labels (formula-list-selector) named list, list formulas, single formula list element either named list list formulas defining statistic labels, e.g. everything() ~ list(mean = \"Mean\", sd = \"SD\") everything() ~ list(mean ~ \"Mean\", sd ~ \"SD\").","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing ARD Statistics — ard_missing","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing ARD Statistics — ard_missing","text":"","code":"ard_missing(ADSL, by = \"ARM\", variables = \"AGE\") |>   flatten_ard() #> # A tibble: 15 × 9 #>    group1 group1_level  variable stat_name stat_label statistic statistic_fmt_fn #>    <chr>  <chr>         <chr>    <chr>     <chr>      <chr>     <chr>            #>  1 ARM    Placebo       AGE      N_obs     Vector Le… 86        \"0\"              #>  2 ARM    Placebo       AGE      N_miss    N Missing  0         \"0\"              #>  3 ARM    Placebo       AGE      N_nonmiss N Non-mis… 86        \"0\"              #>  4 ARM    Placebo       AGE      p_miss    % Missing  0         \"function (x) \\… #>  5 ARM    Placebo       AGE      p_nonmiss % Non-mis… 1         \"function (x) \\… #>  6 ARM    Xanomeline H… AGE      N_obs     Vector Le… 84        \"0\"              #>  7 ARM    Xanomeline H… AGE      N_miss    N Missing  0         \"0\"              #>  8 ARM    Xanomeline H… AGE      N_nonmiss N Non-mis… 84        \"0\"              #>  9 ARM    Xanomeline H… AGE      p_miss    % Missing  0         \"function (x) \\… #> 10 ARM    Xanomeline H… AGE      p_nonmiss % Non-mis… 1         \"function (x) \\… #> 11 ARM    Xanomeline L… AGE      N_obs     Vector Le… 84        \"0\"              #> 12 ARM    Xanomeline L… AGE      N_miss    N Missing  0         \"0\"              #> 13 ARM    Xanomeline L… AGE      N_nonmiss N Non-mis… 84        \"0\"              #> 14 ARM    Xanomeline L… AGE      p_miss    % Missing  0         \"function (x) \\… #> 15 ARM    Xanomeline L… AGE      p_nonmiss % Non-mis… 1         \"function (x) \\… #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun (function) tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"lm(AGE ~ ARM, data = ADSL) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>   flatten_ard() #> # A tibble: 48 × 4 #>    variable variable_level stat_name      statistic                  #>    <chr>    <chr>          <chr>          <chr>                      #>  1 ARM      Placebo        term           ARMPlacebo                 #>  2 ARM      Placebo        var_label      Description of Planned Arm #>  3 ARM      Placebo        var_class      character                  #>  4 ARM      Placebo        var_type       categorical                #>  5 ARM      Placebo        var_nlevels    3                          #>  6 ARM      Placebo        contrasts      contr.treatment            #>  7 ARM      Placebo        contrasts_type treatment                  #>  8 ARM      Placebo        reference_row  TRUE                       #>  9 ARM      Placebo        label          Placebo                    #> 10 ARM      Placebo        n_obs          86                         #> # ℹ 38 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD as Nested List — as_nested_list","title":"ARD as Nested List — as_nested_list","text":"Convert ARDs Nested Lists","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD as Nested List — as_nested_list","text":"","code":"as_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD as Nested List — as_nested_list","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD as Nested List — as_nested_list","text":"nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD as Nested List — as_nested_list","text":"","code":"ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) |>   as_nested_list() #> $variable #> $variable$mpg #> $variable$mpg$group1 #> $variable$mpg$group1$cyl #> $variable$mpg$group1$cyl$group1_level #> $variable$mpg$group1$cyl$group1_level$`4` #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 26.66364 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"26.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 4.509828 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"4.5\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 26 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"26.0\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 22.8 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"22.8\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 30.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"30.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"21.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 33.9 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"33.9\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6` #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 19.74286 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"19.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 1.453567 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"1.5\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 19.7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"19.7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 18.1 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"18.1\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 21 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"21.0\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 17.8 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"17.8\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"21.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8` #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 15.1 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"15.1\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 2.560048 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"2.6\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 15.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"15.2\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 14.3 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"14.3\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 16.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"16.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 10.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"10.4\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 19.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"19.2\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #> $variable$hp #> $variable$hp$group1 #> $variable$hp$group1$cyl #> $variable$hp$group1$cyl$group1_level #> $variable$hp$group1$cyl$group1_level$`4` #> $variable$hp$group1$cyl$group1_level$`4`$stat_name #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 82.63636 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"82.6\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 20.93453 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"20.9\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 91 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"91.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 65 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"65.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 97 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"97.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 52 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"52.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 113 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"113.0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`6` #> $variable$hp$group1$cyl$group1_level$`6`$stat_name #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 122.2857 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"122.3\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 24.26049 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"24.3\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"110.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"110.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 123 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"123.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 105 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"105.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"175.0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`8` #> $variable$hp$group1$cyl$group1_level$`8`$stat_name #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 209.2143 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"209.2\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 50.97689 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"51.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 192.5 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"192.5\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"175.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 245 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"245.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 150 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"150.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 335 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"335.0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #>"},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: CDISC Analysis Results Data — cards-package","title":"cards: CDISC Analysis Results Data — cards-package","text":"package constructs Clinical Data Interchange Standards Consortium (CDISC) compliant Analysis Results Data objects. objects used re-used construct summary tables, visualizations, written reports. results may also represented JavaScript Object Notation (JSON) Yet Another Markup Language (YAML) structures.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: CDISC Analysis Results Data — cards-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID) Authors: Becca Krouse becca.z.krouse@gsk.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ARD Structure — check_ard_structure","title":"Check ARD Structure — check_ard_structure","text":"Function tests structure returns notes object conform expected structure.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ARD Structure — check_ard_structure","text":"","code":"check_ard_structure(x)"},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ARD Structure — check_ard_structure","text":"x ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ARD Structure — check_ard_structure","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_ard_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check ARD Structure — check_ard_structure","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   dplyr::select(-warning, -error) |>   check_ard_structure() #> The following columns are not present: \"warning\" and \"error\"."},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class — check_class","title":"Check Class — check_class","text":"Check Class","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class — check_class","text":"","code":"check_class(class, ..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class — check_class","text":"class character vector string indicating accepted classes. Passed inherits(=class) ... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class Data Frame — check_class_data_frame","title":"Check Class Data Frame — check_class_data_frame","text":"Check Class Data Frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class Data Frame — check_class_data_frame","text":"","code":"check_class_data_frame(..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class Data Frame — check_class_data_frame","text":"... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Length — check_length","title":"Check Length — check_length","text":"Check Length","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Length — check_length","text":"","code":"check_length(   x,   arg_name = caller_arg(x),   length = 1L,   msg = \"The {.arg by} argument must be length {.val {length}}.\",   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Length — check_length","text":"x object check length integer specifying required length msg string passed cli::cli_abort(message=)","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Argument not Missing — check_not_missing","title":"Check Argument not Missing — check_not_missing","text":"Check Argument Missing","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Argument not Missing — check_not_missing","text":"","code":"check_not_missing(x, arg_name = caller_arg(x), call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Argument not Missing — check_not_missing","text":"x argument check arg_name string indicating name argument. Used error messaging. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Defaults for statistical arguments — default_stat_labels","title":"Defaults for statistical arguments — default_stat_labels","text":"Returns named list statistics labels","code":""},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defaults for statistical arguments — default_stat_labels","text":"","code":"default_stat_labels()"},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defaults for statistical arguments — default_stat_labels","text":"named list values","code":""},{"path":"https://insightsengineering.github.io/cards/reference/default_stat_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defaults for statistical arguments — default_stat_labels","text":"","code":"# stat labels default_stat_labels() #> $mean #> [1] \"Mean\" #>  #> $sd #> [1] \"SD\" #>  #> $var #> [1] \"Variance\" #>  #> $median #> [1] \"Median\" #>  #> $p25 #> [1] \"25th Percentile\" #>  #> $p75 #> [1] \"75th Percentile\" #>  #> $min #> [1] \"Min\" #>  #> $max #> [1] \"Max\" #>  #> $n #> [1] \"n\" #>  #> $N #> [1] \"N\" #>  #> $p #> [1] \"%\" #>  #> $N_obs #> [1] \"Vector Length\" #>  #> $N_miss #> [1] \"N Missing\" #>  #> $N_nonmiss #> [1] \"N Non-missing\" #>  #> $p_miss #> [1] \"% Missing\" #>  #> $p_nonmiss #> [1] \"% Non-missing\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Continuous Statistics — .calculate_stats_as_ard","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"Calculate statistics return ARD format","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"","code":".calculate_stats_as_ard(   df_nested,   variables,   statistics,   new_col_name = \"...ard_all_stats...\",   omit_na = TRUE )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"df_nested nested data frame variables character vector variables statistics named list statistical functions new_col_name string new column name omit_na logical indicating whether omit NA values calculating statistics. Default TRUE","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_stats_as_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Continuous Statistics — .calculate_stats_as_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"Function takes summary instructions statistics = list(variable_name = list(tabulation=c(\"n\", \"N\", \"p\"))) argument, returns tabulations ARD structure.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"","code":".calculate_tabulation_statistics(   data,   variables,   by,   strata,   denominator,   statistics,   env = caller_env() )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-calculate_tabulation_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tabulation Statistics — .calculate_tabulation_statistics","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. statistics (formula-list-selector) named list, list formulas, single formula list element named list functions (RHS formula), e.g. list(mpg = categorical_variable_summary_fns()).","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Value Checks — .check_dichotomous_values","title":"Perform Value Checks — .check_dichotomous_values","text":"Check validity values passed ard_dichotomous(values).","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Value Checks — .check_dichotomous_values","text":"","code":".check_dichotomous_values(data, values, call = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_dichotomous_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Value Checks — .check_dichotomous_values","text":"data (data.frame) data frame values (named list) named list call (environment) environment. Default caller_env()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Check 'xx' Format Structure — .check_fmt_string","title":"Check 'xx' Format Structure — .check_fmt_string","text":"function checks single string consistency. String must begin 'x' consist x's, single period none, may end percent symbol. string consistent, TRUE returned. Otherwise error.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check 'xx' Format Structure — .check_fmt_string","text":"","code":".check_fmt_string(x, call = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check 'xx' Format Structure — .check_fmt_string","text":"x string check call calling environment. Default caller_env()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check 'xx' Format Structure — .check_fmt_string","text":"logical","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_fmt_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check 'xx' Format Structure — .check_fmt_string","text":"","code":"cards:::.check_fmt_string(\"xx.x\")  # TRUE #> [1] TRUE cards:::.check_fmt_string(\"xx.x%\") # TRUE #> [1] TRUE"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":null,"dir":"Reference","previous_headings":"","what":"Check variable names — .check_var_nms","title":"Check variable names — .check_var_nms","text":"Check variable names data frame protected names modifies needed","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check variable names — .check_var_nms","text":"","code":".check_var_nms(x, vars_protected)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check variable names — .check_var_nms","text":"x data frame vars_protected character vector protected names","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-check_var_nms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check variable names — .check_var_nms","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Default Formatting Functions — .default_fmt_fn","title":"Add Default Formatting Functions — .default_fmt_fn","text":"Add Default Formatting Functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Default Formatting Functions — .default_fmt_fn","text":"","code":".default_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Default Formatting Functions — .default_fmt_fn","text":"data frame cards structure","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-default_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Default Formatting Functions — .default_fmt_fn","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect columns for non-null contents — .detect_msgs","title":"Detect columns for non-null contents — .detect_msgs","text":"Function looks non-null contents requested columns notifies user removal. Specifically used detecting messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect columns for non-null contents — .detect_msgs","text":"","code":".detect_msgs(x, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect columns for non-null contents — .detect_msgs","text":"x data frame ... columns search within","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-detect_msgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect columns for non-null contents — .detect_msgs","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Back fill group variables — .fill_grps_from_variables","title":"Back fill group variables — .fill_grps_from_variables","text":"function back fills values group variables using variable/variable_levels. back filling occur value variable column matches name grouping variable, grouping variable's value NA.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back fill group variables — .fill_grps_from_variables","text":"","code":".fill_grps_from_variables(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back fill group variables — .fill_grps_from_variables","text":"x data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-fill_grps_from_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back fill group variables — .fill_grps_from_variables","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Named list predicate — .is_named_list","title":"Named list predicate — .is_named_list","text":"predicate function whether input named list data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Named list predicate — .is_named_list","text":"","code":".is_named_list(x, allow_df = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-is_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Named list predicate — .is_named_list","text":"x object check","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert One Row to Nested List — .one_row_ard_to_nested_list","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"Convert One Row Nested List","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"","code":".one_row_ard_to_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"x ARD data frame one row","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"expression represents element nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-one_row_ard_to_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert One Row to Nested List — .one_row_ard_to_nested_list","text":"","code":"ard_continuous(mtcars, variables = mpg) |>   dplyr::filter(dplyr::row_number() %in% 1L) |>   apply_statistic_fmt_fn() |>   cards:::.one_row_ard_to_nested_list() #> lst_return[[\"variable\"]][[\"mpg\"]][[\"stat_name\"]][[\"N\"]] <- list( #>     statistic = 32L, statistic_fmt = \"32\", warning = NULL, error = NULL,  #>     context = \"continuous\")"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Denominator Argument — .process_denominator","title":"Process Denominator Argument — .process_denominator","text":"Function takes ard_categorical(denominator) argument returns structured data frame merged count data used denominator percentage calculations.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Denominator Argument — .process_denominator","text":"","code":".process_denominator(   data,   variables,   denominator,   by,   strata,   env = caller_env() )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Denominator Argument — .process_denominator","text":"data (data.frame) data frame variables (tidy-select) columns include summaries. Default everything(). denominator (data.frame, integer()) Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details. , strata (tidy-select) columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. env env used error reporting.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Denominator Argument — .process_denominator","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-process_denominator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Denominator Argument — .process_denominator","text":"","code":"cards:::.process_denominator(mtcars, denominator = 1000, variables = \"cyl\", by = \"gear\") #> $cyl #> # A tibble: 1 × 1 #>   ...ard_N... #>         <int> #> 1        1000 #>"},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"A list_flatten()-like function — .purrr_list_flatten","title":"A list_flatten()-like function — .purrr_list_flatten","text":"Function operates similarly purrr::list_flatten(x, name_spec = \"{inner}\")","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list_flatten()-like function — .purrr_list_flatten","text":"","code":".purrr_list_flatten(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-purrr_list_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A list_flatten()-like function — .purrr_list_flatten","text":"x named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Last Group to Variable — .rename_last_group_as_variable","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"ard_hierarchical*() functions, last grouping variable renamed variable variable_level returning","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"","code":".rename_last_group_as_variable(df_result)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"df_result ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rename_last_group_as_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Last Group to Variable — .rename_last_group_as_variable","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename group variables — .rnm_grp_vars","title":"Rename group variables — .rnm_grp_vars","text":"function combines pair group group_level columns single column. group_level column renamed according value group column.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename group variables — .rnm_grp_vars","text":"","code":".rnm_grp_vars(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename group variables — .rnm_grp_vars","text":"x data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-rnm_grp_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename group variables — .rnm_grp_vars","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Results from table() as Data Frame — .table_as_df","title":"Results from table() as Data Frame — .table_as_df","text":"Takes results table() returns data frame. table() results made data frame, variables made character columns, function also restores column types original classes. strata columns, observed combinations returned.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Results from table() as Data Frame — .table_as_df","text":"","code":".table_as_df(   data,   variable = NULL,   by = NULL,   strata = NULL,   count_column = \"...ard_n...\" )"},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Results from table() as Data Frame — .table_as_df","text":"data data frame variable string indicating column data character vector indicating columns data strata character vector indicating columns data","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-table_as_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Results from table() as Data Frame — .table_as_df","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim ARD — .trim_ard","title":"Trim ARD — .trim_ard","text":"function ingests ARD object trims columns rows downstream use displays. resulting data frame contains numeric results, supplemental information errors/warnings, unnested list columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim ARD — .trim_ard","text":"","code":".trim_ard(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim ARD — .trim_ard","text":"x (data.frame) ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-trim_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim ARD — .trim_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD-flavor of unique() — .unique_and_sorted","title":"ARD-flavor of unique() — .unique_and_sorted","text":"Essentially wrapper unique(x) |> sort() NA levels removed. Expect case factor logical vectors. factors, levels returned even unobserved. Similarly, logical vectors always return c(TRUE, FALSE), even levels observed.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD-flavor of unique() — .unique_and_sorted","text":"","code":".unique_and_sorted(x)"},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD-flavor of unique() — .unique_and_sorted","text":"x vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/dot-unique_and_sorted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD-flavor of unique() — .unique_and_sorted","text":"vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate and Capture Conditions — eval_capture_conditions","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"Evaluates expression also capturing error warning conditions. Function always returns named list list(result=, warning=, error=). errors warnings, elements NULL. error, result element NULL. Messages neither saved printed console. Evaluation done via eval_tidy().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"eval_capture_conditions(expr, data = NULL, env = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"expr expression quosure evaluate. data data frame, named list vector. Alternatively, data mask created as_data_mask() new_data_mask(). Objects data priority env. See section data masking. env environment evaluate expr. environment applicable quosures environments.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"# function executes without error or warning eval_capture_conditions(letters[1:2]) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>   # an error is thrown eval_capture_conditions(stop(\"Example Error!\")) #> $result #> NULL #>  #> $warning #> NULL #>  #> $error #> [1] \"Example Error!\" #>   # if more than one warning is returned, all are saved eval_capture_conditions({warning(\"Warning 1\"); warning(\"Warning 2\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> [1] \"Warning 1\" \"Warning 2\" #>  #> $error #> NULL #>   # messages are not printed to the console eval_capture_conditions({message(\"A message!\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten ARD — flatten_ard","title":"Flatten ARD — flatten_ard","text":"function ingests ARD object flattens readable print data. FUNCTION NEED UPDATES FLAVORS ARD MAY BECOME COMPLEX. List columns converted character vectors. list column contains elements easily coerced character vector, function fail.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten ARD — flatten_ard","text":"","code":"flatten_ard(x)"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten ARD — flatten_ard","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten ARD — flatten_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten ARD — flatten_ard","text":"","code":"ard_categorical(mtcars, by = \"cyl\", variables = c(\"am\", \"gear\")) |>   flatten_ard() #> # A tibble: 45 × 10 #>    group1 group1_level variable variable_level stat_name stat_label statistic    #>    <chr>  <chr>        <chr>    <chr>          <chr>     <chr>      <chr>        #>  1 cyl    4            am       0              n         n          3            #>  2 cyl    4            am       0              N         N          11           #>  3 cyl    4            am       0              p         %          0.272727272… #>  4 cyl    4            am       1              n         n          8            #>  5 cyl    4            am       1              N         N          11           #>  6 cyl    4            am       1              p         %          0.727272727… #>  7 cyl    6            am       0              n         n          4            #>  8 cyl    6            am       0              N         N          7            #>  9 cyl    6            am       0              p         %          0.571428571… #> 10 cyl    6            am       1              n         n          3            #> # ℹ 35 more rows #> # ℹ 3 more variables: statistic_fmt_fn <chr>, warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/max_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Value — max_value","title":"Maximum Value — max_value","text":"column passed data frame, function returns named list value largest/last element sort. factors, last level returned, logical vectors TRUE returned. used default value ard_dichotomous(values) specified user.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/max_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Value — max_value","text":"","code":"max_value(data)"},{"path":"https://insightsengineering.github.io/cards/reference/max_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Value — max_value","text":"data (data.frame) data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/max_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Value — max_value","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/max_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Value — max_value","text":"","code":"ADSL[c(\"AGEGR1\", \"BMIBLGR1\")] |> max_value() #> $AGEGR1 #> [1] \">80\" #>  #> $BMIBLGR1 #> [1] \">=30\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Nesting — nest_for_ard","title":"ARD Nesting — nest_for_ard","text":"function similar tidyr::nest(), except retains rows unobserved combinations (unobserved factor levels) variables, unobserved combinations stratifying variables. levels wrapped lists can stacked types different classes.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data,   by = NULL,   strata = NULL,   key = \"data\",   rename_columns = TRUE,   list_columns = TRUE )"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Nesting — nest_for_ard","text":"data (data.frame) data frame , strata (character) columns nest /stratified . Arguments similar, important distinction: : data frame nested combinations columns specified, including unobserved combinations unobserved factor levels. strata: data frame nested observed combinations columns specified. Arguments may used conjunction one another. key (string) name new column nested data frame. Default \"data\" rename_columns (logical scalar) logical indicating whether rename strata variables. Default TRUE list_columns (logical scalar) logical indicating whether put levels strata columns list. Default TRUE","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Nesting — nest_for_ard","text":"nested data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data =     ADAE |>       dplyr::left_join(ADSL[c(\"USUBJID\", \"ARM\")], by = \"USUBJID\") |>       dplyr::filter(AOCCSFL %in% \"Y\"),   by = \"ARM\",   strata = \"AESOC\" ) #> # A tibble: 69 × 5 #>    group1 group1_level group2 group2_level data               #>    <chr>  <list>       <chr>  <list>       <list>             #>  1 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [12 × 54]> #>  2 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [15 × 54]> #>  3 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [13 × 54]> #>  4 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [0 × 54]>  #>  5 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #>  6 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  7 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  8 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  9 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> 10 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> # ℹ 59 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Process tidyselectors — process_selectors","title":"Process tidyselectors — process_selectors","text":"Functions processes tidyselect arguments passed functions cards package. processed values saved calling environment, default. process_selectors(): arguments processed tidyselect converted vector character column names. process_formula_selectors(): arguments expect named lists lists formulas (LHS formula tidyselector). function processes inputs returns named list. name repeated, last entry kept. fill_formula_selectors(): users override default argument values, can important ensure column data frame assigned value. function checks column data assigned value, , fills value default value passed . compute_formula_selector(): used process_formula_selectors() evaluate single argument. check_list_elements(): accepts named arguments name list exists env, argument value predicate function used values list.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process tidyselectors — process_selectors","text":"","code":"process_selectors(data, ..., env = caller_env())  process_formula_selectors(data, ..., env = caller_env())  fill_formula_selectors(data, ..., env = caller_env())  compute_formula_selector(   data,   x,   arg_name = caller_arg(x),   env = caller_env(),   strict = TRUE )  check_list_elements(..., error_msg = list(), env = caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process tidyselectors — process_selectors","text":"data (data.frame) data frame ... (dynamic-dots) named arguments value argument processed tidyselect. process_selectors(): values tidyselect-compatible selectors process_formula_selectors(): values named lists, list formulas combination , single formula. Users may pass ~value shortcut everything() ~ value. check_list_elements(): named arguments name matches existing list env environment, value predicate function test element list, e.g. element must string function. env (environment) env save results . Default calling environment. x (formula-list-selector) named list, list formulas, single formula converted named list. arg_name (string) string argument named processed. Used error messaging. Default caller_arg(x) strict (logical scalar) whether throw error variable exist reference data (passed tidyselect::eval_select) error_msg (character) named list list elements strings used error messaging mis-specified arguments passed. Elements \"{arg_name}\" \"{variable}\" available using glue syntax messaging.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process tidyselectors — process_selectors","text":"","code":"example_env <- rlang::new_environment()  process_selectors(ADSL, variables = starts_with(\"TRT\"), env = example_env) get(x = \"variables\", envir = example_env) #> [1] \"TRT01P\"  \"TRT01PN\" \"TRT01A\"  \"TRT01AN\" \"TRTSDT\"  \"TRTEDT\"  \"TRTDUR\"    process_formula_selectors(   ADSL,   statistics = list(starts_with(\"TRT\") ~ mean, TRTSDT = min),   env = example_env ) get(x = \"statistics\", envir = example_env) #> $TRT01P #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRT01PN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRT01A #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRT01AN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRTEDT #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRTDUR #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56334dfc72b0> #> <environment: namespace:base> #>  #> $TRTSDT #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>   # process one list compute_formula_selector(ADSL, x = starts_with(\"U\") ~ 1L) #> $USUBJID #> [1] 1 #>"},{"path":"https://insightsengineering.github.io/cards/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars, ","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":null,"dir":"Reference","previous_headings":"","what":"Rounding of Numbers — round5","title":"Rounding of Numbers — round5","text":"Rounds values first argument specified number decimal places (default 0). Importantly, round5() use Base R's \"round even\" default. Standard rounding methods implemented, example, round5(0.5) = 1.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rounding of Numbers — round5","text":"","code":"round5(x, digits = 0)"},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rounding of Numbers — round5","text":"x numeric vector digits integer indicating number decimal places","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rounding of Numbers — round5","text":"numeric vector","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rounding of Numbers — round5","text":"Function inspired janitor::round_half_up().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/round5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rounding of Numbers — round5","text":"","code":"x <- 0:4 / 2 round5(x) |> setNames(x) #>   0 0.5   1 1.5   2  #>   0   1   1   2   2   # compare results to Base R round(x) |> setNames(x) #>   0 0.5   1 1.5   2  #>   0   0   1   2   2"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Selectors — selectors","title":"ARD Selectors — selectors","text":"selection helpers match variables according given pattern. all_ard_groups(): Use function dplyr selecting environments, dplyr::select(). Function selects grouping columns, e.g. columns named \"group##\" \"group##_level\". all_ard_variables(): Use function dplyr selecting environments, dplyr::select(). Function selects variables columns, e.g. columns named \"variable\" \"variable_level\".","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Selectors — selectors","text":"","code":"all_ard_groups(variables = TRUE, levels = TRUE)  all_ard_variables(variables = TRUE, levels = TRUE)"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Selectors — selectors","text":"variables logical indicating whether select columns variable names. Default TRUE levels logical indicating whether select columns variable levels. Default TRUE","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Selectors — selectors","text":"tidyselect output","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Selectors — selectors","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $N #> [1] 86 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Shuffle ARD — shuffle_ard","title":"Shuffle ARD — shuffle_ard","text":"function ingests ARD object shuffles information prepare analysis. Helpful streamlining across multiple ARDs. Combines group/group_level 1 column, back fills missing grouping values variable levels possible, optionally trims statistics-level metadata.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shuffle ARD — shuffle_ard","text":"","code":"shuffle_ard(x, trim = TRUE)"},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shuffle ARD — shuffle_ard","text":"x (data.frame) ARD data frame trim (logical(1)) Boolean representing whether trim away statistic-level metadata filter numeric statistic values.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shuffle ARD — shuffle_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/shuffle_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shuffle ARD — shuffle_ard","text":"","code":"bind_ard(   ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\"),   ard_categorical(ADSL, variables = \"ARM\") ) |> shuffle_ard() #> # A tibble: 36 × 6 #>    ARM                  variable label context     stat_name statistic #>    <chr>                <fct>    <chr> <chr>       <chr>         <dbl> #>  1 Placebo              AGEGR1   65-80 categorical n            42     #>  2 Placebo              AGEGR1   65-80 categorical N            86     #>  3 Placebo              AGEGR1   65-80 categorical p             0.488 #>  4 Placebo              AGEGR1   <65   categorical n            14     #>  5 Placebo              AGEGR1   <65   categorical N            86     #>  6 Placebo              AGEGR1   <65   categorical p             0.163 #>  7 Placebo              AGEGR1   >80   categorical n            30     #>  8 Placebo              AGEGR1   >80   categorical N            86     #>  9 Placebo              AGEGR1   >80   categorical p             0.349 #> 10 Xanomeline High Dose AGEGR1   65-80 categorical n            55     #> # ℹ 26 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Functions — summary_functions","title":"Summary Functions — summary_functions","text":"continuous_variable_summary_fns() returns named list summary functions continuous variables. functions include slight modifications base equivalents. example, min() max() functions return NA instead Inf empty vector passed. Statistics \"p25\" \"p75\" calculated quantile(type = 2), matches SAS's default value. categorical_variable_summary_fns() summary functions categorical variables. Options c(\"n\", \"N\", \"p\"). user requests, example, \"p\", function return n N well, since needed calculate \"p\". missing_variable_summary_fns() summary functions suitable variable-level summaries, number rate missing data.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Functions — summary_functions","text":"","code":"categorical_variable_summary_fns(   summaries = c(\"n\", \"p\", \"N\"),   other_stats = NULL )  continuous_variable_summary_fns(   summaries = c(\"N\", \"mean\", \"sd\", \"median\", \"p25\", \"p75\", \"min\", \"max\"),   other_stats = NULL )  missing_variable_summary_fns(   summaries = c(\"N_obs\", \"N_miss\", \"N_nonmiss\", \"p_miss\", \"p_nonmiss\") )"},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Functions — summary_functions","text":"summaries (character) character vector results include output. categorical_variable_summary_fns(): Select one 'n', 'p', 'N'. continuous_variable_summary_fns(): Select one 'N', 'mean', 'sd', 'median', 'p25', 'p75', 'min', 'max'. missing_variable_summary_fns(): Select one 'N_obs', 'N_miss', 'N_nonmiss', 'p_miss', 'p_nonmiss'. other_stats named list statistic functions supplement pre-programmed functions.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Functions — summary_functions","text":"named list summary functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/summary_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Functions — summary_functions","text":"","code":"# continuous variable summaries ard_continuous(   ADSL,   variables = \"AGE\",   statistics = ~continuous_variable_summary_fns(c(\"N\", \"median\")) ) |>   flatten_ard() #> # A tibble: 2 × 7 #>   variable stat_name stat_label statistic statistic_fmt_fn warning error #>   <chr>    <chr>     <chr>      <chr>     <chr>            <chr>   <chr> #> 1 AGE      N         N          254       0                NA      NA    #> 2 AGE      median    Median     77        1                NA      NA     # categorical variable summaries ard_categorical(   ADSL,   variables = \"AGEGR1\",   statistics = ~categorical_variable_summary_fns(c(\"n\", \"N\")) ) |>   flatten_ard() #> # A tibble: 6 × 8 #>   variable variable_level stat_name stat_label statistic statistic_fmt_fn #>   <chr>    <chr>          <chr>     <chr>      <chr>     <chr>            #> 1 AGEGR1   65-80          n         n          144       0                #> 2 AGEGR1   65-80          N         N          254       0                #> 3 AGEGR1   <65            n         n          33        0                #> 4 AGEGR1   <65            N         N          254       0                #> 5 AGEGR1   >80            n         n          77        0                #> 6 AGEGR1   >80            N         N          254       0                #> # ℹ 2 more variables: warning <chr>, error <chr>  # summary for rates of missing data ard_missing(   ADSL,   variables = c(\"AGE\", \"AGEGR1\"),   statistics = ~missing_variable_summary_fns() ) |>   flatten_ard() #> # A tibble: 10 × 7 #>    variable stat_name stat_label    statistic statistic_fmt_fn     warning error #>    <chr>    <chr>     <chr>         <chr>     <chr>                <chr>   <chr> #>  1 AGE      N_obs     Vector Length 254       \"0\"                  NA      NA    #>  2 AGE      N_miss    N Missing     0         \"0\"                  NA      NA    #>  3 AGE      N_nonmiss N Non-missing 254       \"0\"                  NA      NA    #>  4 AGE      p_miss    % Missing     0         \"function (x) \\nfor… NA      NA    #>  5 AGE      p_nonmiss % Non-missing 1         \"function (x) \\nfor… NA      NA    #>  6 AGEGR1   N_obs     Vector Length 254       \"0\"                  NA      NA    #>  7 AGEGR1   N_miss    N Missing     0         \"0\"                  NA      NA    #>  8 AGEGR1   N_nonmiss N Non-missing 254       \"0\"                  NA      NA    #>  9 AGEGR1   p_miss    % Missing     0         \"function (x) \\nfor… NA      NA    #> 10 AGEGR1   p_nonmiss % Non-missing 1         \"function (x) \\nfor… NA      NA"},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting Syntax — syntax","title":"Selecting Syntax — syntax","text":"Selecting Syntax","code":""},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":"selectors","dir":"Reference","previous_headings":"","what":"Selectors","title":"Selecting Syntax — syntax","text":"cards package also utilizes selectors: selectors tidyselect package custom selectors. Review help files details. tidy selectors everything(), all_of(), any_of(), starts_with(), ends_with(), contains(), matches(), num_range(), last_col() cards selectors all_ard_groups(), all_ard_variables()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/syntax.html","id":"formula-and-list-selectors","dir":"Reference","previous_headings":"","what":"Formula and List Selectors","title":"Selecting Syntax — syntax","text":"arguments cards package accept list formula notation, e.g. ard_continuous(statistic=). enumerates tips shortcuts using list formulas. List Formulas Typical usage includes list formulas, LHS variable name selector.   Named List may also pass named list; however, tidyselect selectors supported syntax.   Hybrid Named List/List Formulas Pass combination formulas named elements   Shortcuts can pass single formula, equivalent passing formula list.   shortcut select variables, can omit LHS formula. two calls equivalent.   Combination Selectors Selectors can combined using c() function.","code":"ard_continuous(statistics = list(age ~ list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = starts_with(\"a\") ~ list(mean = mean) ard_continuous(statistics = ~list(N = \\(x) length(x))) ard_continuous(statistics = everything() ~ list(N = \\(x) length(x))) ard_continuous(statistics = c(everything(), -age) ~ list(N = \\(x) length(x)))"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Column Order of ARD — tidy_ard_column_order","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"Relocate columns ARD standard order.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"tidy_ard_column_order(x)"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"x (data.frame) ARD data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"ard <-   dplyr::bind_rows(     ard_continuous(mtcars, variables = \"mpg\"),     ard_continuous(mtcars, variables = \"mpg\", by = \"cyl\")   ) names(ard) #>  [1] \"variable\"         \"context\"          \"stat_name\"        \"stat_label\"       #>  [5] \"statistic\"        \"statistic_fmt_fn\" \"warning\"          \"error\"            #>  [9] \"group1\"           \"group1_level\"      tidy_ard_column_order(ard) #> # A tibble: 32 × 10 #>    group1 group1_level variable context    stat_name stat_label      statistic #>    <chr>  <list>       <chr>    <chr>      <chr>     <chr>           <list>    #>  1 NA     <NULL>       mpg      continuous N         N               <int [1]> #>  2 NA     <NULL>       mpg      continuous mean      Mean            <dbl [1]> #>  3 NA     <NULL>       mpg      continuous sd        SD              <dbl [1]> #>  4 NA     <NULL>       mpg      continuous median    Median          <dbl [1]> #>  5 NA     <NULL>       mpg      continuous p25       25th Percentile <dbl [1]> #>  6 NA     <NULL>       mpg      continuous p75       75th Percentile <dbl [1]> #>  7 NA     <NULL>       mpg      continuous min       Min             <dbl [1]> #>  8 NA     <NULL>       mpg      continuous max       Max             <dbl [1]> #>  9 cyl    <dbl [1]>    mpg      continuous N         N               <int [1]> #> 10 cyl    <dbl [1]>    mpg      continuous mean      Mean            <dbl [1]> #> # ℹ 22 more rows #> # ℹ 3 more variables: statistic_fmt_fn <list>, warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Build ARD from tidier — tidy_as_ard","title":"Build ARD from tidier — tidy_as_ard","text":"Function converts model's one-row tidy data frame ARD structure. tidied data frame must constructed eval_capture_conditions(). function primarily developers consistency checks included.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"tidy_as_ard(   lst_tidy,   tidy_result_names,   fun_args_to_record,   formals = list(),   passed_args = list(),   lst_ard_columns )"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build ARD from tidier — tidy_as_ard","text":"lst_tidy (named list) list tidied results constructed eval_capture_conditions(), e.g. eval_capture_conditions(t.test(mtcars$mpg ~ mtcars$) |> broom::tidy()) tidy_result_names (character) character vector column names expected tidier method. used construct blank results event error. fun_args_to_record (character) character vector function argument names added ARD. formals (pairlist) results formals(), e.g. formals(fisher.test). used get default argument values unspecified arguments. passed_args (named list) named list additional arguments passed modeling function. lst_ard_columns (named list) named list values added ARD data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build ARD from tidier — tidy_as_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"# example how one may create a fisher.test() ARD function my_ard_fishertest <- function(data, by, variable, ...) {   # perform fisher test and format results -----------------------------------   lst_tidy_fisher <-     eval_capture_conditions(       stats::fisher.test(x = data[[variable]], y = data[[by]], ...) |>         broom::tidy()     )    # build ARD ------------------------------------------------------------------   tidy_as_ard(     lst_tidy = lst_tidy_fisher,     tidy_result_names =       c(\"estimate\", \"p.value\", \"conf.low\", \"conf.high\", \"method\", \"alternative\"),     fun_args_to_record =       c(\"workspace\", \"hybrid\", \"hybridPars\", \"control\", \"or\",         \"conf.int\", \"conf.level\", \"simulate.p.value\", \"B\"),     formals = formals(stats::fisher.test),     passed_args = dots_list(...),     lst_ard_columns = list(group1 = by, variable = variable, context = \"fishertest\")   ) }  my_ard_fishertest(mtcars, by = \"am\", variable = \"vs\") #> # A tibble: 6 × 7 #>   group1 variable context    stat_name   statistic    warning      error        #> * <chr>  <chr>    <chr>      <chr>       <named list> <named list> <named list> #> 1 am     vs       fishertest estimate    <dbl [1]>    <NULL>       <NULL>       #> 2 am     vs       fishertest p.value     <dbl [1]>    <NULL>       <NULL>       #> 3 am     vs       fishertest conf.low    <dbl [1]>    <NULL>       <NULL>       #> 4 am     vs       fishertest conf.high   <dbl [1]>    <NULL>       <NULL>       #> 5 am     vs       fishertest method      <chr [1]>    <NULL>       <NULL>       #> 6 am     vs       fishertest alternative <chr [1]>    <NULL>       <NULL>"},{"path":"https://insightsengineering.github.io/cards/news/index.html","id":"cards-development-version","dir":"Changelog","previous_headings":"","what":"cards (development version)","title":"cards (development version)","text":"Added ard_categorical(statistics) argument. Added function categorical_variable_summary_fns() made default value ard_categorical(statistics). variable-level statistics regarding missingness longer returned default ard_continuous() ard_categorical(). Added function ard_missing() tabulate statistics related missingness. default statistics returned new function missing_variable_summary_fns(): ‘N_obs’, ‘N_miss’, ‘N_nonmiss’, ‘p_miss’, ‘p_nonmiss’.","code":""}]
