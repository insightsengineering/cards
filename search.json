[{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"yaml","dir":"Articles","previous_headings":"","what":"YAML","title":"structures","text":"as_nested_list() function prepares ARD data frame converted YAML object.","code":"ard |>    as_nested_list() |>    yaml::as.yaml() |>    cat() #> variable: #>   AGE: #>     group1: #>       ARM: #>         group1_level: #>           Placebo: #>             stat_name: #>               'N': #>                 statistic: 86 #>                 statistic_fmt: '86' #>                 warning: ~ #>                 error: ~ #>                 context: continuous #>               length: #>                 statistic: 86 ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"json","dir":"Articles","previous_headings":"","what":"JSON","title":"structures","text":"as_nested_list() function prepares ARD data frame converted JSON object. Use jsonlite::write_json() function convert JSON write disk simultaneously.","code":"ard |>    as_nested_list() |>    jsonlite::toJSON(pretty = TRUE) #> { #>   \"variable\": { #>     \"AGE\": { #>       \"group1\": { #>         \"ARM\": { #>           \"group1_level\": { #>             \"Placebo\": { #>               \"stat_name\": { #>                 \"N\": { #>                   \"statistic\": [86], #>                   \"statistic_fmt\": [\"86\"], #>                   \"warning\": {}, #>                   \"error\": {}, #>                   \"context\": [\"continuous\"] #>                 }, ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"rest-api","dir":"Articles","previous_headings":"","what":"REST API","title":"structures","text":"TODO: Update section","code":"library(plumber) library(jsonlite)  #* @get /nested_json #* @serializer unboxedJSON function() {   ard |>    as_nested_list() |>    jsonlite::toJSON(auto_unbox = TRUE) } #> function() { #>   ard |>  #>   as_nested_list() |>  #>   jsonlite::toJSON(auto_unbox = TRUE) #> }"},{"path":"https://insightsengineering.github.io/cards/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/cards/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D (2023). cards: CDISC Analysis Results Data. https://github.com/insightsengineering/cards, https://insightsengineering.github.io/cards/.","code":"@Manual{,   title = {cards: CDISC Analysis Results Data},   author = {Daniel D. Sjoberg},   year = {2023},   note = {https://github.com/insightsengineering/cards, https://insightsengineering.github.io/cards/}, }"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"cards","dir":"","previous_headings":"","what":"CDISC Analysis Results Data","title":"CDISC Analysis Results Data","text":"package preliminary state, breaking changes made without notice deprecation. CDISC Analysis Results Standard aims facilitate automation, reproducibility, reusability, traceability analysis results data (ARD). {cards} package creates CDISC Analysis Result Data Sets. Uses cases: Quality Control (QC) existing tables figures. Pre-calculate statistics summarized tables figures. Medical writers may easily access statistics place reports without copying pasting reports. Provides consistent format results lends results combined across studies re-use re-analysis.","code":""},{"path":"https://insightsengineering.github.io/cards/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CDISC Analysis Results Data","text":"can install development version cards GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cards\")"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CDISC Analysis Results Data","text":"ARD Examples","code":"library(cards)  ard_continuous(ADSL, by = \"ARM\", variables = c(\"AGE\", \"BMIBL\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ard_categorical(ADSL, by = \"ARM\", variables = c(\"AGEGR1\", \"SEX\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>  # only only two groups for a t-test   ard_ttest(by = \"ARM\", variable = \"AGE\") |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\", \"method\")) |>    flatten_ard() |>    knitr::kable() # the example below ignores the time to event nature of the outcome # and are provided to illustrate functionality only glm(abs(CNSR - 1) ~ TRTP, data = ADTTE, family = binomial) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\")) |>    flatten_ard() |>    tidyr::drop_na() |>   knitr::kable()"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ADaM Data — adam","title":"Example ADaM Data — adam","text":"Data frame imported CDISC SDTM/ADaM Pilot Project","code":""},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ADaM Data — adam","text":"","code":"ADSL  ADAE  ADTTE"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example ADaM Data — adam","text":"object class tbl_df (inherits tbl, data.frame) 254 rows 48 columns. object class tbl_df (inherits tbl, data.frame) 1191 rows 55 columns. object class tbl_df (inherits tbl, data.frame) 254 rows 26 columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Formatting Functions — apply_statistic_fmt_fn","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"Apply formatting functions raw statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"apply_statistic_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"x ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   apply_statistic_fmt_fn() #> # A tibble: 6 × 9 #>   variable stat_name stat_label statistic_fmt_fn statistic statistic_fmt warning #>   <chr>    <chr>     <chr>      <list>           <list>    <list>        <list>  #> 1 AGE      N         N          <fn>             <int [1]> <chr [1]>     <NULL>  #> 2 AGE      length    Vector Le… <fn>             <int [1]> <chr [1]>     <NULL>  #> 3 AGE      mean      Mean       <fn>             <dbl [1]> <chr [1]>     <NULL>  #> 4 AGE      sd        SD         <fn>             <dbl [1]> <chr [1]>     <NULL>  #> 5 AGE      min       Min        <fn>             <dbl [1]> <chr [1]>     <NULL>  #> 6 AGE      max       Max        <fn>             <dbl [1]> <chr [1]>     <NULL>  #> # ℹ 2 more variables: error <list>, context <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Helpers — ard-helpers","title":"ARD Helpers — ard-helpers","text":"Helper functions working ARD data frames.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Helpers — ard-helpers","text":"","code":"get_ard_statistics(x, ...)  bind_ard(..., .update = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Helpers — ard-helpers","text":"x ARD data frame class 'card' ... get_ard_statistics(): optional named arguments indicating rows subset ARD. example, return rows column \"AGEGR1\" \"65-80\", pass AGEGR1 %% \"65-80\". bind_ard(): ARDs combine. argument can either ARD, list ARDs. Columns matched name, missing columns filled NA. .update logical indicating whether update duplicate ARD statistics. Default FALSE. statistic type repeated .update=TRUE, recently added statistics retained, others omitted.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Helpers — ard-helpers","text":"transformed ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARD Helpers — ard-helpers","text":"get_ard_statistics(): function returns statistics ARD named list. statistic label, formatting instruction, error warning messages returned attributes. bind_ard(): wrapper dplyr::bind_rows() additional checks duplicated statistics","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Helpers — ard-helpers","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"n\" #> attr(,\"statistic_fmt_fn\") #> function (x)  #> format(round(x, digits = 0), nsmall = 0) #> <environment: 0x5576f6473260> #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"%\" #> attr(,\"statistic_fmt_fn\") #> function (x)  #> format(round(x, digits = 0), nsmall = 0) #> <environment: 0x5576f6473260> #>   bind_ard(ard, ard, .update = TRUE) #> ℹ 24 duplicate observations removed. #> # A tibble: 24 × 11 #>    group1 group1_level variable variable_level context     stat_name stat_label #>    <chr>  <list>       <chr>    <list>         <chr>       <chr>     <chr>      #>  1 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  2 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  3 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  4 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  5 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  6 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  7 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  8 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  9 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #> 10 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #> # ℹ 14 more rows #> # ℹ 4 more variables: statistic <list>, statistic_fmt_fn <list>, #> #   warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Attributes — ard_attributes","title":"ARD Attributes — ard_attributes","text":"Add variable attributes ARD data frame. label attribute added columns, label specified label set column using label= argument, column name placed label statistic. class attribute also returned columns. attribute returned attributes() also added, e.g. factor levels.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Attributes — ard_attributes","text":"","code":"ard_attributes(data, variables, label = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Attributes — ard_attributes","text":"data data frame variables variable include label named list variable labels, e.g. list(mpg = \"MPG\"). Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Attributes — ard_attributes","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Attributes — ard_attributes","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, 'label') <- \"Lowercase Letters\"  ard_attributes(df, variables = everything()) #> # A tibble: 4 × 5 #>   variable stat_name statistic stat_label     context    #> * <chr>    <chr>     <list>    <chr>          <chr>      #> 1 var1     label     <chr [1]> Variable Label attributes #> 2 var1     class     <chr [1]> Variable Class attributes #> 3 var2     label     <chr [1]> Variable Label attributes #> 4 var2     class     <chr [1]> Variable Class attributes"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical ARD Statistics — ard_categorical","title":"Categorical ARD Statistics — ard_categorical","text":"Compute Analysis Results Data (ARD) categorical summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(data, variables, by = NULL, denominator = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical ARD Statistics — ard_categorical","text":"data data frame variables columns include summaries. Default everything(). columns compute statistics . Default columns returned dplyr::group_vars(data). denominator Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical ARD Statistics — ard_categorical","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"denominators","dir":"Reference","previous_headings":"","what":"Denominators","title":"Categorical ARD Statistics — ard_categorical","text":"default, ard_categorical() function returns statistics \"n\" \"N\", little \"n\" counts variable levels, \"N\" number non-missing observations. default calculation percentage merely p = n/N. However, sometimes necessary provide different \"N\" use denominator calculation. example, calculation rates various observed adverse events, may need update denominator number enrolled subjects. cases, use denominator argument specify new definition \"N\", subsequently \"p\". argument expects data frame, data frame must include columns specified ard_categorical(=). updated N length elements updated calculated number rows combination variables. Take example need update denominator subjects enrolled trial, e.g. tabulating number AEs occurred within SOC subjects may experienced AE represented ADAE data set. patients appear ADSL, however.","code":"ard_categorical(   data =     ADAE |>       dplyr::left_join(ADSL[c(\"USUBJID\", \"ARM\")], by = \"USUBJID\") |>       dplyr::filter(AOCCSFL %in% \"Y\"),   by = \"ARM\",   variables = \"AESOC\",   denominator = ADSL ) |>   flatten_ard() #> # A tibble: 141 x 9 #>    group1 group1_level variable variable_level    stat_name stat_label statistic #>    <chr>  <chr>        <chr>    <chr>             <chr>     <chr>      <chr>     #>  1 ARM    Placebo      AESOC    CARDIAC DISORDERS n         n          12        #>  2 ARM    Placebo      AESOC    CONGENITAL, FAMI~ n         n          0         #>  3 ARM    Placebo      AESOC    EAR AND LABYRINT~ n         n          1         #>  4 ARM    Placebo      AESOC    EYE DISORDERS     n         n          2         #>  5 ARM    Placebo      AESOC    GASTROINTESTINAL~ n         n          17        #>  6 ARM    Placebo      AESOC    GENERAL DISORDER~ n         n          21        #>  7 ARM    Placebo      AESOC    HEPATOBILIARY DI~ n         n          1         #>  8 ARM    Placebo      AESOC    IMMUNE SYSTEM DI~ n         n          0         #>  9 ARM    Placebo      AESOC    INFECTIONS AND I~ n         n          16        #> 10 ARM    Placebo      AESOC    INJURY, POISONIN~ n         n          4         #> # i 131 more rows #> # i 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 24 × 9 #>    group1 group1_level    variable variable_level stat_name stat_label statistic #>    <chr>  <chr>           <chr>    <chr>          <chr>     <chr>      <chr>     #>  1 ARM    Placebo         AGEGR1   65-80          n         n          42        #>  2 ARM    Placebo         AGEGR1   65-80          p         %          0.488372… #>  3 ARM    Placebo         AGEGR1   <65            n         n          14        #>  4 ARM    Placebo         AGEGR1   <65            p         %          0.162790… #>  5 ARM    Placebo         AGEGR1   >80            n         n          30        #>  6 ARM    Placebo         AGEGR1   >80            p         %          0.348837… #>  7 ARM    Placebo         AGEGR1   NA             N         N          86        #>  8 ARM    Placebo         AGEGR1   NA             length    Vector Le… 86        #>  9 ARM    Xanomeline Hig… AGEGR1   65-80          n         n          55        #> 10 ARM    Xanomeline Hig… AGEGR1   65-80          p         %          0.654761… #> # ℹ 14 more rows #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"Comparison ARD Statistics","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)  ard_chisqtest(data, by, variable, ...)  ard_fishertest(data, by, variable, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data data frame character column name compare variable character column name compared ... arguments passed method.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_ttest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 14 × 7 #>    group1 group1_level         variable stat_name   statistic      warning error #>    <chr>  <chr>                <chr>    <chr>       <chr>          <chr>   <chr> #>  1 ARM    Placebo              AGE      estimate1   75.2093023255… NA      NA    #>  2 ARM    Xanomeline High Dose AGE      estimate2   74.3809523809… NA      NA    #>  3 ARM    NA                   AGE      estimate    0.82834994462… NA      NA    #>  4 ARM    NA                   AGE      statistic   0.65519635179… NA      NA    #>  5 ARM    NA                   AGE      p.value     0.51324088836… NA      NA    #>  6 ARM    NA                   AGE      parameter   167.362493715… NA      NA    #>  7 ARM    NA                   AGE      conf.low    -1.6676367646… NA      NA    #>  8 ARM    NA                   AGE      conf.high   3.32433665393… NA      NA    #>  9 ARM    NA                   AGE      method      Welch Two Sam… NA      NA    #> 10 ARM    NA                   AGE      alternative two.sided      NA      NA    #> 11 ARM    NA                   AGE      mu          0              NA      NA    #> 12 ARM    NA                   AGE      paired      FALSE          NA      NA    #> 13 ARM    NA                   AGE      var.equal   FALSE          NA      NA    #> 14 ARM    NA                   AGE      conf.level  0.95           NA      NA     ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_wilcoxtest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 12 × 6 #>    group1 variable stat_name   statistic                           warning error #>    <chr>  <chr>    <chr>       <chr>                               <chr>   <chr> #>  1 ARM    AGE      statistic   3862.5                              NA      NA    #>  2 ARM    AGE      p.value     0.43546374886656                    NA      NA    #>  3 ARM    AGE      method      Wilcoxon rank sum test with contin… NA      NA    #>  4 ARM    AGE      alternative two.sided                           NA      NA    #>  5 ARM    AGE      mu          0                                   NA      NA    #>  6 ARM    AGE      paired      FALSE                               NA      NA    #>  7 ARM    AGE      exact       NA                                  NA      NA    #>  8 ARM    AGE      correct     TRUE                                NA      NA    #>  9 ARM    AGE      conf.int    FALSE                               NA      NA    #> 10 ARM    AGE      conf.level  0.95                                NA      NA    #> 11 ARM    AGE      tol.root    1e-04                               NA      NA    #> 12 ARM    AGE      digits.rank Inf                                 NA      NA      ADSL |>   ard_chisqtest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 9 × 6 #>   group1 variable stat_name        statistic  warning error #>   <chr>  <chr>    <chr>            <list>     <chr>   <chr> #> 1 ARM    AGEGR1   statistic        <dbl [1]>  NA      NA    #> 2 ARM    AGEGR1   p.value          <dbl [1]>  NA      NA    #> 3 ARM    AGEGR1   parameter        <int [1]>  NA      NA    #> 4 ARM    AGEGR1   method           <chr [1]>  NA      NA    #> 5 ARM    AGEGR1   correct          <lgl [1]>  NA      NA    #> 6 ARM    AGEGR1   p                <language> NA      NA    #> 7 ARM    AGEGR1   rescale.p        <lgl [1]>  NA      NA    #> 8 ARM    AGEGR1   simulate.p.value <lgl [1]>  NA      NA    #> 9 ARM    AGEGR1   B                <dbl [1]>  NA      NA     ADSL[1:30,] |>   ard_fishertest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 12 × 6 #>    group1 variable stat_name        statistic  warning error #>    <chr>  <chr>    <chr>            <list>     <chr>   <chr> #>  1 ARM    AGEGR1   p.value          <dbl [1]>  NA      NA    #>  2 ARM    AGEGR1   method           <chr [1]>  NA      NA    #>  3 ARM    AGEGR1   alternative      <chr [1]>  NA      NA    #>  4 ARM    AGEGR1   workspace        <dbl [1]>  NA      NA    #>  5 ARM    AGEGR1   hybrid           <lgl [1]>  NA      NA    #>  6 ARM    AGEGR1   hybridPars       <language> NA      NA    #>  7 ARM    AGEGR1   control          <language> NA      NA    #>  8 ARM    AGEGR1   or               <dbl [1]>  NA      NA    #>  9 ARM    AGEGR1   conf.int         <lgl [1]>  NA      NA    #> 10 ARM    AGEGR1   conf.level       <dbl [1]>  NA      NA    #> 11 ARM    AGEGR1   simulate.p.value <lgl [1]>  NA      NA    #> 12 ARM    AGEGR1   B                <dbl [1]>  NA      NA"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous ARD Statistics — ard_continuous","title":"Continuous ARD Statistics — ard_continuous","text":"Compute Analysis Results Data (ARD) simple continuous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(data, variables, by = NULL, statistics = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous ARD Statistics — ard_continuous","text":"data data frame variables columns include summaries. columns compute statistics . Default columns returned dplyr::group_vars(data). statistics named list functions return summary statistic, e.g. list(mpg = list(mean = \\(x) mean(x, na.rm = TRUE)))","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous ARD Statistics — ard_continuous","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(ADSL, by = \"ARM\", variables = \"AGE\") |>   flatten_ard() #> # A tibble: 18 × 8 #>    group1 group1_level     variable stat_name stat_label statistic warning error #>    <chr>  <chr>            <chr>    <chr>     <chr>      <chr>     <chr>   <chr> #>  1 ARM    Placebo          AGE      N         N          86        NA      NA    #>  2 ARM    Placebo          AGE      length    Vector Le… 86        NA      NA    #>  3 ARM    Placebo          AGE      mean      Mean       75.20930… NA      NA    #>  4 ARM    Placebo          AGE      sd        SD         8.590167… NA      NA    #>  5 ARM    Placebo          AGE      min       Min        52        NA      NA    #>  6 ARM    Placebo          AGE      max       Max        89        NA      NA    #>  7 ARM    Xanomeline High… AGE      N         N          84        NA      NA    #>  8 ARM    Xanomeline High… AGE      length    Vector Le… 84        NA      NA    #>  9 ARM    Xanomeline High… AGE      mean      Mean       74.38095… NA      NA    #> 10 ARM    Xanomeline High… AGE      sd        SD         7.886093… NA      NA    #> 11 ARM    Xanomeline High… AGE      min       Min        56        NA      NA    #> 12 ARM    Xanomeline High… AGE      max       Max        88        NA      NA    #> 13 ARM    Xanomeline Low … AGE      N         N          84        NA      NA    #> 14 ARM    Xanomeline Low … AGE      length    Vector Le… 84        NA      NA    #> 15 ARM    Xanomeline Low … AGE      mean      Mean       75.66666… NA      NA    #> 16 ARM    Xanomeline Low … AGE      sd        SD         8.286050… NA      NA    #> 17 ARM    Xanomeline Low … AGE      min       Min        51        NA      NA    #> 18 ARM    Xanomeline Low … AGE      max       Max        88        NA      NA"},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Crosstab — ard_crosstab","title":"ARD Crosstab — ard_crosstab","text":"Similar ard_categorical() except percentages N statistics based entire data set, rather stratified columns specified argument.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Crosstab — ard_crosstab","text":"","code":"ard_crosstab(data, variables, by)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Crosstab — ard_crosstab","text":"data data frame variables columns include summaries. Default everything(). columns compute statistics . Default columns returned dplyr::group_vars(data).","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Crosstab — ard_crosstab","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Crosstab — ard_crosstab","text":"","code":"ard_crosstab(ADSL, variables = \"AGEGR1\", by = \"ARM\") #> # A tibble: 21 × 11 #>    group1 group1_level variable stat_label statistic_fmt_fn variable_level #>    <chr>  <list>       <chr>    <chr>      <list>           <list>         #>  1 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  2 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  3 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  4 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  5 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  6 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  7 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  8 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #>  9 ARM    <chr [1]>    AGEGR1   n          <fn>             <chr [1]>      #> 10 ARM    <chr [1]>    AGEGR1   N          <fn>             <NULL>         #> # ℹ 11 more rows #> # ℹ 5 more variables: warning <list>, error <list>, context <chr>, #> #   stat_name <chr>, statistic <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"lm(AGE ~ ARM, data = ADSL) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>   flatten_ard() #> # A tibble: 48 × 4 #>    variable variable_level stat_name      statistic                  #>    <chr>    <chr>          <chr>          <chr>                      #>  1 ARM      Placebo        term           ARMPlacebo                 #>  2 ARM      Placebo        var_label      Description of Planned Arm #>  3 ARM      Placebo        var_class      character                  #>  4 ARM      Placebo        var_type       categorical                #>  5 ARM      Placebo        var_nlevels    3                          #>  6 ARM      Placebo        contrasts      contr.treatment            #>  7 ARM      Placebo        contrasts_type treatment                  #>  8 ARM      Placebo        reference_row  TRUE                       #>  9 ARM      Placebo        label          Placebo                    #> 10 ARM      Placebo        n_obs          86                         #> # ℹ 38 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/ard_stratified_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Categorical ARD Statistics — ard_stratified_categorical","title":"Stratified Categorical ARD Statistics — ard_stratified_categorical","text":"Similar ard_categorical() except call ard_categorical() called within stratum level. stratum variable levels returned ARD columns \"group##\" \"group##_level\"","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_stratified_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Categorical ARD Statistics — ard_stratified_categorical","text":"","code":"ard_stratified_categorical(   data,   strata,   variables,   by = NULL,   denominator = NULL )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_stratified_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified Categorical ARD Statistics — ard_stratified_categorical","text":"data data frame strata single column data. variables columns include summaries. Default everything(). columns compute statistics . Default columns returned dplyr::group_vars(data). denominator Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_stratified_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified Categorical ARD Statistics — ard_stratified_categorical","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_stratified_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified Categorical ARD Statistics — ard_stratified_categorical","text":"","code":"ard_stratified_categorical(   data = ADAE |> dplyr::filter(AOCCPFL %in% \"Y\"),   strata = \"AESOC\",   variables = \"AEDECOD\",   denominator = ADSL ) #> # A tibble: 483 × 11 #>    group1 group1_level variable variable_level context      stat_name stat_label #>  * <chr>  <list>       <chr>    <list>         <chr>        <chr>     <chr>      #>  1 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  2 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  3 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  4 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  5 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  6 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  7 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  8 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #>  9 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #> 10 AESOC  <chr [1]>    AEDECOD  <chr [1]>      ard_stratif… n         n          #> # ℹ 473 more rows #> # ℹ 4 more variables: statistic <named list>, statistic_fmt_fn <list>, #> #   warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD as Nested List — as_nested_list","title":"ARD as Nested List — as_nested_list","text":"Convert ARDs Nested Lists","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD as Nested List — as_nested_list","text":"","code":"as_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD as Nested List — as_nested_list","text":"x ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD as Nested List — as_nested_list","text":"nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD as Nested List — as_nested_list","text":"","code":"ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) |>   as_nested_list() #> $variable #> $variable$mpg #> $variable$mpg$group1 #> $variable$mpg$group1$cyl #> $variable$mpg$group1$cyl$group1_level #> $variable$mpg$group1$cyl$group1_level$`4` #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 26.66364 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"27\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 4.509828 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"5\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"21\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 33.9 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"34\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6` #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 19.74286 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"20\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 1.453567 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"1\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 17.8 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"18\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"21\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8` #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 15.1 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"15\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 2.560048 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"3\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 10.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"10\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 19.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"19\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #> $variable$hp #> $variable$hp$group1 #> $variable$hp$group1$cyl #> $variable$hp$group1$cyl$group1_level #> $variable$hp$group1$cyl$group1_level$`4` #> $variable$hp$group1$cyl$group1_level$`4`$stat_name #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 82.63636 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"83\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 20.93453 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"21\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 52 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"52\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 113 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"113\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`6` #> $variable$hp$group1$cyl$group1_level$`6`$stat_name #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 122.2857 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"122\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 24.26049 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"24\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 105 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"105\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"175\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`8` #> $variable$hp$group1$cyl$group1_level$`8`$stat_name #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$length$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 209.2143 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"209\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 50.97689 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"51\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 150 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"150\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 335 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"335\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #>"},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: CDISC Analysis Results Data — cards-package","title":"cards: CDISC Analysis Results Data — cards-package","text":"package constructs CDISC-compliant Analysis Results Data objects. objects used (re-used) construct summary tables, visualizations, written reports. results may also represented JSON YAML objects.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: CDISC Analysis Results Data — cards-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID) contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class — check_class","title":"Check Class — check_class","text":"Check Class","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class — check_class","text":"","code":"check_class(class, ..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class — check_class","text":"class character vector string indicating accepted classes. Passed inherits(=class) ... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class Data Frame — check_class_data_frame","title":"Check Class Data Frame — check_class_data_frame","text":"Check Class Data Frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class Data Frame — check_class_data_frame","text":"","code":"check_class_data_frame(..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class Data Frame — check_class_data_frame","text":"... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Columns in Data Frame — check_columns_in_data_frame","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"Check Columns Data Frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"","code":"check_columns_in_data_frame(   data,   columns,   msg = \"Columns {.val {missing_cols}} not found in {.arg data}.\",   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"data data frame columns character vector column names check msg string passed cli::cli_abort(message=) call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Argument not Missing — check_not_missing","title":"Check Argument not Missing — check_not_missing","text":"Check Argument Missing","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Argument not Missing — check_not_missing","text":"","code":"check_not_missing(x, arg_name, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Argument not Missing — check_not_missing","text":"x argument check arg_name string indicating name argument. Used error messaging. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate and Capture Conditions — eval_capture_conditions","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"Evaluates expression also capturing error warning conditions. Function always returns named list list(result=, warning=, error=). errors warnings, elements NULL. error, result element NULL. Messages neither saved printed console. Evaluation done via rlang::eval_tidy().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"eval_capture_conditions(expr, data = NULL, env = rlang::caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"expr expression quosure evaluate. data data frame, named list vector. Alternatively, data mask created as_data_mask() new_data_mask(). Objects data priority env. See section data masking. env environment evaluate expr. environment applicable quosures environments.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"# function executes without error or warning eval_capture_conditions(letters[1:2]) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>   # an error is thrown eval_capture_conditions(stop(\"Example Error!\")) #> $result #> NULL #>  #> $warning #> NULL #>  #> $error #> [1] \"Example Error!\" #>   # if more than one warning is returned, all are saved eval_capture_conditions({warning(\"Warning 1\"); warning(\"Warning 2\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> [1] \"Warning 1\" \"Warning 2\" #>  #> $error #> NULL #>   # messages are not printed to the console eval_capture_conditions({message(\"A message!\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten ARD — flatten_ard","title":"Flatten ARD — flatten_ard","text":"function ingests ARD object flattens readable print data. FUNCTION NEED UPDATES FLAVORS ARD MAY BECOME COMPLEX. List columns converted character vectors. list column contains elements easily coerced character vector, function fail.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten ARD — flatten_ard","text":"","code":"flatten_ard(x)"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten ARD — flatten_ard","text":"x ARD object","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten ARD — flatten_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten ARD — flatten_ard","text":"","code":"ard_categorical(mtcars, by = \"cyl\", variables = c(\"am\", \"gear\")) |>   flatten_ard() #> # A tibble: 42 × 9 #>    group1 group1_level variable variable_level stat_name stat_label    statistic #>    <chr>  <chr>        <chr>    <chr>          <chr>     <chr>         <chr>     #>  1 cyl    4            am       0              n         n             3         #>  2 cyl    4            am       0              p         %             0.272727… #>  3 cyl    4            am       1              n         n             8         #>  4 cyl    4            am       1              p         %             0.727272… #>  5 cyl    4            am       NA             N         N             11        #>  6 cyl    4            am       NA             length    Vector Length 11        #>  7 cyl    6            am       0              n         n             4         #>  8 cyl    6            am       0              p         %             0.571428… #>  9 cyl    6            am       1              n         n             3         #> 10 cyl    6            am       1              p         %             0.428571… #> # ℹ 32 more rows #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Selectors — selectors","title":"ARD Selectors — selectors","text":"selection helpers match variables according given pattern. all_ard_groups(): Use function dplyr selecting environments, dplyr::select(). Function selects grouping columns, e.g. columns named \"group##\" \"group##_level\". all_ard_variables(): Use function dplyr selecting environments, dplyr::select(). Function selects variables columns, e.g. columns named \"variable\" \"variable_level\".","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Selectors — selectors","text":"","code":"all_ard_groups()  all_ard_variables()"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Selectors — selectors","text":"tidyselect output","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Selectors — selectors","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"n\" #> attr(,\"statistic_fmt_fn\") #> function (x)  #> format(round(x, digits = 0), nsmall = 0) #> <environment: 0x5576fb43f318> #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"%\" #> attr(,\"statistic_fmt_fn\") #> function (x)  #> format(round(x, digits = 0), nsmall = 0) #> <environment: 0x5576fb43f318> #>"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Column Order of ARD — tidy_ard_column_order","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"Relocate columns ARD standard order.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"tidy_ard_column_order(x)"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"x data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"ard <-   dplyr::bind_rows(     ard_continuous(mtcars, variables = \"mpg\"),     ard_continuous(mtcars, variables = \"mpg\", by = \"cyl\")   ) names(ard) #>  [1] \"variable\"         \"stat_name\"        \"stat_label\"       \"statistic_fmt_fn\" #>  [5] \"statistic\"        \"warning\"          \"error\"            \"context\"          #>  [9] \"group1\"           \"group1_level\"      tidy_ard_column_order(ard) #> # A tibble: 24 × 10 #>    group1 group1_level variable context    stat_name stat_label    statistic #>    <chr>  <list>       <chr>    <chr>      <chr>     <chr>         <list>    #>  1 NA     <NULL>       mpg      continuous N         N             <int [1]> #>  2 NA     <NULL>       mpg      continuous length    Vector Length <int [1]> #>  3 NA     <NULL>       mpg      continuous mean      Mean          <dbl [1]> #>  4 NA     <NULL>       mpg      continuous sd        SD            <dbl [1]> #>  5 NA     <NULL>       mpg      continuous min       Min           <dbl [1]> #>  6 NA     <NULL>       mpg      continuous max       Max           <dbl [1]> #>  7 cyl    <dbl [1]>    mpg      continuous N         N             <int [1]> #>  8 cyl    <dbl [1]>    mpg      continuous length    Vector Length <int [1]> #>  9 cyl    <dbl [1]>    mpg      continuous mean      Mean          <dbl [1]> #> 10 cyl    <dbl [1]>    mpg      continuous sd        SD            <dbl [1]> #> # ℹ 14 more rows #> # ℹ 3 more variables: statistic_fmt_fn <list>, warning <list>, error <list>"}]
