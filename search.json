[{"path":"https://refactored-bassoon-49o3774.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 cards authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D (2023). cards: CDISC Analysis Results Data. https://github.com/insightsengineering/cards, https://refactored-bassoon-49o3774.pages.github.io/.","code":"@Manual{,   title = {cards: CDISC Analysis Results Data},   author = {Daniel D. Sjoberg},   year = {2023},   note = {https://github.com/insightsengineering/cards, https://refactored-bassoon-49o3774.pages.github.io/}, }"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"cards","dir":"","previous_headings":"","what":"CDISC Analysis Results Data","title":"CDISC Analysis Results Data","text":"package preliminary state, breaking changes made without notice deprecation. CDISC Analysis Results Standard aims facilitate automation, reproducibility, reusability, traceability analysis results data (ARD). {cards} package creates CDISC Analysis Result Data Sets.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CDISC Analysis Results Data","text":"can install development version cards GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cards\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CDISC Analysis Results Data","text":"ARD Examples","code":"library(cards) library(dplyr) |> suppressPackageStartupMessages()  ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) |>    flatten_ard() #> # A tibble: 42 × 10 #>    group1 group1_level variable stat_name stat_label statistic_fmt_fn  statistic #>    <chr>  <chr>        <chr>    <chr>     <chr>      <chr>             <chr>     #>  1 cyl    4            mpg      N         N          \"function (x) \\n… 11        #>  2 cyl    4            mpg      N_miss    N Missing  \"function (x) \\n… 0         #>  3 cyl    4            mpg      N_tot     Total N    \"function (x) \\n… 11        #>  4 cyl    4            mpg      mean      Mean       \"function (x) \\n… 26.66363… #>  5 cyl    4            mpg      sd        SD         \"function (x) \\n… 4.509827… #>  6 cyl    4            mpg      min       Min        \"function (x) \\n… 21.4      #>  7 cyl    4            mpg      max       Max        \"function (x) \\n… 33.9      #>  8 cyl    4            hp       N         N          \"function (x) \\n… 11        #>  9 cyl    4            hp       N_miss    N Missing  \"function (x) \\n… 0         #> 10 cyl    4            hp       N_tot     Total N    \"function (x) \\n… 11        #> # ℹ 32 more rows #> # ℹ 3 more variables: warning <chr>, error <chr>, context <chr>  ard_categorical(mtcars, by = \"cyl\", variables = c(\"am\", \"gear\")) |>    flatten_ard() #> # A tibble: 48 × 11 #>    group1 group1_level variable stat_label statistic_fmt_fn       variable_level #>    <chr>  <chr>        <chr>    <chr>      <chr>                  <chr>          #>  1 cyl    4            am       table      \"function (x) \\nforma… 0              #>  2 cyl    4            am       table      \"function (x) \\nforma… 0              #>  3 cyl    4            am       table      \"function (x) \\nforma… 1              #>  4 cyl    4            am       table      \"function (x) \\nforma… 1              #>  5 cyl    6            am       table      \"function (x) \\nforma… 0              #>  6 cyl    6            am       table      \"function (x) \\nforma… 0              #>  7 cyl    6            am       table      \"function (x) \\nforma… 1              #>  8 cyl    6            am       table      \"function (x) \\nforma… 1              #>  9 cyl    8            am       table      \"function (x) \\nforma… 0              #> 10 cyl    8            am       table      \"function (x) \\nforma… 0              #> # ℹ 38 more rows #> # ℹ 5 more variables: warning <chr>, error <chr>, context <chr>, #> #   stat_name <chr>, statistic <chr>  ard_ttest(data = mtcars, by = \"am\", variable = \"hp\") |>    flatten_ard() #> # A tibble: 10 × 8 #>    group1 variable stat_name   statistic      group1_level context warning error #>    <chr>  <chr>    <chr>       <chr>          <chr>        <chr>   <chr>   <chr> #>  1 am     hp       estimate    33.4170040485… <NA>         t.test  <NA>    <NA>  #>  2 am     hp       estimate1   160.263157894… 0            t.test  <NA>    <NA>  #>  3 am     hp       estimate2   126.846153846… 1            t.test  <NA>    <NA>  #>  4 am     hp       statistic   1.26618876980… <NA>         t.test  <NA>    <NA>  #>  5 am     hp       p.value     0.22097958133… <NA>         t.test  <NA>    <NA>  #>  6 am     hp       parameter   18.7154096625… <NA>         t.test  <NA>    <NA>  #>  7 am     hp       conf.low    -21.878580201… <NA>         t.test  <NA>    <NA>  #>  8 am     hp       conf.high   88.7125882988… <NA>         t.test  <NA>    <NA>  #>  9 am     hp       method      Welch Two Sam… <NA>         t.test  <NA>    <NA>  #> 10 am     hp       alternative two.sided      <NA>         t.test  <NA>    <NA>  glm(am ~ mpg + factor(cyl), data = mtcars, family = binomial) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>    flatten_ard() #> # A tibble: 68 × 5 #>    variable variable_level stat_name      statistic  context    #>    <chr>    <chr>          <chr>          <chr>      <chr>      #>  1 mpg      <NA>           term           mpg        regression #>  2 mpg      <NA>           var_label      mpg        regression #>  3 mpg      <NA>           var_class      numeric    regression #>  4 mpg      <NA>           var_type       continuous regression #>  5 mpg      <NA>           var_nlevels    <NA>       regression #>  6 mpg      <NA>           contrasts      <NA>       regression #>  7 mpg      <NA>           contrasts_type <NA>       regression #>  8 mpg      <NA>           reference_row  <NA>       regression #>  9 mpg      <NA>           label          mpg        regression #> 10 mpg      <NA>           n_obs          32         regression #> # ℹ 58 more rows"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"Comparison ARD Statistics","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data data frame character column name compare variable character column name compared ... arguments passed method.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data = mtcars, by = \"am\", variable = \"hp\") #> # A tibble: 10 × 8 #>    group1 variable stat_name   statistic group1_level context   warning   error  #>  * <chr>  <chr>    <chr>       <list>    <list>       <list>    <named l> <name> #>  1 am     hp       estimate    <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  2 am     hp       estimate1   <dbl [1]> <dbl [1]>    <chr [1]> <NULL>    <NULL> #>  3 am     hp       estimate2   <dbl [1]> <dbl [1]>    <chr [1]> <NULL>    <NULL> #>  4 am     hp       statistic   <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  5 am     hp       p.value     <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  6 am     hp       parameter   <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  7 am     hp       conf.low    <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  8 am     hp       conf.high   <dbl [1]> <NULL>       <chr [1]> <NULL>    <NULL> #>  9 am     hp       method      <chr [1]> <NULL>       <chr [1]> <NULL>    <NULL> #> 10 am     hp       alternative <chr [1]> <NULL>       <chr [1]> <NULL>    <NULL> ard_wilcoxtest(data = mtcars, by = \"am\", variable = \"hp\") #> # A tibble: 4 × 7 #>   group1 variable stat_name   statistic context   warning      error        #> * <chr>  <chr>    <chr>       <list>    <list>    <named list> <named list> #> 1 am     hp       statistic   <dbl [1]> <chr [1]> <chr [1]>    <NULL>       #> 2 am     hp       p.value     <dbl [1]> <chr [1]> <chr [1]>    <NULL>       #> 3 am     hp       method      <chr [1]> <chr [1]> <chr [1]>    <NULL>       #> 4 am     hp       alternative <chr [1]> <chr [1]> <chr [1]>    <NULL>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Labels — ard_label","title":"ARD Labels — ard_label","text":"Add variable labels ARD data frame. label specified label set column, column name placed label statistic.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Labels — ard_label","text":"","code":"ard_label(data, label = NULL, variables = everything())"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Labels — ard_label","text":"data data frame label named list variable labels, e.g. list(mpg = \"MPG\"). Default NULL variables variable include","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Labels — ard_label","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Labels — ard_label","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, 'label') <- \"Lowercase Letters\"  ard_label(df) #> # A tibble: 2 × 3 #>   variable stat_name statistic #> * <chr>    <chr>     <list>    #> 1 var1     label     <chr [1]> #> 2 var2     label     <chr [1]>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"lm(hp ~ mpg + factor(cyl), data = mtcars) |>   ard_regression(add_estimate_to_reference_rows = TRUE) #> # A tibble: 64 × 5 #>    variable variable_level stat_name      statistic    context   #>  * <chr>    <chr>          <chr>          <named list> <list>    #>  1 mpg      NA             term           <chr [1]>    <chr [1]> #>  2 mpg      NA             var_label      <chr [1]>    <chr [1]> #>  3 mpg      NA             var_class      <chr [1]>    <chr [1]> #>  4 mpg      NA             var_type       <chr [1]>    <chr [1]> #>  5 mpg      NA             var_nlevels    <int [1]>    <chr [1]> #>  6 mpg      NA             contrasts      <chr [1]>    <chr [1]> #>  7 mpg      NA             contrasts_type <chr [1]>    <chr [1]> #>  8 mpg      NA             reference_row  <lgl [1]>    <chr [1]> #>  9 mpg      NA             label          <chr [1]>    <chr [1]> #> 10 mpg      NA             n_obs          <dbl [1]>    <chr [1]> #> # ℹ 54 more rows"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple ARD Statistics — ard_simple","title":"Simple ARD Statistics — ard_simple","text":"Compute Analysis Results Data (ARD) simple summary statistics continuous categorical data.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple ARD Statistics — ard_simple","text":"","code":"ard_continuous(   data,   by = dplyr::group_vars(data),   variables = everything(),   statistics = NULL )  ard_categorical(data, by = dplyr::group_vars(data), variables = everything())"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple ARD Statistics — ard_simple","text":"data data frame columns compute statistics . Default columns returned dplyr::group_vars(data). variables columns include summaries. Default everything(). statistics named list functions return summary statistic, e.g. list(mpg = list(mean = \\(x) mean(x, na.rm = TRUE)))","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple ARD Statistics — ard_simple","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple ARD Statistics — ard_simple","text":"","code":"ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) #> # A tibble: 42 × 10 #>    group1 group1_level variable stat_name stat_label statistic_fmt_fn statistic #>  * <chr>  <list>       <chr>    <chr>     <chr>      <list>           <list>    #>  1 cyl    <dbl [1]>    mpg      N         N          <fn>             <int [1]> #>  2 cyl    <dbl [1]>    mpg      N_miss    N Missing  <fn>             <int [1]> #>  3 cyl    <dbl [1]>    mpg      N_tot     Total N    <fn>             <int [1]> #>  4 cyl    <dbl [1]>    mpg      mean      Mean       <fn>             <dbl [1]> #>  5 cyl    <dbl [1]>    mpg      sd        SD         <fn>             <dbl [1]> #>  6 cyl    <dbl [1]>    mpg      min       Min        <fn>             <dbl [1]> #>  7 cyl    <dbl [1]>    mpg      max       Max        <fn>             <dbl [1]> #>  8 cyl    <dbl [1]>    hp       N         N          <fn>             <int [1]> #>  9 cyl    <dbl [1]>    hp       N_miss    N Missing  <fn>             <int [1]> #> 10 cyl    <dbl [1]>    hp       N_tot     Total N    <fn>             <int [1]> #> # ℹ 32 more rows #> # ℹ 3 more variables: warning <list>, error <list>, context <list> ard_categorical(mtcars, by = \"cyl\", variables = c(\"am\", \"gear\")) #> # A tibble: 48 × 11 #>    group1 group1_level variable stat_label statistic_fmt_fn variable_level #>  * <chr>  <list>       <chr>    <chr>      <list>           <list>         #>  1 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  2 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  3 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  4 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  5 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  6 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  7 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  8 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #>  9 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #> 10 cyl    <dbl [1]>    am       table      <fn>             <dbl [1]>      #> # ℹ 38 more rows #> # ℹ 5 more variables: warning <list>, error <list>, context <list>, #> #   stat_name <chr>, statistic <list>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: CDISC Analysis Results Data — cards-package","title":"cards: CDISC Analysis Results Data — cards-package","text":"package constructs CDISC-compliant Analysis Results Data objects. objects used (re-used) construct summary tables, visualizations, written reports.","code":""},{"path":[]},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: CDISC Analysis Results Data — cards-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID)","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct cards Table — construct_cards","title":"Construct cards Table — construct_cards","text":"Construct table class 'cards' table plan, header plan, table components","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct cards Table — construct_cards","text":"","code":"construct_cards(table_plan, header_plan, hide = c(\"variable\", \"header_row\"))"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct cards Table — construct_cards","text":"table_plan table plan data frame header_plan header plan named list hide character vector columns hide output","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct cards Table — construct_cards","text":"cards table","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct cards Table — construct_cards","text":"","code":"# Construct the ARD table_ard <-   dplyr::bind_rows(     ard_continuous(mtcars, by = cyl, variables = \"mpg\"),     ard_categorical(mtcars, by = cyl, variables = \"am\"),     ard_categorical(mtcars,  variables = \"cyl\")   )  # convert ARD to a cards table table <-   construct_cards(     table_plan =       dplyr::bind_rows(         table_ard |> dplyr::filter(variable %in% \"mpg\") |>  table_plan_simple_continuous(),         table_ard |> dplyr::filter(variable %in% \"am\") |> table_plan_simple_categorical()       ),     header_plan =       table_ard |>       dplyr::filter(variable %in% \"cyl\") |>       header_plan_simple(header = \"**{group} Cylinders  \\nN = {n} ({p}%)**\") |>       utils::modifyList(val = list(label = \"**Characteristic**\"))   )"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Table to Print Engine Class — convert_cards","title":"Convert Table to Print Engine Class — convert_cards","text":"Convert 'cards' table print engine classes. Goal support gt, rtables, flextable, huxtable, kableExtra, kable, formatted tibbles","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Table to Print Engine Class — convert_cards","text":"","code":"convert_cards(x, engine = \"gt\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Table to Print Engine Class — convert_cards","text":"x cards table engine string indicating print engine. Default \"gtß\"","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Table to Print Engine Class — convert_cards","text":"table object","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Table to Print Engine Class — convert_cards","text":"","code":"# Construct the ARD table_ard <-   dplyr::bind_rows(     ard_continuous(mtcars, by = cyl, variables = \"mpg\"),     ard_categorical(mtcars, by = cyl, variables = \"am\"),     ard_categorical(mtcars,  variables = \"cyl\")   )  # convert ARD to a cards table construct_cards(   table_plan =     dplyr::bind_rows(       table_ard |> dplyr::filter(variable %in% \"mpg\") |>  table_plan_simple_continuous(),       table_ard |> dplyr::filter(variable %in% \"am\") |> table_plan_simple_categorical()     ),   header_plan =     table_ard |>     dplyr::filter(variable %in% \"cyl\") |>     header_plan_simple(header = \"**{group} Cylinders  \\nN = {n}  ({p}%)**\") |>     modifyList(val = list(label = gt::md(\"**Characteristic**\"))) ) |>   convert_cards() #> <div id=\"kimzncesdg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#kimzncesdg table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #kimzncesdg thead, #kimzncesdg tbody, #kimzncesdg tfoot, #kimzncesdg tr, #kimzncesdg td, #kimzncesdg th { #>   border-style: none; #> } #>  #> #kimzncesdg p { #>   margin: 0; #>   padding: 0; #> } #>  #> #kimzncesdg .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #kimzncesdg .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #kimzncesdg .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #kimzncesdg .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #kimzncesdg .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #kimzncesdg .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #kimzncesdg .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #kimzncesdg .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #kimzncesdg .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #kimzncesdg .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #kimzncesdg .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #kimzncesdg .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #kimzncesdg .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #kimzncesdg .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #kimzncesdg .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kimzncesdg .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #kimzncesdg .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #kimzncesdg .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #kimzncesdg .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kimzncesdg .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #kimzncesdg .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kimzncesdg .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #kimzncesdg .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kimzncesdg .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kimzncesdg .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kimzncesdg .gt_left { #>   text-align: left; #> } #>  #> #kimzncesdg .gt_center { #>   text-align: center; #> } #>  #> #kimzncesdg .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #kimzncesdg .gt_font_normal { #>   font-weight: normal; #> } #>  #> #kimzncesdg .gt_font_bold { #>   font-weight: bold; #> } #>  #> #kimzncesdg .gt_font_italic { #>   font-style: italic; #> } #>  #> #kimzncesdg .gt_super { #>   font-size: 65%; #> } #>  #> #kimzncesdg .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #kimzncesdg .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #kimzncesdg .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #kimzncesdg .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #kimzncesdg .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #kimzncesdg .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #kimzncesdg .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;4 Cylinders&lt;br /&gt;&#10;N = 11  (34.4%)&lt;/strong&gt;\"><strong>4 Cylinders<br /> #> N = 11  (34.4%)<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;6 Cylinders&lt;br /&gt;&#10;N = 7  (21.9%)&lt;/strong&gt;\"><strong>6 Cylinders<br /> #> N = 7  (21.9%)<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;8 Cylinders&lt;br /&gt;&#10;N = 14  (43.8%)&lt;/strong&gt;\"><strong>8 Cylinders<br /> #> N = 14  (43.8%)<\/strong><\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">mpg<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">am<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    0<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">3 (27.3%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">4 (57.1%)<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">12 (85.7%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    1<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">8 (72.7%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">3 (42.9%)<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">2 (14.3%)<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/eval_capture_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate and Capture Conditions — eval_capture_conditions","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"Evaluates expression also capturing error warning conditions. Function always returns named list list(result=, warning=, error=). errors warnings, elements NULL. error, result element NULL. Messages nether saved printed console. Evaluation done via rlang::eval_tidy().","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/eval_capture_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"eval_capture_conditions(expr, data = NULL, env = rlang::caller_env())"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/eval_capture_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"expr expression quosure evaluate. data data frame, named list vector. Alternatively, data mask created as_data_mask() new_data_mask(). Objects data priority env. See section data masking. env environment evaluate expr. environment applicable quosures environments.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/eval_capture_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"named list","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/eval_capture_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"# function executes without error or warning eval_capture_conditions(letters[1:2]) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>   # an error is thrown eval_capture_conditions(stop(\"Example Error!\")) #> $result #> NULL #>  #> $warning #> NULL #>  #> $error #> [1] \"Example Error!\" #>   # if more than one warning is returned, all are saved eval_capture_conditions({warning(\"Warning 1\"); warning(\"Warning 2\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> [1] \"Warning 1\" \"Warning 2\" #>  #> $error #> NULL #>   # messages are not printed to the console eval_capture_conditions({message(\"A message!\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten ARD — flatten_ard","title":"Flatten ARD — flatten_ard","text":"function ingests ARD object flattens readable print data. FUNCTION NEED UPDATES FLAVORS ARD MAY BECOME COMPLEX. List columns converted character vectors. list column contains elements easily coerced character vector, function fail.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten ARD — flatten_ard","text":"","code":"flatten_ard(x)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten ARD — flatten_ard","text":"x ARD object","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten ARD — flatten_ard","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten ARD — flatten_ard","text":"","code":"ard_categorical(mtcars, by = cyl, variables = c(\"am\", \"gear\")) |>   flatten_ard() #> # A tibble: 48 × 11 #>    group1 group1_level variable stat_label statistic_fmt_fn       variable_level #>    <chr>  <chr>        <chr>    <chr>      <chr>                  <chr>          #>  1 cyl    4            am       table      \"function (x) \\nforma… 0              #>  2 cyl    4            am       table      \"function (x) \\nforma… 0              #>  3 cyl    4            am       table      \"function (x) \\nforma… 1              #>  4 cyl    4            am       table      \"function (x) \\nforma… 1              #>  5 cyl    6            am       table      \"function (x) \\nforma… 0              #>  6 cyl    6            am       table      \"function (x) \\nforma… 0              #>  7 cyl    6            am       table      \"function (x) \\nforma… 1              #>  8 cyl    6            am       table      \"function (x) \\nforma… 1              #>  9 cyl    8            am       table      \"function (x) \\nforma… 0              #> 10 cyl    8            am       table      \"function (x) \\nforma… 0              #> # ℹ 38 more rows #> # ℹ 5 more variables: warning <chr>, error <chr>, context <chr>, #> #   stat_name <chr>, statistic <chr>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Header Plan — header_plan_simple","title":"Column Header Plan — header_plan_simple","text":"Create named list column header definitions statistic columns","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Header Plan — header_plan_simple","text":"","code":"header_plan_simple(ard, header = \"{group}  \\nN = {n}\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Header Plan — header_plan_simple","text":"ard ARD object header string specifying form column header. Default \"{group}  \\nN = {n}\"","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column Header Plan — header_plan_simple","text":"named list","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column Header Plan — header_plan_simple","text":"","code":"ard_categorical(mtcars, variables = \"cyl\") |>   header_plan_simple(header = \"**{group} Cylinders**  \\nN = {n} ({p}%)\") #> $stat_1 #> [1] \"**4 Cylinders**  \\nN = 11 (34.4%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>  #> $stat_2 #> [1] \"**6 Cylinders**  \\nN = 7 (21.9%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>  #> $stat_3 #> [1] \"**8 Cylinders**  \\nN = 14 (43.8%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/json.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD as JSON — json","title":"ARD as JSON — json","text":"Convert ARDs JSON write disk JSON","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD as JSON — json","text":"","code":"ard_as_json(x, ...)  write_ard_as_json(x, path, ...)  as_nested_list(x)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD as JSON — json","text":"x ARD ... additional conversion arguments, see also jsonlite::toJSON() path file disk","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD as JSON — json","text":"JSON object","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD as JSON — json","text":"","code":"ard <- ard_continuous(mtcars, by = cyl, variables = c(\"mpg\", \"hp\"))  ard_as_json(ard) #> {\"variable\":{\"mpg\":{\"group1\":{\"cyl\":{\"group1_level\":{\"4\":{\"stat_name\":{\"N\":{\"statistic\":[11],\"statistic_fmt\":[\"11\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[11],\"statistic_fmt\":[\"11\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[26.6636],\"statistic_fmt\":[\"27\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[4.5098],\"statistic_fmt\":[\"5\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[21.4],\"statistic_fmt\":[\"21\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[33.9],\"statistic_fmt\":[\"34\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}},\"6\":{\"stat_name\":{\"N\":{\"statistic\":[7],\"statistic_fmt\":[\"7\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[7],\"statistic_fmt\":[\"7\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[19.7429],\"statistic_fmt\":[\"20\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[1.4536],\"statistic_fmt\":[\"1\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[17.8],\"statistic_fmt\":[\"18\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[21.4],\"statistic_fmt\":[\"21\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}},\"8\":{\"stat_name\":{\"N\":{\"statistic\":[14],\"statistic_fmt\":[\"14\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[14],\"statistic_fmt\":[\"14\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[15.1],\"statistic_fmt\":[\"15\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[2.56],\"statistic_fmt\":[\"3\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[10.4],\"statistic_fmt\":[\"10\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[19.2],\"statistic_fmt\":[\"19\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}}}}}},\"hp\":{\"group1\":{\"cyl\":{\"group1_level\":{\"4\":{\"stat_name\":{\"N\":{\"statistic\":[11],\"statistic_fmt\":[\"11\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[11],\"statistic_fmt\":[\"11\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[82.6364],\"statistic_fmt\":[\"83\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[20.9345],\"statistic_fmt\":[\"21\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[52],\"statistic_fmt\":[\"52\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[113],\"statistic_fmt\":[\"113\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}},\"6\":{\"stat_name\":{\"N\":{\"statistic\":[7],\"statistic_fmt\":[\"7\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[7],\"statistic_fmt\":[\"7\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[122.2857],\"statistic_fmt\":[\"122\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[24.2605],\"statistic_fmt\":[\"24\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[105],\"statistic_fmt\":[\"105\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[175],\"statistic_fmt\":[\"175\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}},\"8\":{\"stat_name\":{\"N\":{\"statistic\":[14],\"statistic_fmt\":[\"14\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_miss\":{\"statistic\":[0],\"statistic_fmt\":[\"0\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"N_tot\":{\"statistic\":[14],\"statistic_fmt\":[\"14\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"mean\":{\"statistic\":[209.2143],\"statistic_fmt\":[\"209\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"sd\":{\"statistic\":[50.9769],\"statistic_fmt\":[\"51\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"min\":{\"statistic\":[150],\"statistic_fmt\":[\"150\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]},\"max\":{\"statistic\":[335],\"statistic_fmt\":[\"335\"],\"warning\":{},\"error\":{},\"context\":[\"continuous\"]}}}}}}}}}"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple ARD Table Plans — plan_simple","title":"Simple ARD Table Plans — plan_simple","text":"Plans convert simple ARDs formatted data frames. data frames eventually stacked final table.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple ARD Table Plans — plan_simple","text":"","code":"table_plan_simple_continuous(   ard,   statistics = c(\"{N}\", \"{mean} ({sd})\", \"{min}, {max}\") )  table_plan_simple_categorical(ard, statistics = \"{n} ({p}%)\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple ARD Table Plans — plan_simple","text":"ard single ARD object one variable statistics character vector statistics include resulting table. Default c(\"{N}\", \"{mean} ({sd})\",  \"{min}, {max}\")","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple ARD Table Plans — plan_simple","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple ARD Table Plans — plan_simple","text":"","code":"ard_continuous(mtcars, by = cyl, variables = \"mpg\") |>   table_plan_simple_continuous() #> # A tibble: 1 × 3 #>   variable header_row label #>   <chr>    <lgl>      <chr> #> 1 NA       TRUE       mpg    ard_categorical(mtcars, by = cyl, variables = \"am\") |>   table_plan_simple_categorical() #> # A tibble: 3 × 6 #>   variable header_row label stat_1    stat_2    stat_3     #>   <chr>    <lgl>      <chr> <chr>     <chr>     <chr>      #> 1 am       TRUE       am    NA        NA        NA         #> 2 am       FALSE      0     3 (27.3%) 4 (57.1%) 12 (85.7%) #> 3 am       FALSE      1     8 (72.7%) 3 (42.9%) 2 (14.3%)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cards.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Methods — print.cards","title":"Print Methods — print.cards","text":"Print Methods","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Methods — print.cards","text":"","code":"# S3 method for cards print(x, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Methods — print.cards","text":"x cards table ... used","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Methods — print.cards","text":"gt table","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Methods — print.cards","text":"","code":"# TODO: add example"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars","code":""}]
