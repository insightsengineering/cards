[{"path":"https://refactored-bassoon-49o3774.pages.github.io/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 cardinal authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D (2023). cardinal: CDISC Aanalys Results Data. https://github.com/insightsengineering/cardinal, https://refactored-bassoon-49o3774.pages.github.io/.","code":"@Manual{,   title = {cardinal: CDISC Aanalys Results Data},   author = {Daniel D. Sjoberg},   year = {2023},   note = {https://github.com/insightsengineering/cardinal, https://refactored-bassoon-49o3774.pages.github.io/}, }"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"cardinal","dir":"","previous_headings":"","what":"CDISC Aanalys Results Data","title":"CDISC Aanalys Results Data","text":"goal cardinal …","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CDISC Aanalys Results Data","text":"can install development version cardinal GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cardinal\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CDISC Aanalys Results Data","text":"ARD Examples ARD -> Table Example","code":"library(cardinal) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  ard_continuous(mtcars, by = cyl, include = c(mpg, hp)) |>    flatten_ard() #> # A tibble: 42 × 6 #>    strata1 strata1_level variable stat_name statistic        context    #>    <chr>           <dbl> <chr>    <chr>     <chr>            <chr>      #>  1 cyl                 4 mpg      N         11               continuous #>  2 cyl                 4 mpg      N_miss    0                continuous #>  3 cyl                 4 mpg      N_tot     11               continuous #>  4 cyl                 4 mpg      mean      26.6636363636364 continuous #>  5 cyl                 4 mpg      sd        4.50982765242148 continuous #>  6 cyl                 4 mpg      min       21.4             continuous #>  7 cyl                 4 mpg      max       33.9             continuous #>  8 cyl                 4 hp       N         11               continuous #>  9 cyl                 4 hp       N_miss    0                continuous #> 10 cyl                 4 hp       N_tot     11               continuous #> # ℹ 32 more rows  ard_categorical(mtcars, by = cyl, include = c(am, gear)) |>    flatten_ard() #> # A tibble: 48 × 7 #>    strata1 strata1_level variable variable_level context     stat_name statistic #>    <chr>           <dbl> <chr>    <chr>          <chr>       <chr>     <chr>     #>  1 cyl                 4 am       0              categorical n         3         #>  2 cyl                 4 am       0              categorical p         0.272727… #>  3 cyl                 4 am       1              categorical n         8         #>  4 cyl                 4 am       1              categorical p         0.727272… #>  5 cyl                 6 am       0              categorical n         4         #>  6 cyl                 6 am       0              categorical p         0.571428… #>  7 cyl                 6 am       1              categorical n         3         #>  8 cyl                 6 am       1              categorical p         0.428571… #>  9 cyl                 8 am       0              categorical n         12        #> 10 cyl                 8 am       0              categorical p         0.857142… #> # ℹ 38 more rows  ard_ttest(data = mtcars, by = \"am\", variable = \"hp\") |>    flatten_ard() #> # A tibble: 10 × 6 #>    strata1 variable context stat_name   statistic               strata1_level #>    <chr>   <chr>    <chr>   <chr>       <chr>                   <chr>         #>  1 am      hp       ttest   estimate    33.417004048583         <NA>          #>  2 am      hp       ttest   estimate1   160.263157894737        0             #>  3 am      hp       ttest   estimate2   126.846153846154        1             #>  4 am      hp       ttest   statistic   1.26618876980934        <NA>          #>  5 am      hp       ttest   p.value     0.220979581335913       <NA>          #>  6 am      hp       ttest   parameter   18.7154096625045        <NA>          #>  7 am      hp       ttest   conf.low    -21.8785802016468       <NA>          #>  8 am      hp       ttest   conf.high   88.7125882988128        <NA>          #>  9 am      hp       ttest   method      Welch Two Sample t-test <NA>          #> 10 am      hp       ttest   alternative two.sided               <NA>  glm(am ~ mpg + factor(cyl), data = mtcars, family = binomial) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>    flatten_ard() #> # A tibble: 68 × 5 #>    variable variable_level stat_name      statistic  context    #>    <chr>    <chr>          <chr>          <chr>      <chr>      #>  1 mpg      <NA>           term           mpg        regression #>  2 mpg      <NA>           var_label      mpg        regression #>  3 mpg      <NA>           var_class      numeric    regression #>  4 mpg      <NA>           var_type       continuous regression #>  5 mpg      <NA>           var_nlevels    <NA>       regression #>  6 mpg      <NA>           contrasts      <NA>       regression #>  7 mpg      <NA>           contrasts_type <NA>       regression #>  8 mpg      <NA>           reference_row  <NA>       regression #>  9 mpg      <NA>           label          mpg        regression #> 10 mpg      <NA>           n_obs          32         regression #> # ℹ 58 more rows # Construct the ARD table_ard <-   bind_rows(     ard_continuous(mtcars, by = cyl, include = mpg),     ard_categorical(mtcars, by = cyl, include = am),     ard_categorical(mtcars, include = cyl)   )  # convert ARD to a cardinal table table <-   construct_cardinal(     table_plan =       bind_rows(         table_ard |> filter(variable %in% \"mpg\") |>  table_plan_simple_continuous(),         table_ard |> filter(variable %in% \"am\") |> table_plan_simple_categorical()       ),     header_plan =       table_ard |>       filter(variable %in% \"cyl\") |>       header_plan_simple(header = \"**{strata} Cylinders**  \\nN={n}  ({p}%)\") |>       modifyList(val = list(label = gt::md(\"**Characteristic**\")))   ) |>   convert_cardinal(engine = \"gt\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"Comparison ARD Statistics","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data data frame charcter column name compare variable charadter column name compared ... arguments passed method.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data = mtcars, by = \"am\", variable = \"hp\") #> # A tibble: 10 × 6 #>    strata1 variable context stat_name   statistic strata1_level #>    <chr>   <chr>    <chr>   <chr>       <list>    <list>        #>  1 am      hp       ttest   estimate    <dbl [1]> <NULL>        #>  2 am      hp       ttest   estimate1   <dbl [1]> <dbl [1]>     #>  3 am      hp       ttest   estimate2   <dbl [1]> <dbl [1]>     #>  4 am      hp       ttest   statistic   <dbl [1]> <NULL>        #>  5 am      hp       ttest   p.value     <dbl [1]> <NULL>        #>  6 am      hp       ttest   parameter   <dbl [1]> <NULL>        #>  7 am      hp       ttest   conf.low    <dbl [1]> <NULL>        #>  8 am      hp       ttest   conf.high   <dbl [1]> <NULL>        #>  9 am      hp       ttest   method      <chr [1]> <NULL>        #> 10 am      hp       ttest   alternative <chr [1]> <NULL>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Labels — ard_label","title":"ARD Labels — ard_label","text":"Add variable labels ARD data frame. label specified label set column, column name placed label statistic.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Labels — ard_label","text":"","code":"ard_label(data, label = NULL, include = everything())"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Labels — ard_label","text":"data data frame label named list variable labels, e.g. list(mpg = \"MPG\"). Default NULL include variable include","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Labels — ard_label","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Labels — ard_label","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, 'label') <- \"Lowercase Letters\"  ard_label(df) #> # A tibble: 2 × 3 #>   variable stat_name statistic #>   <chr>    <chr>     <list>    #> 1 var1     label     <chr [1]> #> 2 var2     label     <chr [1]>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"glm(am ~ mpg + factor(cyl), data = mtcars, family = binomial) |>   ard_regression(add_estimate_to_reference_rows = TRUE) #> # A tibble: 68 × 5 #>    variable variable_level stat_name      statistic    context    #>    <chr>    <chr>          <chr>          <named list> <chr>      #>  1 mpg      NA             term           <chr [1]>    regression #>  2 mpg      NA             var_label      <chr [1]>    regression #>  3 mpg      NA             var_class      <chr [1]>    regression #>  4 mpg      NA             var_type       <chr [1]>    regression #>  5 mpg      NA             var_nlevels    <int [1]>    regression #>  6 mpg      NA             contrasts      <chr [1]>    regression #>  7 mpg      NA             contrasts_type <chr [1]>    regression #>  8 mpg      NA             reference_row  <lgl [1]>    regression #>  9 mpg      NA             label          <chr [1]>    regression #> 10 mpg      NA             n_obs          <dbl [1]>    regression #> # ℹ 58 more rows"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple ARD Statistics — ard_simple","title":"Simple ARD Statistics — ard_simple","text":"Compute Analysis Results Data (ARD) simple summary statistics continuous categorical data.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple ARD Statistics — ard_simple","text":"","code":"ard_continuous(   data,   by = dplyr::group_vars(data),   statistics = NULL,   include = everything() )  ard_categorical(data, by = dplyr::group_vars(data), include = everything())"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple ARD Statistics — ard_simple","text":"data data frame columns compute statistics . Default columns returned dplyr::group_vars(data). statistics named list functions return summary statistic, e.g. list(mpg = list(mean = \\(x) mean(x, na.rm = TRUE))) include columns include summaries. Default everything().","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple ARD Statistics — ard_simple","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/ard_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple ARD Statistics — ard_simple","text":"","code":"ard_continuous(mtcars, by = cyl, include = c(mpg, hp)) #> # A tibble: 42 × 6 #>    strata1 strata1_level variable stat_name statistic context    #>    <chr>           <dbl> <chr>    <chr>     <list>    <chr>      #>  1 cyl                 4 mpg      N         <int [1]> continuous #>  2 cyl                 4 mpg      N_miss    <int [1]> continuous #>  3 cyl                 4 mpg      N_tot     <int [1]> continuous #>  4 cyl                 4 mpg      mean      <dbl [1]> continuous #>  5 cyl                 4 mpg      sd        <dbl [1]> continuous #>  6 cyl                 4 mpg      min       <dbl [1]> continuous #>  7 cyl                 4 mpg      max       <dbl [1]> continuous #>  8 cyl                 4 hp       N         <int [1]> continuous #>  9 cyl                 4 hp       N_miss    <int [1]> continuous #> 10 cyl                 4 hp       N_tot     <int [1]> continuous #> # ℹ 32 more rows ard_categorical(mtcars, by = cyl, include = c(am, gear)) #> # A tibble: 48 × 7 #>    strata1 strata1_level variable variable_level context     stat_name statistic #>    <chr>           <dbl> <chr>    <list>         <chr>       <chr>     <list>    #>  1 cyl                 4 am       <dbl [1]>      categorical n         <int [1]> #>  2 cyl                 4 am       <dbl [1]>      categorical p         <dbl [1]> #>  3 cyl                 4 am       <dbl [1]>      categorical n         <int [1]> #>  4 cyl                 4 am       <dbl [1]>      categorical p         <dbl [1]> #>  5 cyl                 6 am       <dbl [1]>      categorical n         <int [1]> #>  6 cyl                 6 am       <dbl [1]>      categorical p         <dbl [1]> #>  7 cyl                 6 am       <dbl [1]>      categorical n         <int [1]> #>  8 cyl                 6 am       <dbl [1]>      categorical p         <dbl [1]> #>  9 cyl                 8 am       <dbl [1]>      categorical n         <int [1]> #> 10 cyl                 8 am       <dbl [1]>      categorical p         <dbl [1]> #> # ℹ 38 more rows"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/cardinal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cardinal: CDISC Aanalys Results Data — cardinal-package","title":"cardinal: CDISC Aanalys Results Data — cardinal-package","text":"package constructs CDISC-compliant Analysis Results Data objects. objects used construct summary tables visualizations.","code":""},{"path":[]},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/cardinal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cardinal: CDISC Aanalys Results Data — cardinal-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID)","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cardinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Cardinal Table — construct_cardinal","title":"Construct Cardinal Table — construct_cardinal","text":"Construct table class 'cardinal' table plan, header plan, table compnents","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cardinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Cardinal Table — construct_cardinal","text":"","code":"construct_cardinal(table_plan, header_plan, hide = c(\"variable\", \"header_row\"))"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cardinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Cardinal Table — construct_cardinal","text":"table_plan table plan data frame header_plan header plan named list hide character vector columns hide output","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cardinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Cardinal Table — construct_cardinal","text":"cardinal table","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/construct_cardinal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Cardinal Table — construct_cardinal","text":"","code":"# Construct the ARD table_ard <-   dplyr::bind_rows(     ard_continuous(mtcars, by = cyl, include = mpg),     ard_categorical(mtcars, by = cyl, include = am),     # TODO: The ARD creation code can by simplified after the categorical     #       ARD accepts no-by variable specifications     mtcars |>       dplyr::mutate(..one.. = 1L) |>       ard_categorical(by = ..one..,  include = cyl) |>       dplyr::select(-starts_with(\"strata\"))   )  # convert ARD to a cardinal table table <-   construct_cardinal(     table_plan =       dplyr::bind_rows(         table_ard |> dplyr::filter(variable %in% \"mpg\") |>  table_plan_simple_continuous(),         table_ard |> dplyr::filter(variable %in% \"am\") |> table_plan_simple_categorical()       ),     header_plan =       table_ard |>       dplyr::filter(variable %in% \"cyl\") |>       header_plan_simple(header = \"**{strata} Cylinders  \\nN = {n} ({p}%)**\") |>       utils::modifyList(val = list(label = \"**Characteristic**\"))   )"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cardinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Table to Print Engine Class — convert_cardinal","title":"Convert Table to Print Engine Class — convert_cardinal","text":"Convert 'cardinal' table print engine classes. Goal support gt, rtables, flextable, huxtable, kableExtra, kable, formatted tibbles","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cardinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Table to Print Engine Class — convert_cardinal","text":"","code":"convert_cardinal(x, engine = \"gt\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cardinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Table to Print Engine Class — convert_cardinal","text":"x cardinal table engine string indicating print engine. Default \"gtß\"","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cardinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Table to Print Engine Class — convert_cardinal","text":"table object","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/convert_cardinal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Table to Print Engine Class — convert_cardinal","text":"","code":"# Construct the ARD table_ard <-   dplyr::bind_rows(     ard_continuous(mtcars, by = cyl, include = mpg),     ard_categorical(mtcars, by = cyl, include = am),     # TODO: The ARD creation code can by simplified after the categorical     #       ARD accepts no-by variable specifications     mtcars |>       dplyr::mutate(..one.. = 1L) |>       ard_categorical(by = ..one..,  include = cyl) |>       dplyr::select(-starts_with(\"strata\"))   )  # convert ARD to a cardinal table construct_cardinal(   table_plan =     dplyr::bind_rows(       table_ard |> dplyr::filter(variable %in% \"mpg\") |>  table_plan_simple_continuous(),       table_ard |> dplyr::filter(variable %in% \"am\") |> table_plan_simple_categorical()     ),   header_plan =     table_ard |>     dplyr::filter(variable %in% \"cyl\") |>     header_plan_simple(header = \"**{strata} Cylinders  \\nN = {n}  ({p}%)**\") |>     modifyList(val = list(label = gt::md(\"**Characteristic**\"))) ) |>   convert_cardinal() #> <div id=\"grpcxktxvu\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#grpcxktxvu table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #grpcxktxvu thead, #grpcxktxvu tbody, #grpcxktxvu tfoot, #grpcxktxvu tr, #grpcxktxvu td, #grpcxktxvu th { #>   border-style: none; #> } #>  #> #grpcxktxvu p { #>   margin: 0; #>   padding: 0; #> } #>  #> #grpcxktxvu .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #grpcxktxvu .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #grpcxktxvu .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #grpcxktxvu .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #grpcxktxvu .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #grpcxktxvu .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #grpcxktxvu .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #grpcxktxvu .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #grpcxktxvu .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #grpcxktxvu .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #grpcxktxvu .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #grpcxktxvu .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #grpcxktxvu .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #grpcxktxvu .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #grpcxktxvu .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #grpcxktxvu .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #grpcxktxvu .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #grpcxktxvu .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #grpcxktxvu .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #grpcxktxvu .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #grpcxktxvu .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #grpcxktxvu .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #grpcxktxvu .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #grpcxktxvu .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #grpcxktxvu .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #grpcxktxvu .gt_left { #>   text-align: left; #> } #>  #> #grpcxktxvu .gt_center { #>   text-align: center; #> } #>  #> #grpcxktxvu .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #grpcxktxvu .gt_font_normal { #>   font-weight: normal; #> } #>  #> #grpcxktxvu .gt_font_bold { #>   font-weight: bold; #> } #>  #> #grpcxktxvu .gt_font_italic { #>   font-style: italic; #> } #>  #> #grpcxktxvu .gt_super { #>   font-size: 65%; #> } #>  #> #grpcxktxvu .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #grpcxktxvu .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #grpcxktxvu .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #grpcxktxvu .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #grpcxktxvu .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #grpcxktxvu .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #grpcxktxvu .gt_indent_5 { #>   text-indent: 25px; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;4 Cylinders&lt;br /&gt;&#10;N = 11  (34.4%)&lt;/strong&gt;\"><strong>4 Cylinders<br /> #> N = 11  (34.4%)<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;6 Cylinders&lt;br /&gt;&#10;N = 7  (21.9%)&lt;/strong&gt;\"><strong>6 Cylinders<br /> #> N = 7  (21.9%)<\/strong><\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;8 Cylinders&lt;br /&gt;&#10;N = 14  (43.8%)&lt;/strong&gt;\"><strong>8 Cylinders<br /> #> N = 14  (43.8%)<\/strong><\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">mpg<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    {N}<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">11<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">7<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">14<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    {mean} ({sd})<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">27 (5)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">20 (1)<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">15 (3)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    {min}, {max}<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">21, 34<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">18, 21<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">10, 19<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\" style=\"font-weight: bold;\">am<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\"><\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\"><\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    0<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">3 (27.3%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">4 (57.1%)<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">12 (85.7%)<\/td><\/tr> #>     <tr><td headers=\"label\" class=\"gt_row gt_left\">    1<\/td> #> <td headers=\"stat_1\" class=\"gt_row gt_right\">8 (72.7%)<\/td> #> <td headers=\"stat_2\" class=\"gt_row gt_right\">3 (42.9%)<\/td> #> <td headers=\"stat_3\" class=\"gt_row gt_right\">2 (14.3%)<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten ARD — flatten_ard","title":"Flatten ARD — flatten_ard","text":"function ingests ARD object flattens readable print data. FUNCTION NEED UPDATES FLAVORS ARD MAY BECOME COMPLEX. List columns converted character vectors. list column contains elements easily coerced character vector, function fail.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten ARD — flatten_ard","text":"","code":"flatten_ard(x)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten ARD — flatten_ard","text":"x ARD object","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten ARD — flatten_ard","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/flatten_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten ARD — flatten_ard","text":"","code":"ard_categorical(mtcars, by = cyl, include = c(am, gear)) |>   flatten_ard() #> # A tibble: 48 × 7 #>    strata1 strata1_level variable variable_level context     stat_name statistic #>    <chr>           <dbl> <chr>    <chr>          <chr>       <chr>     <chr>     #>  1 cyl                 4 am       0              categorical n         3         #>  2 cyl                 4 am       0              categorical p         0.272727… #>  3 cyl                 4 am       1              categorical n         8         #>  4 cyl                 4 am       1              categorical p         0.727272… #>  5 cyl                 6 am       0              categorical n         4         #>  6 cyl                 6 am       0              categorical p         0.571428… #>  7 cyl                 6 am       1              categorical n         3         #>  8 cyl                 6 am       1              categorical p         0.428571… #>  9 cyl                 8 am       0              categorical n         12        #> 10 cyl                 8 am       0              categorical p         0.857142… #> # ℹ 38 more rows"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Header Plan — header_plan_simple","title":"Column Header Plan — header_plan_simple","text":"Create named list column header definitions statistic columns","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Header Plan — header_plan_simple","text":"","code":"header_plan_simple(ard, header = \"{strata}  \\nN = {n}\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Header Plan — header_plan_simple","text":"ard ARD object header string specifying form column header. Default \"{strata}  \\nN = {n}\"","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Column Header Plan — header_plan_simple","text":"named list","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/header_plan_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column Header Plan — header_plan_simple","text":"","code":"ard_categorical(mtcars, include = cyl) |>   header_plan_simple(header = \"**{strata} Cylinders**  \\nN = {n} ({p}%)\") #> $stat_1 #> [1] \"**4 Cylinders**  \\nN = 11 (34.4%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>  #> $stat_2 #> [1] \"**6 Cylinders**  \\nN = 7 (21.9%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>  #> $stat_3 #> [1] \"**8 Cylinders**  \\nN = 14 (43.8%)\" #> attr(,\"class\") #> [1] \"from_markdown\" #>"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple ARD Table Plans — plan_simple","title":"Simple ARD Table Plans — plan_simple","text":"Plans convert simple ARDs formatted data frames. data frames eventually stacked final table.","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple ARD Table Plans — plan_simple","text":"","code":"table_plan_simple_continuous(   ard,   statistics = c(\"{N}\", \"{mean} ({sd})\", \"{min}, {max}\") )  table_plan_simple_categorical(ard, statistics = \"{n} ({p}%)\")"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple ARD Table Plans — plan_simple","text":"ard single ARD object one variable statistics character vector statistics include resulting table. Default c(\"{N}\", \"{mean} ({sd})\",  \"{min}, {max}\")","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple ARD Table Plans — plan_simple","text":"data frame","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/plan_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple ARD Table Plans — plan_simple","text":"","code":"ard_continuous(mtcars, by = cyl, include = mpg) |>   table_plan_simple_continuous() #> # A tibble: 4 × 6 #>   variable header_row label         stat_1 stat_2 stat_3 #>   <chr>    <lgl>      <chr>         <chr>  <chr>  <chr>  #> 1 mpg      TRUE       mpg           NA     NA     NA     #> 2 mpg      FALSE      {N}           11     7      14     #> 3 mpg      FALSE      {mean} ({sd}) 27 (5) 20 (1) 15 (3) #> 4 mpg      FALSE      {min}, {max}  21, 34 18, 21 10, 19  ard_categorical(mtcars, by = cyl, include = am) |>   table_plan_simple_categorical() #> # A tibble: 3 × 6 #>   variable header_row label stat_1    stat_2    stat_3     #>   <chr>    <lgl>      <chr> <chr>     <chr>     <chr>      #> 1 am       TRUE       am    NA        NA        NA         #> 2 am       FALSE      0     3 (27.3%) 4 (57.1%) 12 (85.7%) #> 3 am       FALSE      1     8 (72.7%) 3 (42.9%) 2 (14.3%)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cardinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Methods — print.cardinal","title":"Print Methods — print.cardinal","text":"Print Methods","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cardinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Methods — print.cardinal","text":"","code":"# S3 method for cardinal print(x, ...)"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cardinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Methods — print.cardinal","text":"x cardinal table ... used","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cardinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Methods — print.cardinal","text":"gt table","code":""},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/print.cardinal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Methods — print.cardinal","text":"","code":"# TODO: add example"},{"path":"https://refactored-bassoon-49o3774.pages.github.io/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars","code":""}]
