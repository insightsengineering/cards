[{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"yaml","dir":"Articles","previous_headings":"","what":"YAML","title":"structures","text":"as_nested_list() function prepares ARD data frame converted YAML object.","code":"ard |>    as_nested_list() |>    yaml::as.yaml() |>    cat() #> variable: #>   AGE: #>     group1: #>       ARM: #>         group1_level: #>           Placebo: #>             stat_name: #>               'N': #>                 statistic: 86 #>                 statistic_fmt: '86' #>                 warning: ~ #>                 error: ~ #>                 context: continuous #>               mean: #>                 statistic: 75.2093023 ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"json","dir":"Articles","previous_headings":"","what":"JSON","title":"structures","text":"as_nested_list() function prepares ARD data frame converted JSON object. Use jsonlite::write_json() function convert JSON write disk simultaneously.","code":"ard |>    as_nested_list() |>    jsonlite::toJSON(pretty = TRUE) #> { #>   \"variable\": { #>     \"AGE\": { #>       \"group1\": { #>         \"ARM\": { #>           \"group1_level\": { #>             \"Placebo\": { #>               \"stat_name\": { #>                 \"N\": { #>                   \"statistic\": [86], #>                   \"statistic_fmt\": [\"86\"], #>                   \"warning\": {}, #>                   \"error\": {}, #>                   \"context\": [\"continuous\"] #>                 }, ..."},{"path":"https://insightsengineering.github.io/cards/articles/structures.html","id":"rest-api","dir":"Articles","previous_headings":"","what":"REST API","title":"structures","text":"TODO: Update section","code":"library(plumber) library(jsonlite)  #* @get /nested_json #* @serializer unboxedJSON function() {   ard |>    as_nested_list() |>    jsonlite::toJSON(auto_unbox = TRUE) } #> function() { #>   ard |>  #>   as_nested_list() |>  #>   jsonlite::toJSON(auto_unbox = TRUE) #> }"},{"path":"https://insightsengineering.github.io/cards/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel D. Sjoberg. Author, maintainer. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/cards/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sjoberg D (2023). cards: CDISC Analysis Results Data. R package version 0.0.0.9000,  https://insightsengineering.github.io/cards/, https://github.com/insightsengineering/cards.","code":"@Manual{,   title = {cards: CDISC Analysis Results Data},   author = {Daniel D. Sjoberg},   year = {2023},   note = {R package version 0.0.0.9000,  https://insightsengineering.github.io/cards/},   url = {https://github.com/insightsengineering/cards}, }"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"cards","dir":"","previous_headings":"","what":"CDISC Analysis Results Data","title":"CDISC Analysis Results Data","text":"package preliminary state, breaking changes made without notice deprecation. CDISC Analysis Results Standard aims facilitate automation, reproducibility, reusability, traceability analysis results data (ARD). {cards} package creates CDISC Analysis Result Data Sets. Use cases: Quality Control (QC) existing tables figures. Pre-calculate statistics summarized tables figures. Medical writers may easily access statistics place reports without copying pasting reports. Provides consistent format results lends results combined across studies re-use re-analysis.","code":""},{"path":"https://insightsengineering.github.io/cards/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CDISC Analysis Results Data","text":"can install development version cards GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"insightsengineering/cards\")"},{"path":"https://insightsengineering.github.io/cards/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"CDISC Analysis Results Data","text":"ARD Examples","code":"library(cards)  ard_continuous(ADSL, by = \"ARM\", variables = c(\"AGE\", \"BMIBL\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ard_categorical(ADSL, by = \"ARM\", variables = c(\"AGEGR1\", \"SEX\")) |>    flatten_ard() |>    head(n = 10) |>    knitr::kable() ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>  # only only two groups for a t-test   ard_ttest(by = \"ARM\", variable = \"AGE\") |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\", \"method\")) |>    flatten_ard() |>    knitr::kable() # the example below ignores the time to event nature of the outcome # and are provided to illustrate functionality only survival::coxph(ggsurvfit::Surv_CNSR() ~ TRTP, data = ADTTE) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>    dplyr::filter(stat_name %in% c(\"estimate\", \"conf.low\", \"conf.high\", \"p.value\")) |>    flatten_ard() |>    tidyr::drop_na() |>   knitr::kable()"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ADaM Data — adam","title":"Example ADaM Data — adam","text":"Data frame imported CDISC SDTM/ADaM Pilot Project","code":""},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ADaM Data — adam","text":"","code":"ADSL  ADAE  ADTTE"},{"path":"https://insightsengineering.github.io/cards/reference/adam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example ADaM Data — adam","text":"object class tbl_df (inherits tbl, data.frame) 254 rows 48 columns. object class tbl_df (inherits tbl, data.frame) 1191 rows 55 columns. object class tbl_df (inherits tbl, data.frame) 254 rows 26 columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Formatting Functions — apply_statistic_fmt_fn","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"Apply formatting functions raw statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"apply_statistic_fmt_fn(x)"},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"x ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"ARD data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/apply_statistic_fmt_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Formatting Functions — apply_statistic_fmt_fn","text":"","code":"ard_continuous(ADSL, variables = \"AGE\") |>   apply_statistic_fmt_fn() #> # A tibble: 13 × 9 #>    variable context    stat_name stat_label      statistic statistic_fmt #>    <chr>    <chr>      <chr>     <chr>           <list>    <list>        #>  1 AGE      continuous N         N               <int [1]> <chr [1]>     #>  2 AGE      continuous mean      Mean            <dbl [1]> <chr [1]>     #>  3 AGE      continuous sd        SD              <dbl [1]> <chr [1]>     #>  4 AGE      continuous median    Median          <dbl [1]> <chr [1]>     #>  5 AGE      continuous p25       25th Percentile <dbl [1]> <chr [1]>     #>  6 AGE      continuous p75       75th Percentile <dbl [1]> <chr [1]>     #>  7 AGE      continuous min       Min             <dbl [1]> <chr [1]>     #>  8 AGE      continuous max       Max             <dbl [1]> <chr [1]>     #>  9 AGE      continuous N_obs     N_obs           <int [1]> <chr [1]>     #> 10 AGE      continuous N_miss    N_miss          <int [1]> <chr [1]>     #> 11 AGE      continuous N_nonmiss N_nonmiss       <int [1]> <chr [1]>     #> 12 AGE      continuous p_miss    p_miss          <dbl [1]> <chr [1]>     #> 13 AGE      continuous p_nonmiss p_nonmiss       <dbl [1]> <chr [1]>     #> # ℹ 3 more variables: statistic_fmt_fn <list>, warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Helpers — ard-helpers","title":"ARD Helpers — ard-helpers","text":"Helper functions working ARD data frames.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Helpers — ard-helpers","text":"","code":"get_ard_statistics(   x,   ...,   .column = \"statistic\",   .attributes = c(\"stat_label\", \"statistic_fmt_fn\", \"warning\", \"error\") )  bind_ard(..., .update = FALSE)"},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Helpers — ard-helpers","text":"x ARD data frame class 'card' ... get_ard_statistics(): optional named arguments indicating rows subset ARD. example, return rows column \"AGEGR1\" \"65-80\", pass AGEGR1 %% \"65-80\". bind_ard(): ARDs combine. argument can either ARD, list ARDs. Columns matched name, missing columns filled NA. .column string indicating column returned list. Default \"statistic\" .attributes character vector column names returned list attributes. Default c(\"stat_label\", \"statistic_fmt_fn\", \"warning\", \"error\") .update logical indicating whether update duplicate ARD statistics. Default FALSE. statistic type repeated .update=TRUE, recently added statistics retained, others omitted.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Helpers — ard-helpers","text":"transformed ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ARD Helpers — ard-helpers","text":"get_ard_statistics(): function returns statistics ARD named list. statistic label, formatting instruction, error warning messages returned attributes. bind_ard(): wrapper dplyr::bind_rows() additional checks duplicated statistics","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Helpers — ard-helpers","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>   bind_ard(ard, ard, .update = TRUE) #> ℹ 36 duplicate observations removed. #> # A tibble: 36 × 11 #>    group1 group1_level variable variable_level context     stat_name stat_label #>    <chr>  <list>       <chr>    <list>         <chr>       <chr>     <chr>      #>  1 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  2 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  3 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  4 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  5 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical n         n          #>  6 ARM    <chr [1]>    AGEGR1   <chr [1]>      categorical p         %          #>  7 ARM    <chr [1]>    AGEGR1   <NULL>         categorical N         N          #>  8 ARM    <chr [1]>    AGEGR1   <NULL>         categorical N_obs     N_obs      #>  9 ARM    <chr [1]>    AGEGR1   <NULL>         categorical N_miss    N_miss     #> 10 ARM    <chr [1]>    AGEGR1   <NULL>         categorical N_nonmiss N_nonmiss  #> # ℹ 26 more rows #> # ℹ 4 more variables: statistic <list>, statistic_fmt_fn <list>, #> #   warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Attributes — ard_attributes","title":"ARD Attributes — ard_attributes","text":"Add variable attributes ARD data frame. label attribute added columns, label specified label set column using label= argument, column name placed label statistic. class attribute also returned columns. attribute returned attributes() also added, e.g. factor levels.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Attributes — ard_attributes","text":"","code":"ard_attributes(data, variables = everything(), label = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Attributes — ard_attributes","text":"data data frame variables variable include label named list variable labels, e.g. list(mpg = \"MPG\"). Default NULL","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Attributes — ard_attributes","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Attributes — ard_attributes","text":"","code":"df <- dplyr::tibble(var1 = letters, var2 = LETTERS) attr(df$var1, 'label') <- \"Lowercase Letters\"  ard_attributes(df, variables = everything()) #> # A tibble: 4 × 5 #>   variable stat_name statistic stat_label     context    #> * <chr>    <chr>     <list>    <chr>          <chr>      #> 1 var1     label     <chr [1]> Variable Label attributes #> 2 var1     class     <chr [1]> Variable Class attributes #> 3 var2     label     <chr [1]> Variable Label attributes #> 4 var2     class     <chr [1]> Variable Class attributes"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical ARD Statistics — ard_categorical","title":"Categorical ARD Statistics — ard_categorical","text":"Compute Analysis Results Data (ARD) categorical summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(data, variables, by = NULL, strata = NULL, denominator = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical ARD Statistics — ard_categorical","text":"data data frame variables columns include summaries. Default everything(). , strata columns /stratified tabulation. Arguments similar, important distinction: : results tabulated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results tabulated observed combinations columns specified. Arguments may used conjunction one another. denominator Specify optional argument change denominator, e.g. \"N\" statistic. Default NULL. See details.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical ARD Statistics — ard_categorical","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"denominators","dir":"Reference","previous_headings":"","what":"Denominators","title":"Categorical ARD Statistics — ard_categorical","text":"default, ard_categorical() function returns statistics \"n\" \"N\", little \"n\" counts variable levels, \"N\" number non-missing observations. default calculation percentage merely p = n/N. However, sometimes necessary provide different \"N\" use denominator calculation. example, calculation rates various observed adverse events, may need update denominator number enrolled subjects. cases, use denominator argument specify new definition \"N\", subsequently \"p\". argument expects data frame, data frame must include columns specified ard_categorical(=) (strata columns considered). updated N length elements updated calculated number rows combination variables. Take example need update denominator subjects enrolled trial, e.g. tabulating number AEs occurred within SOC subjects may experienced AE represented ADAE data set. patients appear ADSL, however.","code":"ard_categorical(   data =     ADAE |>       dplyr::left_join(ADSL[c(\"USUBJID\", \"ARM\")], by = \"USUBJID\") |>       dplyr::filter(AOCCSFL %in% \"Y\"),   by = \"ARM\",   variables = \"AESOC\",   denominator = ADSL ) |>   flatten_ard() #> # A tibble: 141 x 9 #>    group1 group1_level variable variable_level    stat_name stat_label statistic #>    <chr>  <chr>        <chr>    <chr>             <chr>     <chr>      <chr>     #>  1 ARM    Placebo      AESOC    CARDIAC DISORDERS n         n          12        #>  2 ARM    Placebo      AESOC    CARDIAC DISORDERS p         %          0.139534~ #>  3 ARM    Placebo      AESOC    CONGENITAL, FAMI~ n         n          0         #>  4 ARM    Placebo      AESOC    CONGENITAL, FAMI~ p         %          0         #>  5 ARM    Placebo      AESOC    EAR AND LABYRINT~ n         n          1         #>  6 ARM    Placebo      AESOC    EAR AND LABYRINT~ p         %          0.011627~ #>  7 ARM    Placebo      AESOC    EYE DISORDERS     n         n          2         #>  8 ARM    Placebo      AESOC    EYE DISORDERS     p         %          0.023255~ #>  9 ARM    Placebo      AESOC    GASTROINTESTINAL~ n         n          17        #> 10 ARM    Placebo      AESOC    GASTROINTESTINAL~ p         %          0.197674~ #> # i 131 more rows #> # i 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_categorical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Categorical ARD Statistics — ard_categorical","text":"","code":"ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 36 × 9 #>    group1 group1_level variable variable_level stat_name stat_label statistic    #>    <chr>  <chr>        <chr>    <chr>          <chr>     <chr>      <chr>        #>  1 ARM    Placebo      AGEGR1   65-80          n         n          42           #>  2 ARM    Placebo      AGEGR1   65-80          p         %          0.488372093… #>  3 ARM    Placebo      AGEGR1   <65            n         n          14           #>  4 ARM    Placebo      AGEGR1   <65            p         %          0.162790697… #>  5 ARM    Placebo      AGEGR1   >80            n         n          30           #>  6 ARM    Placebo      AGEGR1   >80            p         %          0.348837209… #>  7 ARM    Placebo      AGEGR1   NA             N         N          86           #>  8 ARM    Placebo      AGEGR1   NA             N_obs     N_obs      86           #>  9 ARM    Placebo      AGEGR1   NA             N_miss    N_miss     0            #> 10 ARM    Placebo      AGEGR1   NA             N_nonmiss N_nonmiss  86           #> # ℹ 26 more rows #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison ARD Statistics — ard_comparison","title":"Comparison ARD Statistics — ard_comparison","text":"ARD functions comparing values groups. ard_ttest() -> t.test(data[[variable]] ~ data[[]], ...) ard_wilcoxtest() -> wilcox.test(data[[variable]] ~ data[[]], ...) ard_chisqtest() -> chisq.test(x = data[[variable]], y = data[[]], ...) ard_fishertest() -> fisher.test(x = data[[variable]], y = data[[]], ...)","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ard_ttest(data, by, variable, ...)  ard_wilcoxtest(data, by, variable, ...)  ard_chisqtest(data, by, variable, ...)  ard_fishertest(data, by, variable, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison ARD Statistics — ard_comparison","text":"data data frame character column name compare variable character column name compared ... arguments passed method.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison ARD Statistics — ard_comparison","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparison ARD Statistics — ard_comparison","text":"","code":"ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_ttest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 14 × 7 #>    group1 group1_level         variable stat_name   statistic      warning error #>    <chr>  <chr>                <chr>    <chr>       <chr>          <chr>   <chr> #>  1 ARM    Placebo              AGE      estimate1   75.2093023255… NA      NA    #>  2 ARM    Xanomeline High Dose AGE      estimate2   74.3809523809… NA      NA    #>  3 ARM    NA                   AGE      estimate    0.82834994462… NA      NA    #>  4 ARM    NA                   AGE      statistic   0.65519635179… NA      NA    #>  5 ARM    NA                   AGE      p.value     0.51324088836… NA      NA    #>  6 ARM    NA                   AGE      parameter   167.362493715… NA      NA    #>  7 ARM    NA                   AGE      conf.low    -1.6676367646… NA      NA    #>  8 ARM    NA                   AGE      conf.high   3.32433665393… NA      NA    #>  9 ARM    NA                   AGE      method      Welch Two Sam… NA      NA    #> 10 ARM    NA                   AGE      alternative two.sided      NA      NA    #> 11 ARM    NA                   AGE      mu          0              NA      NA    #> 12 ARM    NA                   AGE      paired      FALSE          NA      NA    #> 13 ARM    NA                   AGE      var.equal   FALSE          NA      NA    #> 14 ARM    NA                   AGE      conf.level  0.95           NA      NA     ADSL |>   dplyr::filter(ARM %in% c(\"Placebo\", \"Xanomeline High Dose\")) |>   ard_wilcoxtest(by = \"ARM\", variable = \"AGE\") |>   flatten_ard() #> # A tibble: 12 × 6 #>    group1 variable stat_name   statistic                           warning error #>    <chr>  <chr>    <chr>       <chr>                               <chr>   <chr> #>  1 ARM    AGE      statistic   3862.5                              NA      NA    #>  2 ARM    AGE      p.value     0.43546374886656                    NA      NA    #>  3 ARM    AGE      method      Wilcoxon rank sum test with contin… NA      NA    #>  4 ARM    AGE      alternative two.sided                           NA      NA    #>  5 ARM    AGE      mu          0                                   NA      NA    #>  6 ARM    AGE      paired      FALSE                               NA      NA    #>  7 ARM    AGE      exact       NA                                  NA      NA    #>  8 ARM    AGE      correct     TRUE                                NA      NA    #>  9 ARM    AGE      conf.int    FALSE                               NA      NA    #> 10 ARM    AGE      conf.level  0.95                                NA      NA    #> 11 ARM    AGE      tol.root    1e-04                               NA      NA    #> 12 ARM    AGE      digits.rank Inf                                 NA      NA     ADSL |>   ard_chisqtest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 9 × 6 #>   group1 variable stat_name        statistic    warning error #>   <chr>  <chr>    <chr>            <named list> <chr>   <chr> #> 1 ARM    AGEGR1   statistic        <dbl [1]>    NA      NA    #> 2 ARM    AGEGR1   p.value          <dbl [1]>    NA      NA    #> 3 ARM    AGEGR1   parameter        <int [1]>    NA      NA    #> 4 ARM    AGEGR1   method           <chr [1]>    NA      NA    #> 5 ARM    AGEGR1   correct          <lgl [1]>    NA      NA    #> 6 ARM    AGEGR1   p                <language>   NA      NA    #> 7 ARM    AGEGR1   rescale.p        <lgl [1]>    NA      NA    #> 8 ARM    AGEGR1   simulate.p.value <lgl [1]>    NA      NA    #> 9 ARM    AGEGR1   B                <dbl [1]>    NA      NA     ADSL[1:30,] |>   ard_fishertest(by = \"ARM\", variable = \"AGEGR1\") |>   flatten_ard() #> # A tibble: 12 × 6 #>    group1 variable stat_name        statistic    warning error #>    <chr>  <chr>    <chr>            <named list> <chr>   <chr> #>  1 ARM    AGEGR1   p.value          <dbl [1]>    NA      NA    #>  2 ARM    AGEGR1   method           <chr [1]>    NA      NA    #>  3 ARM    AGEGR1   alternative      <chr [1]>    NA      NA    #>  4 ARM    AGEGR1   workspace        <dbl [1]>    NA      NA    #>  5 ARM    AGEGR1   hybrid           <lgl [1]>    NA      NA    #>  6 ARM    AGEGR1   hybridPars       <language>   NA      NA    #>  7 ARM    AGEGR1   control          <language>   NA      NA    #>  8 ARM    AGEGR1   or               <dbl [1]>    NA      NA    #>  9 ARM    AGEGR1   conf.int         <lgl [1]>    NA      NA    #> 10 ARM    AGEGR1   conf.level       <dbl [1]>    NA      NA    #> 11 ARM    AGEGR1   simulate.p.value <lgl [1]>    NA      NA    #> 12 ARM    AGEGR1   B                <dbl [1]>    NA      NA"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous ARD Statistics — ard_continuous","title":"Continuous ARD Statistics — ard_continuous","text":"Compute Analysis Results Data (ARD) simple continuous summary statistics.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(   data,   variables,   by = NULL,   strata = NULL,   statistics = everything() ~ continuous_variable_summary_fns() )"},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous ARD Statistics — ard_continuous","text":"data data frame variables columns include summaries. , strata columns /stratified summary statistic calculation. Arguments similar, important distinction: : results calculated combinations columns specified, including unobserved combinations unobserved factor levels. strata: results calculated observed combinations columns specified. Arguments may used conjunction one another. statistics named list functions, list formulas, single formula list element function (RHS formula), e.g. list(mpg = list(mean = \\(x) mean(x))). value assigned variable must also named list, names used reference function element function object. Typically, function return scalar statistic, function returns named list results also acceptable, e.g. list(conf.low = -1, conf.high = 1). However, errors occur, messaging less clear setting. See selecting_syntax help file details.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous ARD Statistics — ard_continuous","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous ARD Statistics — ard_continuous","text":"","code":"ard_continuous(ADSL, by = \"ARM\", variables = \"AGE\") |>   flatten_ard() #> # A tibble: 39 × 8 #>    group1 group1_level variable stat_name stat_label     statistic warning error #>    <chr>  <chr>        <chr>    <chr>     <chr>          <chr>     <chr>   <chr> #>  1 ARM    Placebo      AGE      N         N              86        NA      NA    #>  2 ARM    Placebo      AGE      mean      Mean           75.20930… NA      NA    #>  3 ARM    Placebo      AGE      sd        SD             8.590167… NA      NA    #>  4 ARM    Placebo      AGE      median    Median         76        NA      NA    #>  5 ARM    Placebo      AGE      p25       25th Percenti… 69.25     NA      NA    #>  6 ARM    Placebo      AGE      p75       75th Percenti… 81.75     NA      NA    #>  7 ARM    Placebo      AGE      min       Min            52        NA      NA    #>  8 ARM    Placebo      AGE      max       Max            89        NA      NA    #>  9 ARM    Placebo      AGE      N_obs     N_obs          86        NA      NA    #> 10 ARM    Placebo      AGE      N_miss    N_miss         0         NA      NA    #> # ℹ 29 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Crosstab — ard_crosstab","title":"ARD Crosstab — ard_crosstab","text":"Similar ard_categorical() except percentages N statistics based entire data set, rather stratified columns.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Crosstab — ard_crosstab","text":"","code":"ard_crosstab(data, variables, by)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Crosstab — ard_crosstab","text":"data data frame variables columns include summaries. Default everything(). columns compute statistics .","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Crosstab — ard_crosstab","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Crosstab — ard_crosstab","text":"","code":"ard_crosstab(ADSL, variables = \"AGEGR1\", by = \"ARM\") #> # A tibble: 21 × 11 #>    group1 group1_level variable variable_level context  stat_name stat_label #>    <chr>  <list>       <chr>    <list>         <chr>    <chr>     <chr>      #>  1 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab n         n          #>  2 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab p         %          #>  3 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab n         n          #>  4 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab p         %          #>  5 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab n         n          #>  6 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab p         %          #>  7 ARM    <chr [1]>    AGEGR1   <NULL>         crosstab N         N          #>  8 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab n         n          #>  9 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab p         %          #> 10 ARM    <chr [1]>    AGEGR1   <chr [1]>      crosstab n         n          #> # ℹ 11 more rows #> # ℹ 4 more variables: statistic <list>, statistic_fmt_fn <list>, #> #   warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression ARD — ard_regression","title":"Regression ARD — ard_regression","text":"Function takes regression model object converts ARD structure using broom.helpers package.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression ARD — ard_regression","text":"","code":"ard_regression(model, tidy_fun = NULL, ...)"},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regression ARD — ard_regression","text":"model regression model object tidy_fun tidier. Default broom.helpers::tidy_with_broom_or_parameters ... Arguments passed broom.helpers::tidy_plus_plus()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regression ARD — ard_regression","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/ard_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regression ARD — ard_regression","text":"","code":"lm(AGE ~ ARM, data = ADSL) |>   ard_regression(add_estimate_to_reference_rows = TRUE) |>   flatten_ard() #> # A tibble: 48 × 4 #>    variable variable_level stat_name      statistic                  #>    <chr>    <chr>          <chr>          <chr>                      #>  1 ARM      Placebo        term           ARMPlacebo                 #>  2 ARM      Placebo        var_label      Description of Planned Arm #>  3 ARM      Placebo        var_class      character                  #>  4 ARM      Placebo        var_type       categorical                #>  5 ARM      Placebo        var_nlevels    3                          #>  6 ARM      Placebo        contrasts      contr.treatment            #>  7 ARM      Placebo        contrasts_type treatment                  #>  8 ARM      Placebo        reference_row  TRUE                       #>  9 ARM      Placebo        label          Placebo                    #> 10 ARM      Placebo        n_obs          86                         #> # ℹ 38 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD as Nested List — as_nested_list","title":"ARD as Nested List — as_nested_list","text":"Convert ARDs Nested Lists","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD as Nested List — as_nested_list","text":"","code":"as_nested_list(x)"},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD as Nested List — as_nested_list","text":"x ARD","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD as Nested List — as_nested_list","text":"nested list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/as_nested_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD as Nested List — as_nested_list","text":"","code":"ard_continuous(mtcars, by = \"cyl\", variables = c(\"mpg\", \"hp\")) |>   as_nested_list() #> $variable #> $variable$mpg #> $variable$mpg$group1 #> $variable$mpg$group1$cyl #> $variable$mpg$group1$cyl$group1_level #> $variable$mpg$group1$cyl$group1_level$`4` #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 26.66364 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"27\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 4.509828 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"5\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 26 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"26\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 22.8 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"23\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 30.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"30\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"21\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 33.9 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"34\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$statistic #> [1] 11 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$statistic_fmt #> [1] \"11\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6` #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 19.74286 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"20\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 1.453567 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"1\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 19.7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"20\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 18.65 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"19\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 21 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"21\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 17.8 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"18\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 21.4 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"21\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$statistic #> [1] 7 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$statistic_fmt #> [1] \"7\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8` #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 15.1 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"15\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 2.560048 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"3\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 15.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"15\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 14.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 16.25 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"16\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 10.4 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"10\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 19.2 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"19\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$statistic #> [1] 14 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$statistic_fmt #> [1] \"14\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$mpg$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #> $variable$hp #> $variable$hp$group1 #> $variable$hp$group1$cyl #> $variable$hp$group1$cyl$group1_level #> $variable$hp$group1$cyl$group1_level$`4` #> $variable$hp$group1$cyl$group1_level$`4`$stat_name #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic #> [1] 82.63636 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$statistic_fmt #> [1] \"83\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic #> [1] 20.93453 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$statistic_fmt #> [1] \"21\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic #> [1] 91 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$statistic_fmt #> [1] \"91\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic #> [1] 65.5 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$statistic_fmt #> [1] \"66\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic #> [1] 96 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$statistic_fmt #> [1] \"96\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic #> [1] 52 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$statistic_fmt #> [1] \"52\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic #> [1] 113 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$statistic_fmt #> [1] \"113\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$statistic #> [1] 11 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$statistic_fmt #> [1] \"11\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`4`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`6` #> $variable$hp$group1$cyl$group1_level$`6`$stat_name #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic #> [1] 122.2857 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$statistic_fmt #> [1] \"122\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic #> [1] 24.26049 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$statistic_fmt #> [1] \"24\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$statistic_fmt #> [1] \"110\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic #> [1] 110 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$statistic_fmt #> [1] \"110\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic #> [1] 123 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$statistic_fmt #> [1] \"123\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic #> [1] 105 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$statistic_fmt #> [1] \"105\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic #> [1] 175 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$statistic_fmt #> [1] \"175\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$statistic #> [1] 7 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$statistic_fmt #> [1] \"7\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`6`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #> $variable$hp$group1$cyl$group1_level$`8` #> $variable$hp$group1$cyl$group1_level$`8`$stat_name #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic #> [1] 209.2143 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$statistic_fmt #> [1] \"209\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$mean$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic #> [1] 50.97689 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$statistic_fmt #> [1] \"51\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$sd$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic #> [1] 192.5 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$statistic_fmt #> [1] \"192\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$median$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic #> [1] 176.25 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$statistic_fmt #> [1] \"176\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p25$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75 #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic #> [1] 241.25 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$statistic_fmt #> [1] \"241\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p75$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic #> [1] 150 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$statistic_fmt #> [1] \"150\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$min$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic #> [1] 335 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$statistic_fmt #> [1] \"335\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$max$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_obs$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$statistic #> [1] 14 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$statistic_fmt #> [1] \"14\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$N_nonmiss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss$statistic #> [1] 0 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss$statistic_fmt #> [1] \"0\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_miss$context #> [1] \"continuous\" #>  #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$statistic #> [1] 1 #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$statistic_fmt #> [1] \"1\" #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$warning #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$error #> NULL #>  #> $variable$hp$group1$cyl$group1_level$`8`$stat_name$p_nonmiss$context #> [1] \"continuous\" #>  #>  #>  #>  #>  #>  #>  #>  #>"},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cards: CDISC Analysis Results Data — cards-package","title":"cards: CDISC Analysis Results Data — cards-package","text":"package constructs CDISC-compliant Analysis Results Data objects. objects used (re-used) construct summary tables, visualizations, written reports. results may also represented JSON YAML objects.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/cards/reference/cards-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cards: CDISC Analysis Results Data — cards-package","text":"Maintainer: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID) contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class — check_class","title":"Check Class — check_class","text":"Check Class","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class — check_class","text":"","code":"check_class(class, ..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class — check_class","text":"class character vector string indicating accepted classes. Passed inherits(=class) ... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Class Data Frame — check_class_data_frame","title":"Check Class Data Frame — check_class_data_frame","text":"Check Class Data Frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Class Data Frame — check_class_data_frame","text":"","code":"check_class_data_frame(..., allow_null = FALSE, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_class_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Class Data Frame — check_class_data_frame","text":"... named arguments, e.g. data = data. name used error messaging passed object's class checked. allow_null Logical indicating whether NULL value pass test. Default FALSE call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Columns in Data Frame — check_columns_in_data_frame","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"Check Columns Data Frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"","code":"check_columns_in_data_frame(   data,   columns,   msg = \"Columns {.val {missing_cols}} not found in {.arg data}.\",   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/check_columns_in_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Columns in Data Frame — check_columns_in_data_frame","text":"data data frame columns character vector column names check msg string passed cli::cli_abort(message=) call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Length — check_length","title":"Check Length — check_length","text":"Check Length","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Length — check_length","text":"","code":"check_length(   x,   arg_name,   length = 1L,   msg = \"The {.arg by} argument must be length {.val {length}}.\",   call = parent.frame() )"},{"path":"https://insightsengineering.github.io/cards/reference/check_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Length — check_length","text":"x object check length integer specifying required length msg string passed cli::cli_abort(message=)","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Argument not Missing — check_not_missing","title":"Check Argument not Missing — check_not_missing","text":"Check Argument Missing","code":""},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Argument not Missing — check_not_missing","text":"","code":"check_not_missing(x, arg_name, call = parent.frame())"},{"path":"https://insightsengineering.github.io/cards/reference/check_not_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Argument not Missing — check_not_missing","text":"x argument check arg_name string indicating name argument. Used error messaging. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/continuous_variable_summary_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Continuous Summary Functions — continuous_variable_summary_fns","title":"List of Continuous Summary Functions — continuous_variable_summary_fns","text":"Returns list univariate summary functions. functions include slight modifications base equivalents. example, min() max() functions return NA instead Inf empty vector passed.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/continuous_variable_summary_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Continuous Summary Functions — continuous_variable_summary_fns","text":"","code":"continuous_variable_summary_fns(summaries = NULL)"},{"path":"https://insightsengineering.github.io/cards/reference/continuous_variable_summary_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of Continuous Summary Functions — continuous_variable_summary_fns","text":"summaries character vector functions include output. Default NULL, selects summary functions. Select one 'N', 'mean', 'sd', 'median', 'p25', 'p75', 'min', 'max'.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/continuous_variable_summary_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of Continuous Summary Functions — continuous_variable_summary_fns","text":"named list summary functions","code":""},{"path":"https://insightsengineering.github.io/cards/reference/continuous_variable_summary_fns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Continuous Summary Functions — continuous_variable_summary_fns","text":"","code":"continuous_variable_summary_fns(c(\"N\", \"median\")) #> $N #> function (x)  #> length(x) #> <bytecode: 0x5601ad2048c0> #> <environment: 0x5601a82facf0> #>  #> $median #> function (x)  #> stats::median(x, na.rm = TRUE) #> <bytecode: 0x5601ad204380> #> <environment: 0x5601a82facf0> #>"},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate and Capture Conditions — eval_capture_conditions","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"Evaluates expression also capturing error warning conditions. Function always returns named list list(result=, warning=, error=). errors warnings, elements NULL. error, result element NULL. Messages neither saved printed console. Evaluation done via rlang::eval_tidy().","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"eval_capture_conditions(expr, data = NULL, env = rlang::caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"expr expression quosure evaluate. data data frame, named list vector. Alternatively, data mask created as_data_mask() new_data_mask(). Objects data priority env. See section data masking. env environment evaluate expr. environment applicable quosures environments.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"named list","code":""},{"path":"https://insightsengineering.github.io/cards/reference/eval_capture_conditions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate and Capture Conditions — eval_capture_conditions","text":"","code":"# function executes without error or warning eval_capture_conditions(letters[1:2]) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>   # an error is thrown eval_capture_conditions(stop(\"Example Error!\")) #> $result #> NULL #>  #> $warning #> NULL #>  #> $error #> [1] \"Example Error!\" #>   # if more than one warning is returned, all are saved eval_capture_conditions({warning(\"Warning 1\"); warning(\"Warning 2\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> [1] \"Warning 1\" \"Warning 2\" #>  #> $error #> NULL #>   # messages are not printed to the console eval_capture_conditions({message(\"A message!\"); letters[1:2]}) #> $result #> [1] \"a\" \"b\" #>  #> $warning #> NULL #>  #> $error #> NULL #>"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten ARD — flatten_ard","title":"Flatten ARD — flatten_ard","text":"function ingests ARD object flattens readable print data. FUNCTION NEED UPDATES FLAVORS ARD MAY BECOME COMPLEX. List columns converted character vectors. list column contains elements easily coerced character vector, function fail.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten ARD — flatten_ard","text":"","code":"flatten_ard(x)"},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten ARD — flatten_ard","text":"x ARD object","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten ARD — flatten_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/flatten_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten ARD — flatten_ard","text":"","code":"ard_categorical(mtcars, by = \"cyl\", variables = c(\"am\", \"gear\")) |>   flatten_ard() #> # A tibble: 66 × 9 #>    group1 group1_level variable variable_level stat_name stat_label statistic    #>    <chr>  <chr>        <chr>    <chr>          <chr>     <chr>      <chr>        #>  1 cyl    4            am       0              n         n          3            #>  2 cyl    4            am       0              p         %          0.272727272… #>  3 cyl    4            am       1              n         n          8            #>  4 cyl    4            am       1              p         %          0.727272727… #>  5 cyl    4            am       NA             N         N          11           #>  6 cyl    4            am       NA             N_obs     N_obs      11           #>  7 cyl    4            am       NA             N_miss    N_miss     0            #>  8 cyl    4            am       NA             N_nonmiss N_nonmiss  11           #>  9 cyl    4            am       NA             p_miss    p_miss     0            #> 10 cyl    4            am       NA             p_nonmiss p_nonmiss  1            #> # ℹ 56 more rows #> # ℹ 2 more variables: warning <chr>, error <chr>"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Nesting — nest_for_ard","title":"ARD Nesting — nest_for_ard","text":"function similar tidyr::nest(), except retains rows unobserved combinations (unobserved factor levels) variables, unobserved combinations stratifying variables. levels wrapped lists can stacked types different classes.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data,   by = NULL,   strata = NULL,   key = \"data\",   rename_columns = TRUE,   list_columns = TRUE )"},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ARD Nesting — nest_for_ard","text":"data data frame , strata columns nest /stratified . Arguments similar, important distinction: : data frame nested combinations columns specified, including unobserved combinations unobserved factor levels. strata: data frame nested observed combinations columns specified. Arguments may used conjunction one another. key name new column nested data frame. Default \"data\" rename_columns logical indicating whether rename strata variables. Default TRUE list_columns logical indicating whether put levels strata columns list. Default TRUE","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Nesting — nest_for_ard","text":"nested data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/nest_for_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Nesting — nest_for_ard","text":"","code":"nest_for_ard(   data =     ADAE |>       dplyr::left_join(ADSL[c(\"USUBJID\", \"ARM\")], by = \"USUBJID\") |>       dplyr::filter(AOCCSFL %in% \"Y\"),   by = \"ARM\",   strata = \"AESOC\" ) #> # A tibble: 69 × 5 #>    group1 group1_level group2 group2_level data               #>    <chr>  <list>       <chr>  <list>       <list>             #>  1 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [12 × 54]> #>  2 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [15 × 54]> #>  3 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [13 × 54]> #>  4 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [0 × 54]>  #>  5 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #>  6 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  7 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  8 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [1 × 54]>  #>  9 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> 10 ARM    <chr [1]>    AESOC  <chr [1]>    <tibble [2 × 54]>  #> # ℹ 59 more rows"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Process tidyselectors — process_selectors","title":"Process tidyselectors — process_selectors","text":"Functions processes tidyselect arguments passed functions cards package. processed values saved calling environment, default. process_selectors(): arguments processed tidyselect converted vector character column names. process_formula_selectors(): arguments expect named lists lists formulas (LHS formula tidyselector). function processes inputs returns named list. name repeated, last entry kept. compute_formula_selector(): used process_formula_selectors() evaluate single argument. check_list_elements(): accepts named arguments name list exists env, argument value predicate function used values list.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process tidyselectors — process_selectors","text":"","code":"process_selectors(data, ..., env = rlang::caller_env())  process_formula_selectors(data, ..., env = rlang::caller_env())  compute_formula_selector(data, x, arg_name = \"\", env = rlang::caller_env())  check_list_elements(..., error_msg = list(), env = rlang::caller_env())"},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process tidyselectors — process_selectors","text":"data data frame ... named arguments value argument processed tidyselect. process_selectors(): values tidyselect-compatible selectors process_formula_selectors(): values named lists, list formulas combination , single formula. Users may pass ~value shortcut everything() ~ value. check_list_elements(): named arguments name matches existing list env environment, value predicate function test element list, e.g. element must string function. env env save results . Default calling environment. x named list, list formulas, single formula converted named list. arg_name string argument named processed. Used error messaging. error_msg named list list elements strings used error messaging mis-specified arguments passed. Elements \"{arg_name}\" \"{variable}\" available using glue syntax messaging.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/process_selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process tidyselectors — process_selectors","text":"","code":"example_env <- rlang::new_environment()  process_selectors(ADSL, variables = starts_with(\"TRT\"), env = example_env) get(x = \"variables\", envir = example_env) #> [1] \"TRT01P\"  \"TRT01PN\" \"TRT01A\"  \"TRT01AN\" \"TRTSDT\"  \"TRTEDT\"  \"TRTDUR\"    process_formula_selectors(   ADSL,   statistics = list(starts_with(\"TRT\") ~ mean, TRTSDT = min),   env = example_env ) get(x = \"statistics\", envir = example_env) #> $TRT01P #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRT01PN #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRT01A #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRTSDT #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRTEDT #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRTDUR #> function (x, ...)  #> UseMethod(\"mean\") #> <bytecode: 0x56019e8a24a8> #> <environment: namespace:base> #>  #> $TRTSDT #> function (..., na.rm = FALSE)  .Primitive(\"min\") #>"},{"path":"https://insightsengineering.github.io/cards/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, num_range, one_of, starts_with, vars","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selecting_syntax.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting Syntax — selecting_syntax","title":"Selecting Syntax — selecting_syntax","text":"Selecting Syntax","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selecting_syntax.html","id":"selectors","dir":"Reference","previous_headings":"","what":"Selectors","title":"Selecting Syntax — selecting_syntax","text":"cards package also utilizes selectors: selectors tidyselect package custom selectors. Review help files details. tidy selectors everything(), all_of(), any_of(), starts_with(), ends_with(), contains(), matches(), num_range(), last_col() cards selectors all_ard_groups(), all_ard_variables()","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selecting_syntax.html","id":"formula-and-list-selectors","dir":"Reference","previous_headings":"","what":"Formula and List Selectors","title":"Selecting Syntax — selecting_syntax","text":"arguments cards package accept list formula notation, e.g. ard_continuous(statistic=). enumerates tips shortcuts using list formulas. List Formulas Typical usage includes list formulas, LHS variable name selector.   Named List may also pass named list; however, tidyselect selectors supported syntax.   Hybrid Named List/List Formulas Pass combination formulas named elements   Shortcuts can pass single formula, equivalent passing formula list.   shortcut select variables, can omit LHS formula. two calls equivalent.   Combination Selectors Selectors can combined using c() function.","code":"ard_continuous(statistics = list(age ~ list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)))) ard_continuous(statistics = list(age = list(N = \\(x) length(x)), starts_with(\"a\") ~ list(mean = mean))) ard_continuous(statistics = starts_with(\"a\") ~ list(mean = mean) ard_continuous(statistics = ~list(N = \\(x) length(x))) ard_continuous(statistics = everything() ~ list(N = \\(x) length(x))) ard_continuous(statistics = c(everything(), -age) ~ list(N = \\(x) length(x)))"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":null,"dir":"Reference","previous_headings":"","what":"ARD Selectors — selectors","title":"ARD Selectors — selectors","text":"selection helpers match variables according given pattern. all_ard_groups(): Use function dplyr selecting environments, dplyr::select(). Function selects grouping columns, e.g. columns named \"group##\" \"group##_level\". all_ard_variables(): Use function dplyr selecting environments, dplyr::select(). Function selects variables columns, e.g. columns named \"variable\" \"variable_level\".","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ARD Selectors — selectors","text":"","code":"all_ard_groups()  all_ard_variables()"},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ARD Selectors — selectors","text":"tidyselect output","code":""},{"path":"https://insightsengineering.github.io/cards/reference/selectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ARD Selectors — selectors","text":"","code":"ard <- ard_categorical(ADSL, by = \"ARM\", variables = \"AGEGR1\")  get_ard_statistics(ard, group1_level %in% \"Placebo\", variable_level %in% \"65-80\") #> $n #> [1] 42 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>  #> $p #> [1] 0.4883721 #> attr(,\"stat_label\") #> [1] \"ARM\" #> attr(,\"statistic_fmt_fn\") #> [1] \"Placebo\" #> attr(,\"warning\") #> [1] \"AGEGR1\" #> attr(,\"error\") #> [1] \"65-80\" #>"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Column Order of ARD — tidy_ard_column_order","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"Relocate columns ARD standard order.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"tidy_ard_column_order(x)"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"x data frame class 'card'","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_ard_column_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Column Order of ARD — tidy_ard_column_order","text":"","code":"ard <-   dplyr::bind_rows(     ard_continuous(mtcars, variables = \"mpg\"),     ard_continuous(mtcars, variables = \"mpg\", by = \"cyl\")   ) names(ard) #>  [1] \"variable\"         \"context\"          \"stat_name\"        \"stat_label\"       #>  [5] \"statistic\"        \"statistic_fmt_fn\" \"warning\"          \"error\"            #>  [9] \"group1\"           \"group1_level\"      tidy_ard_column_order(ard) #> # A tibble: 52 × 10 #>    group1 group1_level variable context    stat_name stat_label      statistic #>    <chr>  <list>       <chr>    <chr>      <chr>     <chr>           <list>    #>  1 NA     <NULL>       mpg      continuous N         N               <int [1]> #>  2 NA     <NULL>       mpg      continuous mean      Mean            <dbl [1]> #>  3 NA     <NULL>       mpg      continuous sd        SD              <dbl [1]> #>  4 NA     <NULL>       mpg      continuous median    Median          <dbl [1]> #>  5 NA     <NULL>       mpg      continuous p25       25th Percentile <dbl [1]> #>  6 NA     <NULL>       mpg      continuous p75       75th Percentile <dbl [1]> #>  7 NA     <NULL>       mpg      continuous min       Min             <dbl [1]> #>  8 NA     <NULL>       mpg      continuous max       Max             <dbl [1]> #>  9 NA     <NULL>       mpg      continuous N_obs     N_obs           <int [1]> #> 10 NA     <NULL>       mpg      continuous N_miss    N_miss          <int [1]> #> # ℹ 42 more rows #> # ℹ 3 more variables: statistic_fmt_fn <list>, warning <list>, error <list>"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":null,"dir":"Reference","previous_headings":"","what":"Build ARD from tidier — tidy_as_ard","title":"Build ARD from tidier — tidy_as_ard","text":"Function converts model's one-row tidy data frame ARD structure. tidied data frame must constructed eval_capture_conditions(). function primarily developers consistency checks included.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"tidy_as_ard(   lst_tidy,   tidy_result_names,   fun_args_to_record,   formals = list(),   passed_args = list(),   lst_ard_columns )"},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build ARD from tidier — tidy_as_ard","text":"lst_tidy list tidied results constructed eval_capture_conditions(), e.g. eval_capture_conditions(t.test(mtcars$mpg ~ mtcars$) |> broom::tidy()) tidy_result_names character vector column names expected tidier method. used construct blank results event error. fun_args_to_record character vector function argument names added ARD. formals results formals(), e.g. formals(fisher.test). used get default argument values unspecified arguments. passed_args named list additional arguments passed modeling function. lst_ard_columns named list values added ARD data frame.","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build ARD from tidier — tidy_as_ard","text":"data frame","code":""},{"path":"https://insightsengineering.github.io/cards/reference/tidy_as_ard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build ARD from tidier — tidy_as_ard","text":"","code":"# example how one may create a fisher.test() ARD function my_ard_fishertest <- function(data, by, variable, ...) {   # perform fisher test and format results -----------------------------------   lst_tidy_fisher <-     eval_capture_conditions(       stats::fisher.test(x = data[[variable]], y = data[[by]], ...) |>         broom::tidy()     )    # build ARD ------------------------------------------------------------------   tidy_as_ard(     lst_tidy = lst_tidy_fisher,     tidy_result_names =       c(\"estimate\", \"p.value\", \"conf.low\", \"conf.high\", \"method\", \"alternative\"),     fun_args_to_record =       c(\"workspace\", \"hybrid\", \"hybridPars\", \"control\", \"or\",         \"conf.int\", \"conf.level\", \"simulate.p.value\", \"B\"),     formals = formals(stats::fisher.test),     passed_args = rlang::dots_list(...),     lst_ard_columns = list(group1 = by, variable = variable, context = \"fishertest\")   ) }  my_ard_fishertest(mtcars, by = \"am\", variable = \"vs\") #> # A tibble: 15 × 7 #>    group1 variable context    stat_name        statistic    warning      error   #>  * <chr>  <chr>    <chr>      <chr>            <named list> <named list> <named> #>  1 am     vs       fishertest estimate         <dbl [1]>    <NULL>       <NULL>  #>  2 am     vs       fishertest p.value          <dbl [1]>    <NULL>       <NULL>  #>  3 am     vs       fishertest conf.low         <dbl [1]>    <NULL>       <NULL>  #>  4 am     vs       fishertest conf.high        <dbl [1]>    <NULL>       <NULL>  #>  5 am     vs       fishertest method           <chr [1]>    <NULL>       <NULL>  #>  6 am     vs       fishertest alternative      <chr [1]>    <NULL>       <NULL>  #>  7 am     vs       fishertest workspace        <dbl [1]>    <NULL>       <NULL>  #>  8 am     vs       fishertest hybrid           <lgl [1]>    <NULL>       <NULL>  #>  9 am     vs       fishertest hybridPars       <language>   <NULL>       <NULL>  #> 10 am     vs       fishertest control          <language>   <NULL>       <NULL>  #> 11 am     vs       fishertest or               <dbl [1]>    <NULL>       <NULL>  #> 12 am     vs       fishertest conf.int         <lgl [1]>    <NULL>       <NULL>  #> 13 am     vs       fishertest conf.level       <dbl [1]>    <NULL>       <NULL>  #> 14 am     vs       fishertest simulate.p.value <lgl [1]>    <NULL>       <NULL>  #> 15 am     vs       fishertest B                <dbl [1]>    <NULL>       <NULL>"}]
