% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_ard_hierarchical.R
\name{filter_ard_hierarchical}
\alias{filter_ard_hierarchical}
\title{Filter Stacked Hierarchical ARDs}
\usage{
filter_ard_hierarchical(x, filter)
}
\arguments{
\item{x}{(\code{card})\cr
a stacked hierarchical ARD of class \code{'card'} created using \code{\link[=ard_stack_hierarchical]{ard_stack_hierarchical()}}.}

\item{filter}{(\code{expression})\cr
an expression that is used to filter variable groups of the hierarchical ARD. See the Details section below.}
}
\value{
an ARD data frame of class 'card'
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}\cr

This function is used to filter stacked hierarchical ARDs.

For the purposes of this function, we define a "variable group" as a combination of ARD rows grouped by the
combination of all their variable levels, but excluding any \code{by} variables.
}
\details{
The \code{filter} argument can be used to filter out variable groups of a hierarchical ARD which do not meet the
requirements provided as an expression. Variable groups can be filtered on the values of any of the possible
statistics (\code{n}, \code{p}, and \code{N}) provided they are included at least once in the ARD, as well as the values of any
\code{by} variables. For each variable group that does not meet the filtering requirement, all statistics (rows)
corresponding to that group will be removed from the ARD. In addition to filtering on individual statistic values,
filters can be applied across the variable group (i.e. across all \code{by} variable values) by using aggregate functions
such as \code{sum()} and \code{mean()}. Filtering is only applied to variable groups that correspond to the innermost variable
in the hierarchy -- all outer (summary) variable groups will be kept.

For example, consider an ARD created using \code{\link[=ard_stack_hierarchical]{ard_stack_hierarchical()}} with \code{variables = c(AESOC, AEDECOD)} and
\code{by = ARM} to summarize adverse events (AEs) by system organ class (SOC) in each treatment arm. Each
"variable group" will be comprised of all rows corresponding to a unique SOC/AE combination in any treatment arm. If
a filter of \code{n > 3} is applied, each variable group will be checked for at least one row that corresponds to the
\code{n} statistic and has a value greater than 3, and if any row satisfies the filter condition then all rows from the
variable group (i.e. all statistics & treatment groups) will be retained in the ARD. Any overall or "outer" variable
groups that count \emph{all} AEs corresponding to a unique SOC are kept whether or not the filter condition is met within
the variable group.

If data for overall statistics is present in the ARD (\code{ard_stack_hierarchical(overall=TRUE)}), this data will not be
used in any filters (i.e. \code{sum(n)} will not include the overall \code{n} in a given group). To filter on overall
statistics use the \code{sum()} function in your filter instead (i.e. \code{sum(n)} is equal to the "overall" \code{n} across any
\code{by} variables).

If no \code{by} variables were used (i.e. \code{ard_stack_hierarchical(by=NULL)}), the only grouping performed prior to
filtering will be grouping all statistics together for each combination of variable levels, i.e. filters will be
applied independently to each combination of variable levels. Using the previous example of an ARD of AEs by SOC,
if \code{by=NULL} then each "variable group" will contain all rows corresponding to a unique SOC/AE combination.

Some examples of possible filters:
\itemize{
\item \code{filter = n > 5} - keep AEs from variable groups where at least one level in the group has more than 3 AEs observed
\item \code{filter = n == 2 & p < 0.05} - keep AEs from variable groups where at least one level in the group has exactly 2
AEs observed \emph{and} at least one level in the variable group has a prevalence of less than 5\%
\item \code{filter = sum(n) >= 4} - keep AEs from variable groups where at least 4 AEs are observed across the group
\item \code{filter = mean(n) > 4 | n > 3} - keep AEs from variable groups where an average of least 4 AEs is observed across
the levels of the group \emph{or} at least one level in the variable group has more than 3 AEs observed
\item \code{filter = any(n > 2 & TRTA == "Xanomeline High Dose")} - keep AEs from variable groups where more than 2 AEs
are observed in a record from the variable group where the \code{by} variable is \code{TRTA} and the level of \code{TRTA} is
\code{"Xanomeline High Dose"}.
}
}
\examples{
\dontshow{if ((identical(Sys.getenv("NOT_CRAN"), "true") || identical(Sys.getenv("IN_PKGDOWN"), "true"))) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# create a base AE ARD
ard <- ard_stack_hierarchical(
  ADAE,
  variables = c(AESOC, AEDECOD),
  by = TRTA,
  denominator = ADSL |> dplyr::rename(TRTA = ARM),
  id = USUBJID
)

# Example 1 ----------------------------------
# Keep AEs from TRTA groups where more than 3 AEs are observed across the group
filter_ard_hierarchical(ard, sum(n) > 3)

# Example 2 ----------------------------------
# Keep AEs where at least one level in the TRTA group has more than 3 AEs observed
filter_ard_hierarchical(ard, n > 3)

# Example 3 ----------------------------------
# Keep AEs that have an overall prevalence of greater than 5\%
filter_ard_hierarchical(ard, sum(n) / sum(N) > 0.05)
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=sort_ard_hierarchical]{sort_ard_hierarchical()}}
}
