% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ard_stack_hierarchical.R
\name{ard_stack_hierarchical}
\alias{ard_stack_hierarchical}
\alias{ard_stack_hierarchical_count}
\title{Stacked Hierarchical ARD Statistics}
\usage{
ard_stack_hierarchical(
  data,
  variables,
  by = dplyr::group_vars(data),
  id,
  denominator,
  include = everything(),
  overall = FALSE,
  overall_row = FALSE,
  attributes = FALSE,
  total_n = FALSE,
  shuffle = FALSE
)

ard_stack_hierarchical_count(
  data,
  variables,
  by = dplyr::group_vars(data),
  denominator = NULL,
  include = everything(),
  overall = FALSE,
  overall_row = FALSE,
  attributes = FALSE,
  total_n = FALSE,
  shuffle = FALSE
)
}
\arguments{
\item{data}{(\code{data.frame})\cr
a data frame}

\item{variables}{(\code{\link[dplyr:dplyr_tidy_select]{tidy-select}})\cr
Specifies the nested/hierarchical structure of the data.
The variables that are specified here and in the \code{include} argument
will have summary statistics calculated.}

\item{by}{(\code{\link[dplyr:dplyr_tidy_select]{tidy-select}})\cr
variables to perform tabulations by. All combinations of the variables
specified here appear in results. Default is \code{dplyr::group_vars(data)}.}

\item{id}{(\code{\link[dplyr:dplyr_tidy_select]{tidy-select}})\cr
argument used to subset \code{data} to identify rows in \code{data} to calculate
event rates in \code{ard_stack_hierarchical()}.}

\item{denominator}{(\code{data.frame}, \code{integer})\cr
used to define the denominator and enhance the output.
The argument is required for \code{ard_stack_hierarchical()} and optional
for \code{ard_stack_hierarchical_count()}.
\itemize{
\item the univariate tabulations of the \code{by} variables are calculated with \code{denominator},
when a data frame is passed, e.g. tabulation of the treatment assignment
counts that may appear in the header of a table.
\item the \code{denominator} argument must be specified when \code{id} is used to
calculate the event rates.
\item if \code{total_n=TRUE}, the \code{denominator} argument is used to return the total N
}}

\item{include}{(\code{\link[dplyr:dplyr_tidy_select]{tidy-select}})\cr
Specify the subset a columns indicated in the \code{variables} argument for which
summary statistics will be returned. Default is \code{everything()}.}

\item{overall}{(scalar \code{logical})\cr logical indicating whether overall statistics
should be calculated (i.e. re-run all \verb{ard_*()} calls with \code{by=NULL}).
Default is \code{FALSE}.}

\item{overall_row}{(scalar \code{logical})\cr logical indicating whether overall statistics
should be calculated across the columns listed in the \code{variables} argument.
Default is \code{FALSE}.}

\item{attributes}{(scalar \code{logical})\cr
logical indicating whether to include the results of \code{ard_attributes()} for all
variables represented in the ARD. Default is \code{FALSE}.}

\item{total_n}{(scalar \code{logical})\cr
logical indicating whether to include of \code{ard_total_n(denominator)} in the returned ARD.}

\item{shuffle}{(scalar \code{logical})\cr
logical indicating whether to perform \code{shuffle_ard()} on the final result.
Default is \code{FALSE}.}
}
\value{
an ARD data frame of class 'card'
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}\cr
Use these functions to calculate multiple summaries of nested or hierarchical data
in a single call.
\itemize{
\item \code{ard_stack_hierarchical()}: Calculates \emph{rates} of events (e.g. adverse events)
utilizing the \code{denominator} and \code{id} arguments to identify the rows in \code{data}
to include in each rate calculation.
\item \code{ard_stack_hierarchical_count()}: Calculates \emph{counts} of events utilizing
all rows for each tabulation.
}
}
\details{
ADD DETAILS ABOUT HOW THE DATA ARE SORTED AND SUBSETTED.
}
\examples{
ard_stack_hierarchical(
  ADAE,
  variables = c(AESOC, AEDECOD),
  by = TRTA,
  denominator = ADSL |> dplyr::rename(TRTA = ARM),
  id = USUBJID
)

ard_stack_hierarchical_count(
  ADAE,
  variables = c(AESOC, AEDECOD),
  by = TRTA,
  denominator = ADSL |> dplyr::rename(TRTA = ARM)
)
}
