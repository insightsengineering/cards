% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_package_installed.R
\name{check_pkg_installed}
\alias{check_pkg_installed}
\alias{get_pkg_dependencies}
\alias{get_all_pkg_dependencies}
\alias{get_min_version_required}
\title{Check a package installation status or minimum required version}
\usage{
check_pkg_installed(pkg, pkg_search = "cards", boolean = FALSE, n = 1L)

get_pkg_dependencies(pkg_search = "cards")

get_all_pkg_dependencies(
  pkg_search = "cards",
  remove_duplicates = FALSE,
  lib.loc = NULL
)

get_min_version_required(pkg, pkg_search = "cards")
}
\arguments{
\item{pkg}{(\code{string})\cr
Package required}

\item{pkg_search}{(\code{string})\cr
the package the function will search for a minimum required version from.}

\item{boolean}{\code{(logical(1))}
logical indicating whether to return a \code{TRUE}/\code{FALSE}, rather
than error when package/package version not available. Default is \code{FALSE},
which will return an error if \code{pkg} is not installed.}

\item{n}{(\code{integer})\cr
Passed to \code{sys.call(n)}; the number of generations to go back. Default is \code{1L}.
This is used to message user about the original function call the resulted
in the prompt to install new packages.}

\item{remove_duplicates}{\code{(logical(1))}\cr
if several versions of a package are installed,
should only the first one be returned?}

\item{lib.loc}{\code{(path)}
location of \code{R} library trees to search through, see
\code{utils::installed.packages()}.}
}
\value{
logical or error for \code{check_pkg_installed()}, \code{NULL} or character with
the minimum version required for \code{get_min_version_required()}, a tibble for
\code{get_pkg_dependencies()}.
}
\description{
\itemize{
\item \code{check_pkg_installed()}: checks whether a package is installed and
returns an error or \code{FALSE} if not available. If a package search is provided,
the function will check whether a minimum version of a package is required.
\item \code{get_pkg_dependencies()} returns a tibble with all
dependencies of a specific package.
\item \code{get_min_version_required()} will return, if any, the minimum version
of \code{pkg} required by \code{pkg_search}, \code{NULL} if no minimum version required.
}
}
\details{
\code{get_all_packages_dependencies()} could be used to get the list of
dependencies of all installed packages.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
check_pkg_installed("broom", boolean = TRUE)
get_pkg_dependencies()
get_min_version_required("brms")
\dontshow{\}) # examplesIf}
}
