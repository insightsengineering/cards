% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ard_simple.R
\name{ard_simple}
\alias{ard_simple}
\alias{ard_continuous}
\alias{ard_categorical}
\title{Simple ARD Statistics}
\usage{
ard_continuous(data, variables, by = NULL, statistics = NULL)

ard_categorical(data, variables, by = NULL, denominator = NULL)
}
\arguments{
\item{data}{a data frame}

\item{variables}{columns to include in summaries. Default is \code{everything()}.}

\item{by}{columns to compute statistics by. Default are the columns
returned by \code{dplyr::group_vars(data)}.}

\item{statistics}{a named list of functions that return a summary statistic,
e.g. \verb{list(mpg = list(mean = \\(x) mean(x, na.rm = TRUE)))}}

\item{denominator}{Specify this argument to change the denominator,
e.g. the \code{"N"} statistic. Default is \code{NULL}. See below for details.}
}
\value{
a data frame
}
\description{
Compute Analysis Results Data (ARD) for simple summary statistics from
continuous and categorical data.
}
\section{Denominators}{

By default, the \code{ard_categorical()} function returns the statistics \code{"n"} and \code{"N"},
where little \code{"n"} are the counts for the variable levels, and \code{"N"} is
the number of non-missing observations. The default calculation for the
percentage is merely \code{p = n/N}.

However, it is sometimes necessary to provide a different \code{"N"} to use
as the denominator in this calculation. For example, in a calculation
of the rates of various observed adverse events, you may need to update the
denominator to the number of enrolled subjects.

In such cases, use the \code{denominator} argument to specify a new definition
of \code{"N"}, and subsequently \code{"p"}.
The argument expects a data frame, and the data frame must include the columns
specified in \code{ard_categorical(by=)}.
The updated \code{N} and \code{length} elements will be updated to be calculated as
the number of rows in each combination of the \code{by} variables.

Take an example where we need to update the denominator to be subjects enrolled
in a trial, e.g. tabulating the number of AEs that occurred within an SOC
where some subjects may not have experienced an AE and would not be represented
in the ADAE data set. All patients appear in ADSL, however.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{ard_categorical(
  data =
    ADAE |>
      dplyr::left_join(ADSL[c("USUBJID", "ARM")], by = "USUBJID") |>
      dplyr::filter(AOCCSFL \%in\% "Y"),
  by = ARM,
  variables = "AESOC",
  denominator = ADSL
) |>
flatten_ard()
#> # A tibble: 144 x 9
#>    group1 group1_level variable variable_level    stat_name stat_label statistic
#>    <chr>  <chr>        <chr>    <chr>             <chr>     <chr>      <chr>    
#>  1 ARM    Placebo      AESOC    CARDIAC DISORDERS n         n          12       
#>  2 ARM    Placebo      AESOC    CONGENITAL, FAMI~ n         n          0        
#>  3 ARM    Placebo      AESOC    EAR AND LABYRINT~ n         n          1        
#>  4 ARM    Placebo      AESOC    EYE DISORDERS     n         n          2        
#>  5 ARM    Placebo      AESOC    GASTROINTESTINAL~ n         n          17       
#>  6 ARM    Placebo      AESOC    GENERAL DISORDER~ n         n          21       
#>  7 ARM    Placebo      AESOC    HEPATOBILIARY DI~ n         n          1        
#>  8 ARM    Placebo      AESOC    IMMUNE SYSTEM DI~ n         n          0        
#>  9 ARM    Placebo      AESOC    INFECTIONS AND I~ n         n          16       
#> 10 ARM    Placebo      AESOC    INJURY, POISONIN~ n         n          4        
#> # i 134 more rows
#> # i 2 more variables: warning <chr>, error <chr>
}\if{html}{\out{</div>}}
}

\examples{
ard_continuous(ADSL, by = "ARM", variables = "AGE") |>
  flatten_ard()
ard_categorical(ADSL, by = "ARM", variables = "AGEGR1") |>
  flatten_ard()
}
