% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-helpers.R
\name{check_columns_in_data_frame}
\alias{check_columns_in_data_frame}
\title{Check Columns in Data Frame}
\usage{
check_columns_in_data_frame(
  data,
  columns,
  msg = "Columns {.val {missing_cols}} not found in {.arg data}.",
  call = parent.frame()
)
}
\arguments{
\item{data}{a data frame}

\item{columns}{character vector of column names to check}

\item{msg}{string passed to \code{cli::cli_abort(message=)}}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}
}
\description{
Check Columns in Data Frame
}
\keyword{internal}
