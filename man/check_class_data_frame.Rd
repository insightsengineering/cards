% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standalone-checks.R
\name{check_class_data_frame}
\alias{check_class_data_frame}
\title{Check Class Data Frame}
\usage{
check_class_data_frame(
  x,
  allow_null = FALSE,
  arg_name = rlang::caller_arg(x),
  call = parent.frame()
)
}
\arguments{
\item{x}{\code{(object)}\cr
object to check}

\item{allow_null}{(\code{logical(1)})\cr
Logical indicating whether a NULL value will pass the test.
Default is \code{FALSE}}

\item{arg_name}{(\code{string})\cr
string indicating the label/symbol of the object being checked.
Default is \code{rlang::caller_arg(x)}}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}
}
\description{
Check Class Data Frame
}
\keyword{internal}
