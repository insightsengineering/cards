% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_selectors.R
\name{process_selectors}
\alias{process_selectors}
\alias{process_formula_selectors}
\alias{compute_formula_selector}
\alias{check_list_elements}
\title{Process tidyselectors}
\usage{
process_selectors(data, ..., env = rlang::caller_env())

process_formula_selectors(data, ..., env = rlang::caller_env())

compute_formula_selector(
  data,
  x,
  arg_name = rlang::caller_arg(x),
  env = rlang::caller_env()
)

check_list_elements(..., error_msg = list(), env = rlang::caller_env())
}
\arguments{
\item{data}{a data frame}

\item{...}{named arguments where the value of the argument is processed with tidyselect.
\itemize{
\item \code{process_selectors()}: the values are tidyselect-compatible selectors
\item \code{process_formula_selectors()}: the values are named lists, list of formulas
a combination of both, or a single formula. Users may pass \code{~value} as a
shortcut for \code{everything() ~ value}.
\item \code{check_list_elements()}: named arguments where the name matches an existing
list in the \code{env} environment, and the value is a predicate function
to test each element of the list, e.g. each element must be a string or
a function.
}}

\item{env}{env to save the results to. Default is the calling environment.}

\item{x}{a named list, list of formulas, or a single formula that will be
converted to a named list.}

\item{arg_name}{a string with the argument named being processed. Used
in error messaging.}

\item{error_msg}{a named list where the list elements are strings that will
be used in error messaging when mis-specified arguments are passed. Elements
\code{"{arg_name}"} and \code{"{variable}"} are available using glue syntax for messaging.}
}
\description{
Functions processes tidyselect arguments passed to functions in the cards package.
The processed values saved to the calling environment, by default.
\itemize{
\item \code{process_selectors()}: the arguments will be processed with tidyselect and
converted to a vector of character column names.
\item \code{process_formula_selectors()}: for arguments that expect named lists or
lists of formulas (where the LHS of the formula is a tidyselector). This
function processes these inputs and returns a named list. If an name is
repeated, the last entry is kept.
\item \code{compute_formula_selector()}: used in \code{process_formula_selectors()} to
evaluate a single argument.
\item \code{check_list_elements()}: accepts named arguments where the name is a list
that exists in the env, and the argument value is a predicate function
used to the values of the list.
}
}
\examples{
example_env <- rlang::new_environment()

process_selectors(ADSL, variables = starts_with("TRT"), env = example_env)
get(x = "variables", envir = example_env)


process_formula_selectors(
  ADSL,
  statistics = list(starts_with("TRT") ~ mean, TRTSDT = min),
  env = example_env
)
get(x = "statistics", envir = example_env)

# process one list
compute_formula_selector(ADSL, x = starts_with("U") ~ 1L)
}
